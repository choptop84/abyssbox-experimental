var beepbox=function(e){"use strict";
/*!
    Copyright (c) 2012-2022 John Nesky and contributing authors

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
    */var t=e&&e.t||function(e,t,n,i){return new(n||(n=Promise))((function(a,s){function o(e){try{l(i.next(e))}catch(e){s(e)}}function r(e){try{l(i.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,r)}l((i=i.apply(e,t||[])).next())}))};const n=["chip","FM","noise","spectrum","drumset","harmonics","pulse width","picked string","supersaw","chip (custom)","mod","FM (6-op)"];const i=new class{constructor(){this.statusTable={},this.urlTable={},this.totalSamples=0,this.samplesLoaded=0}};class a extends Event{constructor(e,t,n){super("sampleloaded"),this.totalSamples=e,this.samplesLoaded=t,this.samplesFailed=n}}class s extends EventTarget{constructor(){super()}}const o=new s;function r(e,n,s,r,l){return t(this,void 0,void 0,(function*(){const t=new AudioContext({sampleRate:l});let p=!1;const u=h.chipWaves[n],d=h.rawChipWaves[n],m=h.rawRawChipWaves[n];fetch(e).then((e=>e.ok?e.arrayBuffer():(i.statusTable[n]=2,Promise.reject(new Error("Couldn't load sample"))))).then((e=>t.decodeAudioData(e))).then((e=>{const l=c(Array.from(e.getChannelData(0))),h=f(l);u.samples=h,d.samples=l,m.samples=l,r.isUsingAdvancedLoopControls&&(s.chipWaveLoopStart=null!=r.chipWaveLoopStart?r.chipWaveLoopStart:0,s.chipWaveLoopEnd=null!=r.chipWaveLoopEnd?r.chipWaveLoopEnd:l.length-1,s.chipWaveLoopMode=null!=r.chipWaveLoopMode?r.chipWaveLoopMode:0,s.chipWavePlayBackwards=r.chipWavePlayBackwards,s.chipWaveStartOffset=null!=r.chipWaveStartOffset?r.chipWaveStartOffset:0),i.samplesLoaded++,i.statusTable[n]=1,o.dispatchEvent(new a(i.totalSamples,i.samplesLoaded,i.samplesFailed)),p||(p=!0,t.close())})).catch((s=>{i.statusTable[n]=2,i.samplesFailed++,console.error("Failed to load "+e+":\n"+s),o.dispatchEvent(new a(i.totalSamples,i.samplesLoaded,i.samplesFailed)),p||(p=!0,t.close())}))}))}function l(e){return new Promise(((t,n)=>{if(!h.willReloadForCustomSamples){const n=document.createElement("script");n.src=e,document.head.appendChild(n),n.addEventListener("load",(e=>{t()}))}}))}function p(e){const t=h.chipWaves[0].samples,n=h.rawRawChipWaves[0].samples;if(0==e){const e=[{name:"paandorasbox kick",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox snare",expression:3,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox piano1",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:2},{name:"paandorasbox WOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox overdrive",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-2},{name:"paandorasbox trumpet",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:1.2},{name:"paandorasbox saxophone",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-5},{name:"paandorasbox orchestrahit",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox detatched violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox synth",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-.8},{name:"paandorasbox sonic3snare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox come on",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox choir",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"paandorasbox overdriveguitar",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6.2},{name:"paandorasbox flute",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6},{name:"paandorasbox legato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-28},{name:"paandorasbox tremolo violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-33},{name:"paandorasbox amen break",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-55},{name:"paandorasbox pizzicato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-11},{name:"paandorasbox tim allen grunt",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-20},{name:"paandorasbox tuba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:44},{name:"paandorasbox loopingcymbal",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17},{name:"paandorasbox standardkick",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-7},{name:"paandorasbox standardsnare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox closedhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:5},{name:"paandorasbox foothihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:4},{name:"paandorasbox openhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-31},{name:"paandorasbox crashcymbal",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-43},{name:"paandorasbox pianoC4",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.5},{name:"paandorasbox liver pad",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-22.5},{name:"paandorasbox marimba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-15.5},{name:"paandorasbox susdotwav",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-24.5},{name:"paandorasbox wackyboxtts",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17.5},{name:"paandorasbox peppersteak_1",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.2},{name:"paandorasbox peppersteak_2",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-47},{name:"paandorasbox vinyl_noise",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-50},{name:"paandorasbeta slap bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-56},{name:"paandorasbeta HD EB overdrive guitar",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60},{name:"paandorasbeta sunsoft bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-18.5},{name:"paandorasbeta masculine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta feminine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60.5},{name:"paandorasbeta tololoche",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-29.5},{name:"paandorasbeta harp",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-54},{name:"paandorasbeta pan flute",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-58},{name:"paandorasbeta krumhorn",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-46},{name:"paandorasbeta timpani",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta crowd hey",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-29},{name:"paandorasbeta wario land 4 brass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-68},{name:"paandorasbeta wario land 4 rock organ",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-63},{name:"paandorasbeta wario land 4 DAOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-35},{name:"paandorasbeta wario land 4 hour chime",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-47.5},{name:"paandorasbeta wario land 4 tick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-12.5},{name:"paandorasbeta kirby kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby bongo",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby click",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta sonor kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare (left hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor snare (right hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor high tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor low tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor hihat (closed)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-17},{name:"paandorasbeta sonor hihat (half opened)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-21},{name:"paandorasbeta sonor hihat (open)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-54.5},{name:"paandorasbeta sonor hihat (open tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-43.5},{name:"paandorasbeta sonor hihat (pedal)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28},{name:"paandorasbeta sonor crash",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-51},{name:"paandorasbeta sonor crash (tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-50.5},{name:"paandorasbeta sonor ride",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46}];i.totalSamples+=e.length;const s=h.rawRawChipWaves.length;for(const a of e){const e=h.rawRawChipWaves.length,s={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:n},o={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:n},r={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:t};h.rawRawChipWaves[e]=o,h.rawRawChipWaves.dictionary[a.name]=o,h.rawChipWaves[e]=s,h.rawChipWaves.dictionary[a.name]=s,h.chipWaves[e]=r,h.chipWaves.dictionary[a.name]=s,i.statusTable[e]=0,i.urlTable[e]="legacySamples"}l("samples.js").then((()=>l("samples2.js"))).then((()=>l("samples3.js"))).then((()=>l("drumsamples.js"))).then((()=>l("wario_samples.js"))).then((()=>l("kirby_samples.js"))).then((()=>{const e=[c(kicksample),c(snaresample),c(pianosample),c(WOWsample),c(overdrivesample),c(trumpetsample),c(saxophonesample),c(orchhitsample),c(detatchedviolinsample),c(synthsample),c(sonic3snaresample),c(comeonsample),c(choirsample),c(overdrivensample),c(flutesample),c(legatoviolinsample),c(tremoloviolinsample),c(amenbreaksample),c(pizzicatoviolinsample),c(timallengruntsample),c(tubasample),c(loopingcymbalsample),c(kickdrumsample),c(snaredrumsample),c(closedhihatsample),c(foothihatsample),c(openhihatsample),c(crashsample),c(pianoC4sample),c(liverpadsample),c(marimbasample),c(susdotwavsample),c(wackyboxttssample),c(peppersteak1),c(peppersteak2),c(vinyl),c(slapbass),c(hdeboverdrive),c(sunsoftbass),c(masculinechoir),c(femininechoir),c(southtololoche),c(harp),c(panflute),c(krumhorn),c(timpani),c(crowdhey),c(warioland4brass),c(warioland4organ),c(warioland4daow),c(warioland4hourchime),c(warioland4tick),c(kirbykick),c(kirbysnare),c(kirbybongo),c(kirbyclick),c(funkkick),c(funksnare),c(funksnareleft),c(funksnareright),c(funktomhigh),c(funktomlow),c(funkhihatclosed),c(funkhihathalfopen),c(funkhihatopen),c(funkhihatopentip),c(funkhihatfoot),c(funkcrash),c(funkcrashtip),c(funkride)];let t=0;for(const n of e){const e=s+t;h.rawChipWaves[e].samples=n,h.rawRawChipWaves[e].samples=n,h.chipWaves[e].samples=f(n),i.statusTable[e]=1,i.samplesLoaded++,o.dispatchEvent(new a(i.totalSamples,i.samplesLoaded,i.samplesFailed)),t++}}))}else if(1==e){const e=[{name:"chronoperc1final",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"synthkickfm",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"mcwoodclick1",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"acoustic snare",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0}];i.totalSamples+=e.length;const s=h.rawRawChipWaves.length;for(const a of e){const e=h.rawRawChipWaves.length,s={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:n},o={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:n},r={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:t};h.rawRawChipWaves[e]=o,h.rawRawChipWaves.dictionary[a.name]=o,h.rawChipWaves[e]=s,h.rawChipWaves.dictionary[a.name]=s,h.chipWaves[e]=r,h.chipWaves.dictionary[a.name]=s,i.statusTable[e]=0,i.urlTable[e]="nintariboxSamples"}l("nintaribox_samples.js").then((()=>{const e=[c(chronoperc1finalsample),c(synthkickfmsample),c(woodclicksample),c(acousticsnaresample)];let t=0;for(const n of e){const e=s+t;h.rawChipWaves[e].samples=n,h.rawRawChipWaves[e].samples=n,h.chipWaves[e].samples=f(n),i.statusTable[e]=1,i.samplesLoaded++,o.dispatchEvent(new a(i.totalSamples,i.samplesLoaded,i.samplesFailed)),t++}}))}else if(2==e){const e=[{name:"cat",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"gameboy",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:7},{name:"mario",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"drum",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:4},{name:"yoshi",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"star",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"fire flower",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"dog",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"oink",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:3},{name:"swan",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:1},{name:"face",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-12}];i.totalSamples+=e.length;const s=h.rawRawChipWaves.length;for(const a of e){const e=h.rawRawChipWaves.length,s={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:n},o={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:n},r={index:e,name:a.name,expression:a.expression,isSampled:a.isSampled,isPercussion:a.isPercussion,extraSampleDetune:a.extraSampleDetune,samples:t};h.rawRawChipWaves[e]=o,h.rawRawChipWaves.dictionary[a.name]=o,h.rawChipWaves[e]=s,h.rawChipWaves.dictionary[a.name]=s,h.chipWaves[e]=r,h.chipWaves.dictionary[a.name]=s,i.statusTable[e]=0,i.urlTable[e]="marioPaintboxSamples"}l("mario_paintbox_samples.js").then((()=>{const e=[c(catpaintboxsample),c(gameboypaintboxsample),c(mariopaintboxsample),c(drumpaintboxsample),c(yoshipaintboxsample),c(starpaintboxsample),c(fireflowerpaintboxsample),c(dogpaintbox),c(oinkpaintbox),c(swanpaintboxsample),c(facepaintboxsample)];let t=0;for(const n of e){const e=s+t;h.rawChipWaves[e].samples=n,h.rawRawChipWaves[e].samples=n,h.chipWaves[e].samples=f(n),i.statusTable[e]=1,i.samplesLoaded++,o.dispatchEvent(new a(i.totalSamples,i.samplesLoaded,i.samplesFailed)),t++}}))}else console.log("invalid set of built-in samples")}class h{}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];const n=t/e.length;for(let t=0;t<e.length;t++)e[t]-=n;return f(e),e.push(0),new Float32Array(e)}function u(e){let t=0;c(e);for(let n=0;n<e.length-1;n++)t+=Math.abs(e[n]);const n=t/(e.length-1);for(let t=0;t<e.length-1;t++)e[t]=e[t]/n;return new Float32Array(e)}function f(e){let t=0,n=new Float32Array(e.length);for(let i=0;i<e.length;i++)n[i]=t,t+=e[i];return n}function d(e){return e/h.pulseWidthRange}function m(e,t,n){let i=h.chipNoises[e].samples;if(null==i){if(i=new Float32Array(h.chipNoiseLength+1),h.chipNoises[e].samples=i,0==e){let e=1;for(let t=0;t<h.chipNoiseLength;t++){i[t]=2*(1&e)-1;let n=e>>1;1==(e+n&1)&&(n+=16384),e=n}}else if(1==e)for(let e=0;e<h.chipNoiseLength;e++)i[e]=2*Math.random()-1;else if(2==e){let e=1;for(let t=0;t<h.chipNoiseLength;t++){i[t]=2*(1&e)-1;let n=e>>1;1==(e+n&1)&&(n+=32768),e=n}}else if(3==e){let e=1;for(let t=0;t<h.chipNoiseLength;t++){i[t]=2*(1&e)-1;let n=e>>1;1==(e+n&1)&&(n+=40),e=n}}else if(4==e)y(i,h.chipNoiseLength,10,11,1,1,0),y(i,h.chipNoiseLength,11,14,.6578,.6578,0),t(i,h.chipNoiseLength),n(i,1/Math.sqrt(h.chipNoiseLength));else if(5==e)for(var a=1,s=0;s<h.chipNoiseLength;s++){i[s]=2*(1&a)-1,1==(a+(o=a>>1)&1)&&(o+=40),a=o}else if(6==e)y(i,h.chipNoiseLength,1,10,1,1,0),y(i,h.chipNoiseLength,20,14,-2,-2,0),t(i,h.chipNoiseLength),n(i,1/Math.sqrt(h.chipNoiseLength));else if(7==e)for(a=1,s=0;s<h.chipNoiseLength;s++){i[s]=4*(1&a)*(14*Math.random()+1)-8,1==(a+(o=a>>1)&1)&&(o+=60),a=o}else if(8==e)for(a=1,s=0;s<h.chipNoiseLength;s++){i[s]=(1&a)/2-.5,1==(a+(o=a>>1)&1)&&(o-=40),a=o}else if(9==e){let e=1;for(let t=0;t<h.chipNoiseLength;t++){i[t]=2*(1&e)-1.1;let n=e>>1;1==(e+n&1)&&(n+=131080),e=n}}else if(10==e)for(let e=0;e<h.chipNoiseLength;e++)i[e]=Math.round(Math.random());else if(11==e)for(a=1,s=0;s<h.chipNoiseLength;s++){var o;i[s]=Math.round(1&a),1==(a+(o=a>>1)&1)&&(o-=40),a=o}else if(12==e)for(let e=0;e<h.chipNoiseLength;e++){var r=Math.random();i[e]=Math.pow(r,Math.clz32(r))}else if(13==e){var l,p,c,u,f=0,d=0,m=0;f=d=m=l=p=c=u=0;for(let e=0;e<h.chipNoiseLength;e++){f=.99886*f+.0555179*(v=2*Math.random()-1),d=.99332*d+.0750759*v,m=.969*m+.153852*v,l=.8665*l+.3104856*v,p=.55*p+.5329522*v,c=-.7616*c-.016898*v,i[e]=f+d+m+l+p+c+u+.5362*v,i[e]*=.44,u=.115926*v}}else{if(14!=e)throw new Error("Unrecognized drum index: "+e);var g=0;for(let e=0;e<h.chipNoiseLength;e++){var v=2*Math.random()-1;i[e]=(g+.02*v)/1.02,g=i[e],i[e]*=14}}i[h.chipNoiseLength]=i[0]}return i}function y(e,t,n,i,a,s,o){const r=0|Math.pow(2,n),l=Math.min(t>>1,0|Math.pow(2,i)),p=m(0,null,null);let h=0;for(let c=r;c<l;c++){let r=a+(s-a)*(Math.log2(c)-n)/(i-n),l=Math.pow(2,7*(r-1)+1)*r;l*=Math.pow(c/2048,o),h+=l,l*=p[c];const u=.61803398875*c*c*Math.PI*2;e[c]=Math.cos(u)*l,e[t-c]=Math.sin(u)*l}return h}function g(e=0){const t=new Float32Array(h.sineWaveLength+1),n=h.sineWaveLength/4;for(let i=0;i<h.sineWaveLength+1;i++)t[i]=2*+(Math.abs(i-n)<e*h.sineWaveLength/2||Math.abs(i-h.sineWaveLength-n)<e*h.sineWaveLength/2)-1;return t}function v(e=!1){const t=new Float32Array(h.sineWaveLength+1);for(let n=0;n<h.sineWaveLength+1;n++)t[n]=2*(n+h.sineWaveLength/4)/h.sineWaveLength%2-1,t[n]=e?-t[n]:t[n];return t}function b(e,t,n){let i=h.arpeggioPatterns[e-1];return null!=i?(2==e&&0==t&&(i=[0,0,1,1]),i[n%i.length]):n%e}function w(e){const t={};for(let n=0;n<e.length;n++){const i=e[n];i.index=n,t[i.name]=i}const n=e;return n.dictionary=t,n}function S(e){return 0!=(1024&e)}function x(e){return 0!=(2048&e)}function k(e){return 0!=(128&e)}function M(e){return 0!=(256&e)}function F(e){return 0!=(512&e)}function q(e){return 0!=(32&e)}function P(e){return 0!=(8&e)}function T(e){return 0!=(16&e)}function z(e){return 0!=(4&e)}function I(e){return 0!=(2&e)}function C(e){return 0!=(64&e)}function H(e){return 0!=(1&e)}function D(e){return 0!=(4096&e)}function O(e){return 0!=(8192&e)}function G(e){return 0!=(16384&e)}function L(e){return 0!=(32768&e)}h.thresholdVal=-10,h.kneeVal=40,h.ratioVal=12,h.attackVal=0,h.releaseVal=.25,h.willReloadForCustomSamples=!1,h.jsonFormat="AbyssBox",h.scales=w([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues Major",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"No Dabbing",realName:"no dabbing",flags:[!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1]},{name:"Jacked Toad",realName:"jacked toad",flags:[!0,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0]},{name:"Dumb",realName:"Originally named, currently named, and will always be named 'dumb.'",flags:[!0,!1,!1,!1,!1,!0,!0,!0,!0,!1,!1,!0]},{name:"Test Scale",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"die",realName:"death",flags:[!0,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1]},{name:"Custom",realName:"custom",flags:[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0]}]),h.keys=w([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),h.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],h.tempoMin=1,h.tempoMax=500,h.octaveMin=-2,h.octaveMax=2,h.echoDelayRange=24,h.echoDelayStepTicks=4,h.echoSustainRange=8,h.echoShelfHz=4e3,h.echoShelfGain=Math.pow(2,-.5),h.reverbShelfHz=8e3,h.reverbShelfGain=Math.pow(2,-1.5),h.reverbRange=32,h.reverbDelayBufferSize=16384,h.reverbDelayBufferMask=h.reverbDelayBufferSize-1,h.phaserMixRange=32,h.phaserFeedbackRange=32,h.phaserFreqRange=32,h.phaserMinFreq=8,h.phaserMaxFreq=2e4,h.phaserMinStages=0,h.phaserMaxStages=32,h.beatsPerBarMin=1,h.beatsPerBarMax=64,h.barCountMin=1,h.barCountMax=1024,h.instrumentCountMin=1,h.layeredInstrumentCountMax=10,h.patternInstrumentCountMax=10,h.partsPerBeat=24,h.ticksPerPart=2,h.ticksPerArpeggio=3,h.arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]],h.rhythms=w([{name:"÷1 (whole notes)",stepsPerBeat:1,roundUpThresholds:[3]},{name:"÷2 (half notes)",stepsPerBeat:2,roundUpThresholds:[3,9]},{name:"÷3 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"÷6 (sextuplets)",stepsPerBeat:6,roundUpThresholds:null},{name:"÷8 (32nd notes)",stepsPerBeat:8,roundUpThresholds:null},{name:"÷12 (doudectuplets)",stepsPerBeat:12,roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,roundUpThresholds:null}]),h.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","Picked String","supersaw","custom chip","mod","FM6op"],h.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1],h.chipBaseExpression=.03375,h.fmBaseExpression=.03,h.noiseBaseExpression=.19,h.spectrumBaseExpression=.3,h.drumsetBaseExpression=.45,h.harmonicsBaseExpression=.025,h.pwmBaseExpression=.04725,h.supersawBaseExpression=.061425,h.pickedStringBaseExpression=.025,h.distortionBaseVolume=.011,h.bitcrusherBaseVolume=.01,h.rawChipWaves=w([{name:"rounded",expression:.94,samples:c([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:c([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",expression:.5,samples:c([1,-1])},{name:"1/4 pulse",expression:.5,samples:c([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:c([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:c([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:c([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:c([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:c([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:u([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:u([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:u([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:u([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:u([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:u([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:u([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:u([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:u([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:u([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:u([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:c},{name:"trapezoid",expression:1,samples:c([1/15,.4,10/15,14/15,1,1,1,1,1,1,1,1,14/15,10/15,.4,1/15,-1/15,-.4,-10/15,-14/15,-1,-1,-1,-1,-1,-1,-1,-1,-14/15,-10/15,-.4,-1/15])},{name:"modbox 10% pulse",expression:.5,samples:u([1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox sunsoft bass",expression:1,samples:u([0,.1875,.3125,.5625,.5,.75,.875,1,1,.6875,.5,.625,.625,.5,.375,.5625,.4375,.5625,.4375,.4375,.3125,.1875,.1875,.375,.5625,.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"modbox loud pulse",expression:.5,samples:u([1,.7,.1,.1,0,0,0,0,0,.1,.2,.15,.25,.125,.215,.345,4])},{name:"modbox sax",expression:.5,samples:u([1/15,.2,5/15,9,.06])},{name:"modbox guitar",expression:.5,samples:u([-.5,3.5,3,-.5,-.25,-1])},{name:"modbox sine",expression:.5,samples:u([0,.05,.125,.2,.25,.3,.425,.475,.525,.625,.675,.725,.775,.8,.825,.875,.9,.925,.95,.975,.98,.99,.995,1,.995,.99,.98,.975,.95,.925,.9,.875,.825,.8,.775,.725,.675,.625,.525,.475,.425,.3,.25,.2,.125,.05,0,-.05,-.125,-.2,-.25,-.3,-.425,-.475,-.525,-.625,-.675,-.725,-.775,-.8,-.825,-.875,-.9,-.925,-.95,-.975,-.98,-.99,-.995,-1,-.995,-.99,-.98,-.975,-.95,-.925,-.9,-.875,-.825,-.8,-.775,-.725,-.675,-.625,-.525,-.475,-.425,-.3,-.25,-.2,-.125,-.05])},{name:"modbox atari bass",expression:.5,samples:u([1,1,1,1,0,1,0,1,1,0,0,1,0,0,0])},{name:"modbox atari pulse",expression:.5,samples:u([1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])},{name:"modbox 1% pulse",expression:.5,samples:u([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox curved sawtooth",expression:.5,samples:u([1,.5,1/3,1/4])},{name:"modbox viola",expression:.45,samples:u([-.9,-1,-.85,-.775,-.7,-.6,-.5,-.4,-.325,-.225,-.2,-.125,-.1,-.11,-.125,-.15,-.175,-.18,-.2,-.21,-.22,-.21,-.2,-.175,-.15,-.1,-.5,.75,.11,.175,.2,.25,.26,.275,.26,.25,.225,.2,.19,.18,.19,.2,.21,.22,.23,.24,.25,.26,.275,.28,.29,.3,.29,.28,.27,.26,.25,.225,.2,.175,.15,.1,.075,0,-.01,-.025,.025,.075,.2,.3,.475,.6,.75,.85,.85,1,.99,.95,.8,.675,.475,.275,.01,-.15,-.3,-.475,-.5,-.6,-.71,-.81,-.9,-1,-.9])},{name:"modbox brass",expression:.45,samples:u([-1,-.95,-.975,-.9,-.85,-.8,-.775,-.65,-.6,-.5,-.475,-.35,-.275,-.2,-.125,-.05,0,.075,.125,.15,.2,.21,.225,.25,.225,.21,.2,.19,.175,.125,.1,.075,.06,.05,.04,.025,.04,.05,.1,.15,.225,.325,.425,.575,.7,.85,.95,1,.9,.675,.375,.2,.275,.4,.5,.55,.6,.625,.65,.65,.65,.65,.64,.6,.55,.5,.4,.325,.25,.15,.05,-.05,-.15,-.275,-.35,-.45,-.55,-.65,-.7,-.78,-.825,-.9,-.925,-.95,-.975])},{name:"modbox acoustic bass",expression:.5,samples:u([1,0,.1,-.1,-.2,-.4,-.3,-1])},{name:"modbox lyre",expression:.45,samples:u([1,-1,4,2.15,4.13,5.15,0,-.05,1])},{name:"modbox ramp pulse",expression:.5,samples:u([6.1,-2.9,1.4,-2.9])},{name:"modbox piccolo",expression:.5,samples:u([1,4,2,1,-.1,-1,-.12])},{name:"modbox squaretooth",expression:.5,samples:u([.2,1,2.6,1,0,-2.4])},{name:"modbox flatline",expression:1,samples:u([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0,.1,.2,.3,.4,.5,.6,.7,.8,.9])},{name:"modbox pnryshk a (u5)",expression:.4,samples:u([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0])},{name:"modbox pnryshk b (riff)",expression:.5,samples:u([1,-.9,.8,-.7,.6,-.5,.4,-.3,.2,-.1,0,-.1,.2,-.3,.4,-.5,.6,-.7,.8,-.9,1])},{name:"sandbox shrill lute",expression:.94,samples:u([1,1.5,1.25,1.2,1.3,1.5])},{name:"sandbox bassoon",expression:.5,samples:u([1,-1,1,1,1,1,1,1,1,1,1,1,0])},{name:"sandbox shrill bass",expression:.5,samples:u([0,1,0,0,1,0,1,0,0,0])},{name:"sandbox nes pulse",expression:.4,samples:u([2.1,-2.2,1.2,3])},{name:"sandbox saw bass",expression:.25,samples:u([1,1,1,1,0,2,1,2,3,1,-2,1,4,1,4,2,1,6,-3,4,2,1,5,1,4,1,5,6,7,1,6,1,4,1,9])},{name:"sandbox euphonium",expression:.3,samples:u([0,1,2,1,2,1,4,2,5,0,-2,1,5,1,2,1,2,4,5,1,5,-2,5,10,1])},{name:"sandbox shrill pulse",expression:.3,samples:u([2,0,4,1,4,6,7,3])},{name:"sandbox r-sawtooth",expression:.2,samples:u([6.1,-2.9,1.4,-2.9])},{name:"sandbox recorder",expression:.2,samples:u([5,-5.1,4,-4.1,3,-3.1,2,-2.1,1,-1.1,6])},{name:"sandbox narrow saw",expression:1.2,samples:u([.1,-1.3,.13/-.3,-.26,.13/-.7,.13/-.9,.13/-.11,.13/-.31,.13/-.51,.13/-.71,.13/-.91,.13/-.12,-.40625,-.25,.13/-.72,.13/-.92,-1,1,.13/.92,.13/.72,.25,.40625,.13/.12,.13/.91,.13/.71,.13/.51,.13/.31,.13/.11,.13/.9,.13/.7,.26,.13/.3,.13])},{name:"sandbox deep square",expression:1,samples:u([1,2.25,1,-1,-2.25,-1])},{name:"sandbox ring pulse",expression:1,samples:u([1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1])},{name:"sandbox double sine",expression:1,samples:u([1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1,0,-1,-1.1,-1.2,-1.3,-1.4,-1.5,-1.6,-1.7,-1.8,-1.9,-1.8,-1.7,-1.6,-1.5,-1.4,-1.3,-1.2,-1.1,-1])},{name:"sandbox contrabass",expression:.5,samples:u([4.2,6.9,1.337,6.66])},{name:"sandbox double bass",expression:.4,samples:u([0,.1875,.3125,.5625,.5,.75,.875,1,-1,-.6875,-.5,-.625,-.625,-.5,-.375,-.5625,-.4375,-.5625,-.4375,-.4375,-.3125,-.1875,.1875,.375,.5625,-.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"haileybox test1",expression:.5,samples:u([1,.5,-1])},{name:"brucebox pokey 4bit lfsr",expression:.5,samples:u([1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1])},{name:"brucebox pokey 5step bass",expression:.5,samples:u([1,-1,1,-1,1])},{name:"brucebox isolated spiky",expression:.5,samples:u([1,-1,1,-1,1,-1])},{name:"nerdbox unnamed 1",expression:.5,samples:u([.2,4,.7,-.4,-1,.5,-.5/.6])},{name:"nerdbox unnamed 2",expression:.5,samples:u([2,5/55,-9,1,-55,18.5/-26])},{name:"zefbox semi-square",expression:1,samples:u([1,1.5,2,2.5,2.5,2.5,2,1.5,1])},{name:"zefbox squaretal",expression:.7,samples:u([1.5,1,1.5,-1.5,-1,-1.5])},{name:"zefbox saw wide",expression:.65,samples:u([0,-.4,-.8,-1.2,-1.6,-2,0,-.4,-.8,-1.2,-1.6])},{name:"zefbox saw narrow",expression:.65,samples:u([1,.5,1,.5,1,.5,1,2,1,2,1])},{name:"zefbox deep sawtooth",expression:.5,samples:u([0,2,3,4,4.5,5,5.5,6,6.25,6.5,6.75,7,6.75,6.5,6.25,6,5.5,5,4.5,4,3,2,1])},{name:"zefbox sawtal",expression:.3,samples:u([1.5,1,1.25,-.5,1.5,-.5,0,-1.5,1.5,0,.5,-1.5,.5,1.25,-1,-1.5])},{name:"zefbox deep sawtal",expression:.7,samples:u([.75,.25,.5,-.5,.5,-.5,-.25,-.75])},{name:"zefbox pulse",expression:.5,samples:u([1,-2,-2,-1.5,-1.5,-1.25,-1.25,-1,-1])},{name:"zefbox triple pulse",expression:.4,samples:u([1,1,1,1,1,-1,-1,1.5,1,1,1,1,-1,-1,-1,1.5])},{name:"zefbox high pulse",expression:.2,samples:u([1,-2,2,-3,3,-4,5,-4,3,-3,2,-2,1])},{name:"zefbox deep pulse",expression:.2,samples:u([1,2,2,-2,-2,-3,-4,-4,-5,-5,-5,-5,0,-1,-2])},{name:"wackybox guitar string",expression:.6,samples:u([0,63,63,63,63,19,63,63,63,63,63,63,63,63,63,63,11,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,34,63,63,63,63])},{name:"wackybox intense",expression:.6,samples:u([36,25,33,35,18,51,22,40,27,37,31,33,25,29,41,23,31,31,45,20,37,23,29,26,42,29,33,26,31,27,40,25,40,26,37,24,41,32,0,32,33,29,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31])},{name:"wackybox buzz wave",expression:.6,samples:u([0,1,1,2,4,4,4,4,5,5,6,6,6,7,8,8,8,9,9,9,9,9,9,8,8,8,11,15,23,62,61,60,58,56,56,54,53,52,50,49,48,47,47,45,45,45,44,44,43,43,42,42,42,42,42,42,42,42,42,42,42,43,43,53])},{name:"todbox 1/3 pulse",expression:.5,samples:c([1,-1,-1])},{name:"todbox 1/5 pulse",expression:.5,samples:c([1,-1,-1,-1,-1])},{name:"todbox slap bass",expression:.5,samples:u([1,.5,0,.5,1.25,.5,-.25,.1,-.1,.1,1.1,2.1,3,3.5,2.9,3.3,2.7,2.9,2.3,2,1.9,1.8,1,.7,.9,.8,.4,.1,0,.2,.4,.6,.5,.8])},{name:"todbox harsh wave",expression:.45,samples:u([1,-1,-1,-1,.5,.5,.5,.7,.39,1.3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"todbox accordian",expression:.5,samples:u([0,1,1,2,2,1.5,1.5,.8,0,-2,-3.25,-4,-4.5,-5.5,-6,-5.75,-5.5,-5,-5,-5,-6,-6,-6,-5,-4,-3,-2,-1,.75,1,2,3,4,5,6,6.5,7.5,8,7.75,6,5.25,5,5,5,5,5,4.25,3.75,3.25,2.75,1.25,-.75,-2,-.75,1.25,1.25,2,2,2,2,1.5,-1,-2,-1,1.5,2,2.75,2.75,2.75,3,2.75,-1,-2,-2.5,-2,-1,-2.25,-2.75,-2,-3,-1.75,1,2,3.5,4,5.25,6,8,9.75,10,9.5,9,8.5,7.5,6.5,5.25,5,4.5,4,4,4,3.25,2.5,2,1,-.5,-2,-3.5,-4,-4,-4,-3.75,-3,-2,-1])},{name:"todbox beta banana wave",expression:.8,samples:u([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0])},{name:"todbox beta test wave",expression:.5,samples:u([56,0,-52,16,3,3,2,-35,20,147,-53,0,0,5,-6])},{name:"todbox beta real snare",expression:1,samples:u([0,-.01208,-.02997,-.04382,-.06042,-.07529,-.09116,-.10654,-.12189,-.13751,-.15289,-.16849,-.18387,-.19974,-.21484,-.23071,-.24557,-.26144,-.27731,-.29141,-.3035,-.32416,-.34406,-.32947,-.31158,-.33725,-.37579,-.39746,-.40201,-.40906,-.4418,-.47229,-.47379,-.47733,-.45239,-.33954,-.22894,-.22443,-.32138,-.46371,-.57178,-.61081,-.59998,-.61459,-.62189,-.43979,-.19217,-.12643,-.17252,-.20956,-.20981,-.19217,-.22845,-.34332,-.50629,-.64307,-.72922,-.81384,-.87857,-.90149,-.88687,-.86169,-.87781,-.80478,-.52493,-.31308,-.33249,-.39395,-.39017,-.30301,-.19949,-.13071,-.02493,.14307,.34961,.52542,.63223,.68613,.7471,.87305,.98184,.98889,.97052,.99066,.99747,.99344,.99469,.99393,.9957,.99393,.99521,.99469,.9942,.99521,.9942,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99469,.99493,.9942,.99521,.99393,.99493,.99469,.99445,.9957,.99445,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99445,.99493,.9942,.99545,.9942,.99493,.99493,.9942,.99545,.99445,.99521,.99469,.99445,.99545,.99368,.99393,.99445,.99268,.97983,.97229,.95944,.88486,.76773,.64481,.53098,.39847,.19318,-.03827,-.20325,-.39319,-.68765,-.88461,-.93448,-.96069,-.97681,-.98715,-.99042,-.99142,-.99091,-.99142,-.99219,-.99091,-.99219,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99191,-.99142,-.99142,-.99191,-.99091,-.99219,-.99118,-.99142,-.99167,-.99091,-.99219,-.99091,-.99167,-.99142,-.99091,-.99191,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99118,-.99142,-.99191,-.99066,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99191,-.99142,-.99142,-.99243,-.98865,-.98764,-.99219,-.98083,-.92517,-.9277,-.91486,-.59042,-.15189,.02945,.05667,.06195,.00629,-.18008,-.56497,-.8801,-.9277,-.92871,-.97705,-.99167,-.98663,-.99118,-.99042,-.99219,-.99142,-.99118,-.98941,-.99219,-1,-.9758,-.95993,-.99948,-.98236,-.84659,-.7486,-.70679,-.59747,-.48035,-.41687,-.36826,-.29745,-.18185,-.06219,.02164,.07907,.13123,.18033,.1962,.15692,.14053,.20251,.2753,.30905,.29092,.27252,.30402,.32416,.32214,.35239,.3967,.43198,.4942,.58487,.64154,.65967,.6705,.67026,.66522,.6554,.66119,.70627,.75842,.78738,.7894,.78763,.80402,.85944,.94559,.9899,.9816,.98007,.99368,.99393,.98538,.9758,.97101,.93802,.81812,.64633,.46649,.28613,.14685,.08966,.12543,.20325,.24557,.18866,.02795,-.20175,-.44205,-.58713,-.57629,-.41385,-.14255,.18033,.47882,.68311,.72314,.62064,.48309,.43073,.53577,.72794,.9025,.97354,.97,.98083,.99191,.99319,.99493,.99393,.99521,.99393,.99545,.9942,.99493,.99493,.99445,.99545,.9942,.99545,.99243,.98917,.98386,.97781,.95844,.89066,.81561,.78134,.77277,.75995,.73022,.67126,.57178,.47,.38361,.29419,.20703,.14734,.15866,.25162,.35818,.45062,.5675,.69748,.81232,.89697,.95062,.97656,.98615,.99191,.99219,.99243,.99368,.99368,.97028,.95566,.94559,.82617,.59973,.38361,.23901,.15338,.12921,.11206,.04382,-.12946,-.43552,-.72644,-.89847,-.95465,-.95541,-.97229,-.99268,-.99319,-.9884,-.99142,-.99167,-.99091,-.9884,-.98965,-.99368,-.97455,-.9501,-.94684,-.96219,-.98514,-.99243,-.98889,-.98917,-.99142,-.99219,-.99091,-.99191,-.99142,-.99142,-.99191,-.99066,-.99167,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99167,-.99091,-.99219,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99091,-.99118,-.99243,-.98941,-.98462,-.96976,-.9632,-.96194,-.87305,-.66196,-.44809,-.29495,-.18085,-.11813,-.11334,-.18564,-.34885,-.58237,-.8045,-.93726,-.97806,-.97354,-.97531,-.9899,-.99368,-.98941,-.99219,-.99091,-.99142,-.99167,-.99091,-.99191,-.99118,-.99219,-.98236,-.97781,-.97656,-.95135,-.87204,-.71335,-.52139,-.34232,-.17783,-.00906,.14886,.3045,.48889,.67404,.8403,.94128,.97681,.98462,.98337,.99142,.99521,.99493,.9942,.99445,.99521,.99393,.99545,.99445,.99521,.99521,.99445,.9957,.99445,.99521,.99469,.99445,.99521,.9942,.99521,.99445,.99445,.99521,.99445,.99545,.99445,.99469,.99493,.99393,.99493,.99445,.99393,.98285,.97781,.97479,.92844,.82114,.66095,.52417,.46826,.46722,.47934,.47379,.47076,.48209,.42014,.25439,.10074,-.00302,-.08966,-.16068,-.21436,-.2204,-.15137,-.00476,.18536,.37631,.52292,.62164,.70425,.74835,.72366,.63928,.52567,.40805,.35666,.42896,.60175,.802,.92743,.96548,.97632,.98337,.99066,.99521,.9942,.99368,.99292,.9884,.98083,.96774,.93323,.8544,.6947,.47202,.20425,-.0889,-.36423,-.60025,-.77481,-.90173,-.96017,-.97028,-.98108,-.9884,-.99219,-.9899,-.99219,-.99142,-.99142,-.99219,-.99091,-.99243,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99118,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99142,-.99118,-.98917,-.99042,-.99445,-.9733,-.9559,-.96219,-.8967,-.72241,-.55112,-.44809,-.39319,-.37833,-.35641,-.2627,-.1423,-.11282,-.13525,-.11536,-.09671,-.11511,-.1806,-.26874,-.33374,-.42215,-.51358,-.44785,-.3045,-.28613,-.30527,-.25037,-.1539,-.08286,-.11157,-.12592,-.00327,.13803,.19141,.1282,.01788,-.03952,-.12592,-.26773,-.34634,-.31384,-.1806,-.0108,.13574,.2612,.36975,.46573,.55087,.63626,.73022,.83072,.92014,.97177,.98587,.98413,.99167,.99445,.99292,.99219,.9874,.98007,.96472,.92239,.82166,.69067,.57959,.54962,.59695,.64255,.64633,.60629,.55942,.5491,.58966,.61887,.56952,.54181,.59518,.63248,.63876,.65463,.73398,.88312,.96927,.97101,.97958,.99344,.9942,.99268,.99493,.99469,.99445,.99521,.99445,.99545,.9942,.99493,.99493,.9942,.99545,.9942,.99493,.9942,.99393,.9942,.9884,.98309,.98309,.96069,.88461,.7937,.72064,.65765,.59998,.53247,.49268,.48615,.44205,.38034,.36447,.38715,.39294,.32645,.19595,.07782,-.05893,-.27832,-.48309,-.62619,-.72995,-.79999,-.84583,-.82166,-.73575,-.67227,-.65491,-.6496,-.66397,-.70175,-.72894,-.74658,-.76724,-.7952,-.82846,-.86523,-.90527,-.94382,-.89948,-.69849,-.47479,-.31662,-.15414,-.00729,.07077,.08237,.04431,-.02292,-.11761,-.24307,-.36926,-.45087,-.4617,-.4025,-.30679,-.17529,0,.14331,.24179,.36774,.49545,.56522,.57907,.56775,.53851,.51132,.48688,.41913,.26044,.00955,-.26297,-.46396,-.62341,-.82214,-.94684,-.96774,-.97531,-.98413,-.99017,-.9899,-.99219,-.99066,-.99142,-.99167,-.99118,-.99219,-.9899,-.99118,-.99368,-.99142,-.97757,-.97403,-.98007,-.9617,-.86826,-.67783,-.52719,-.48788,-.4549,-.43146,-.47681,-.54105,-.57983,-.60904,-.62317,-.59949,-.55566,-.52063,-.52115,-.55112,-.56244,-.58337,-.6554,-.73373,-.77228,-.74759,-.6889,-.64609,-.61887,-.5806,-.50351,-.40729,-.33929,-.3511,-.42944,-.47028,-.42267,-.32718,-.20224,-.0564,.04556,.10529,.1763,.26169,.33197,.32138,.23776,.20956,.23148,.20352,.23325,.39267,.52719,.58438,.62289,.66345,.70023,.66296,.5433,.42618,.33475,.24533,.14105,.03851,.01358,.09143,.22845,.34961,.41711,.4874,.58914,.69519,.78186,.84357,.89822,.95389,.98135,.98615,.99167,.99243,.99445,.9942,.99469,.99493,.99393,.99545,.99445,.99521,.99469,.99445,.99521,.9942,.99469,.98965,.98715,.98563,.96295,.91736,.86624,.82367,.77554,.68411,.53549,.38916,.2612,.11435,-.04053,-.18161,-.23172,-.19394,-.15237,-.1073,-.02997,.08588,.2262,.34305,.44104,.5574,.65765,.71259,.69217,.65363,.69748,.79572,.89368,.95514,.97733,.98413,.98816,.99243,.99445,.99243,.97302,.96674,.97983,.90378,.71005,.51056,.40451,.40982,.41559,.32996,.24356,.18866,.11411,.05365,.01157,-.03247,-.09216,-.16095,-.23248,-.31662,-.39771,-.48663,-.59647,-.71536,-.82013,-.85287,-.82947,-.84937,-.92215,-.97177,-.98663,-.98816,-.98438,-.99091,-.99219,-.99091,-.99191,-.99042,-.99191,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99142])},{name:"ultrabox shortened od guitar",expression:.5,samples:u([-.82785,-.67621,-.40268,-.43817,-.45468,-.22531,-.18329,.2475,.71246,.52155,.56082,.48395,.3399,.46957,.27744,.42313,.47104,.18796,.1293,-.13901,-.07431,-.16348,-.74857,-.73206,-.35181,-.26227,-.41882,-.27786,-.19806,-.19867,.18643,.24808,.08847,-.06964,.06912,.20474,-.05304,.29416,.31967,.14243,.27521,-.23932,-.14752,.1236,-.26123,-.26111,.06616,.2652,.0809,.1524,.16254,-.12061,.04562,.00131,.0405,.08182,-.21729,-.17041,-.16312,-.08563,.0639,.05099,.05627,.02728,.00726,-.13028,-.05673,-.14969,-.17645,.35492,.16766,-.00897,.24326,-.00461,-.04456,.01776,-.0495,-.01221,.02039,.07684,.13397,.3985,.35962,.13754,.4231,.27161,-.17609,.03659,.10635,-.21909,-.22046,-.20258,-.40973,-.4028,-.40521,-.66284])}]),h.chipWaves=function(e){const t=new Array(e.length),n={};for(let i=0;i<t.length;i++){t[i]=Object.assign([],e[i]);const a=t[i];a.index=i,n[a.name]=a}for(let e in n)n[e].samples=f(n[e].samples);const i=t;return i.dictionary=n,i}(h.rawChipWaves),h.rawRawChipWaves=h.rawChipWaves,h.firstIndexForSamplesInChipWaveList=h.chipWaves.length,h.chipNoises=w([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit white",expression:.5,basePitch:74.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit metallic",expression:.5,basePitch:86.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"crackling",expression:.9,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"pink",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"brownian",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null}]),h.filterFreqStep=1/4,h.filterFreqRange=34,h.filterFreqReferenceSetting=28,h.filterFreqReferenceHz=8e3,h.filterFreqMaxHz=h.filterFreqReferenceHz*Math.pow(2,h.filterFreqStep*(h.filterFreqRange-1-h.filterFreqReferenceSetting)),h.filterFreqMinHz=8,h.filterGainRange=15,h.filterGainCenter=7,h.filterGainStep=.5,h.filterMaxPoints=8,h.filterTypeNames=["low-pass","high-pass","peak"],h.filterMorphCount=10,h.filterSimpleCutRange=11,h.filterSimplePeakRange=8,h.fadeInRange=10,h.fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96],h.fadeOutNeutral=4,h.drumsetFadeOutTicks=48,h.transitions=w([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]),h.vibratos=w([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]),h.vibratoTypes=w([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,.17798,.33],period:266.97}]),h.arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8],h.unisons=w([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7},{name:"spinner",voices:2,spread:.02,offset:0,expression:1,sign:1},{name:"detune",voices:1,spread:0,offset:.25,expression:1,sign:1},{name:"rising",voices:2,spread:1,offset:.7,expression:.95,sign:1},{name:"vibrate",voices:2,spread:3.5,offset:7,expression:.975,sign:1},{name:"fourths",voices:2,spread:4,offset:4,expression:.95,sign:1},{name:"bass",voices:1,spread:0,offset:-7,expression:1,sign:1},{name:"dirty",voices:2,spread:0,offset:.1,expression:.975,sign:1},{name:"stationary",voices:2,spread:3.5,offset:0,expression:.9,sign:1},{name:"recurve",voices:2,spread:.005,offset:0,expression:1,sign:1},{name:"voiced",voices:2,spread:9.5,offset:0,expression:1,sign:1},{name:"fluctuate",voices:2,spread:12,offset:0,expression:1,sign:1},{name:"thin",voices:1,spread:0,offset:50,expression:1,sign:1},{name:"inject",voices:2,spread:6,offset:.4,expression:1,sign:1},{name:"askewed",voices:2,spread:0,offset:.42,expression:.7,sign:1},{name:"resonance",voices:2,spread:.0025,offset:.1,expression:.8,sign:-1.5},{name:"FART",voices:2,spread:13,offset:-5,expression:1,sign:-3}]),h.effectNames=["reverb","chorus","panning","distortion","bitcrusher","note filter","echo","pitch shift","detune","vibrato","transition type","chord type","ring modulation","phaser","note range","invert wave"],h.effectOrder=[2,10,11,7,8,9,5,3,4,1,6,0,12,13,14,15],h.noteSizeMax=6,h.volumeRange=50,h.volumeLogScale=.1428,h.panCenter=50,h.panMax=2*h.panCenter,h.panDelaySecondsMax=.001,h.chorusRange=8,h.ringModRange=8,h.ringModHzRange=64,h.rmHzOffsetCenter=200,h.rmHzOffsetMax=400,h.rmHzOffsetMin=0,h.chorusPeriodSeconds=2,h.chorusDelayRange=.0034,h.chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]],h.chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]],h.chorusMaxDelay=h.chorusDelayRange*(1+h.chorusDelayOffsets[0].concat(h.chorusDelayOffsets[1]).reduce(((e,t)=>Math.max(e,t)))),h.chords=w([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0}]),h.maxChordSize=9,h.operatorCount=4,h.maxPitchOrOperatorCount=Math.max(h.maxChordSize,h.operatorCount+2),h.algorithms=w([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1←(2 3) 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1←(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]),h.algorithms6Op=w([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←2←3←4←5←6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1←3 2←4←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1←3←4 2←5←6",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1←4 2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1←3 2←(4 5←6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1←(3 4) 2←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1←3 2←(4 5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1←3 2←(4 5)←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1←3 2←4←(5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1←(2 3 4 5 6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←(2 3←5 4←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1←(2 3 4←5←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1←4←5 (2 3)←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1←(3 4)←5 2←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1 2)←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1 2)←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1 2 3)←(4 5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1←5 (2 3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1 2←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1 2 (3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1 2 3 (4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1 2←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1←4 2←(5 6) 3",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1 2 3←5 4←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1 (2 3)←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1 2 3←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1 2 3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1 2 3 4 5←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1 2 3 4 5 6",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1←(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←4(2←5(3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1←4(2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]),h.operatorCarrierInterval=[0,.04,-.073,.091,.061,.024],h.operatorAmplitudeMax=15,h.operatorFrequencies=w([{name:"0.12×",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25×",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5×",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75×",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5×",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4×",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"10×",mult:10,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"12×",mult:12,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"14×",mult:14,hzOffset:0,amplitudeSign:1},{name:"15×",mult:15,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"17×",mult:17,hzOffset:0,amplitudeSign:1},{name:"18×",mult:18,hzOffset:0,amplitudeSign:1},{name:"19×",mult:19,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1},{name:"~20×",mult:20,hzOffset:-5,amplitudeSign:-1},{name:"25×",mult:25,hzOffset:0,amplitudeSign:1},{name:"50×",mult:50,hzOffset:0,amplitudeSign:1},{name:"75×",mult:75,hzOffset:0,amplitudeSign:1},{name:"100×",mult:100,hzOffset:0,amplitudeSign:1}]),h.envelopes=w([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"punch",type:4,speed:0},{name:"flare -1",type:5,speed:128},{name:"flare 1",type:5,speed:32},{name:"flare 2",type:5,speed:8},{name:"flare 3",type:5,speed:2},{name:"twang -1",type:6,speed:128},{name:"twang 1",type:6,speed:32},{name:"twang 2",type:6,speed:8},{name:"twang 3",type:6,speed:2},{name:"swell -1",type:7,speed:128},{name:"swell 1",type:7,speed:32},{name:"swell 2",type:7,speed:8},{name:"swell 3",type:7,speed:2},{name:"tremolo0",type:8,speed:8},{name:"tremolo1",type:8,speed:4},{name:"tremolo2",type:8,speed:2},{name:"tremolo3",type:8,speed:1},{name:"tremolo4",type:9,speed:4},{name:"tremolo5",type:9,speed:2},{name:"tremolo6",type:9,speed:1},{name:"decay -1",type:10,speed:40},{name:"decay 1",type:10,speed:10},{name:"decay 2",type:10,speed:7},{name:"decay 3",type:10,speed:4},{name:"wibble-1",type:11,speed:128},{name:"wibble 1",type:11,speed:24},{name:"wibble 2",type:11,speed:12},{name:"wibble 3",type:11,speed:4},{name:"linear-2",type:12,speed:256},{name:"linear-1",type:12,speed:128},{name:"linear 1",type:12,speed:32},{name:"linear 2",type:12,speed:8},{name:"linear 3",type:12,speed:2},{name:"rise -2",type:13,speed:256},{name:"rise -1",type:13,speed:128},{name:"rise 1",type:13,speed:32},{name:"rise 2",type:13,speed:8},{name:"rise 3",type:13,speed:2},{name:"flute 1",type:11,speed:16},{name:"flute 2",type:11,speed:8},{name:"flute 3",type:11,speed:4},{name:"tripolo1",type:8,speed:9},{name:"tripolo2",type:8,speed:6},{name:"tripolo3",type:8,speed:3},{name:"tripolo4",type:9,speed:9},{name:"tripolo5",type:9,speed:6},{name:"tripolo6",type:9,speed:3},{name:"pentolo1",type:8,speed:10},{name:"pentolo2",type:8,speed:5},{name:"pentolo3",type:8,speed:2.5},{name:"pentolo4",type:9,speed:10},{name:"pentolo5",type:9,speed:5},{name:"pentolo6",type:9,speed:2.5},{name:"flutter 1",type:8,speed:14},{name:"flutter 2",type:9,speed:11},{name:"water-y flutter",type:8,speed:9},{name:"blip 1",type:14,speed:6},{name:"blip 2",type:14,speed:16},{name:"blip 3",type:14,speed:32}]),h.newEnvelopes=w([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"random",type:3,speed:4},{name:"punch",type:4,speed:0},{name:"flare",type:5,speed:32},{name:"twang",type:6,speed:32},{name:"swell",type:7,speed:32},{name:"lfo",type:8,speed:4},{name:"decay",type:10,speed:10},{name:"wibble",type:11,speed:24},{name:"linear",type:12,speed:32},{name:"rise",type:13,speed:32},{name:"blip",type:14,speed:6},{name:"fall",type:15,speed:2}]),h.feedbacks=w([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]},{name:"1↔2 3↔4",indices:[[2],[1],[4],[3]]},{name:"1↔4 2↔3",indices:[[4],[3],[2],[1]]},{name:"2→1→4→3→2",indices:[[2],[3],[4],[1]]},{name:"1→2→3→4→1",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)→4",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]),h.feedbacks6Op=w([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1⟲",indices:[[1],[],[],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[],[],[]]},{name:"3⟲",indices:[[],[],[3],[],[],[]]},{name:"4⟲",indices:[[],[],[],[4],[],[]]},{name:"5⟲",indices:[[],[],[],[],[5],[]]},{name:"6⟲",indices:[[],[],[],[],[],[6]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[],[],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲",indices:[[1],[2],[3],[4],[5],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1→2",indices:[[],[1],[],[],[],[]]},{name:"1→3",indices:[[],[],[1],[],[],[]]},{name:"1→4",indices:[[],[],[],[1],[],[]]},{name:"1→5",indices:[[],[],[],[],[1],[]]},{name:"1→6",indices:[[],[],[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[],[],[]]},{name:"2→4",indices:[[],[],[],[2],[],[]]},{name:"3→4",indices:[[],[],[],[3],[],[]]},{name:"4→5",indices:[[],[],[],[],[4],[]]},{name:"1→4 2→5 3→6",indices:[[],[],[],[1],[2],[3]]},{name:"1→5 2→6 3→4",indices:[[],[],[],[3],[1],[2]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"2→1→6→5→4→3→2",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1→2→3→4→5→6→1",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1↔2 3↔4 5↔6",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1↔4 2↔5 3↔6",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)→6",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]),h.chipNoiseLength=32768,h.spectrumNoiseLength=32768,h.spectrumBasePitch=24,h.spectrumControlPoints=30,h.spectrumControlPointsPerOctave=7,h.spectrumControlPointBits=3,h.spectrumMax=(1<<h.spectrumControlPointBits)-1,h.harmonicsControlPoints=28,h.harmonicsRendered=64,h.harmonicsRenderedForPickedString=256,h.harmonicsControlPointBits=3,h.harmonicsMax=(1<<h.harmonicsControlPointBits)-1,h.harmonicsWavelength=2048,h.pulseWidthRange=100,h.pulseWidthStepPower=.5,h.supersawVoiceCount=7,h.supersawDynamismMax=6,h.supersawSpreadMax=12,h.supersawShapeMax=6,h.pitchChannelCountMin=1,h.pitchChannelCountMax=60,h.noiseChannelCountMin=0,h.noiseChannelCountMax=60,h.modChannelCountMin=0,h.modChannelCountMax=60,h.noiseInterval=6,h.pitchesPerOctave=12,h.drumCount=12,h.pitchOctaves=8,h.modCount=6,h.maxPitch=h.pitchOctaves*h.pitchesPerOctave,h.maximumTonesPerChannel=2*h.maxChordSize,h.justIntonationSemitones=[.5,8/15,9/16,.6,5/8,2/3,32/45,3/4,.8,5/6,8/9,15/16,1,16/15,9/8,1.2,5/4,4/3,45/32,1.5,1.6,5/3,16/9,15/8,2].map((e=>Math.log2(e)*h.pitchesPerOctave)),h.pitchShiftRange=h.justIntonationSemitones.length,h.pitchShiftCenter=h.pitchShiftRange>>1,h.detuneCenter=200,h.detuneMax=400,h.detuneMin=0,h.songDetuneMin=0,h.songDetuneMax=500,h.unisonVoicesMin=1,h.unisonVoicesMax=2,h.unisonSpreadMin=-96,h.unisonSpreadMax=96,h.unisonOffsetMin=-96,h.unisonOffsetMax=96,h.unisonExpressionMin=-2,h.unisonExpressionMax=2,h.unisonSignMin=-2,h.unisonSignMax=2,h.sineWaveLength=256,h.sineWaveMask=h.sineWaveLength-1,h.sineWave=function(){const e=new Float32Array(h.sineWaveLength+1);for(let t=0;t<h.sineWaveLength+1;t++)e[t]=Math.sin(t*Math.PI*2/h.sineWaveLength);return e}(),h.perEnvelopeSpeedIndices=[0,.01,.02,.03,.04,.05,.06,.07,.08,.09,.1,.2,.25,.3,.3333,.4,.5,.6,.6667,.7,.75,.8,.9,1,1.25,1.3333,1.5,1.6667,1.75,2,2.25,2.5,2.75,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,12,13,14,15,16,17,18,19,20,24,32,40,64,128,256],h.perEnvelopeSpeedToIndices={0:0,.01:1,.02:2,.03:3,.04:4,.05:5,.06:6,.07:7,.08:8,.09:9,.1:10,.2:11,.25:12,.3:13,.3333:14,.4:15,.5:16,.6:17,.6667:18,.7:19,.75:20,.8:21,.9:22,1:23,1.25:24,1.3333:25,1.5:26,1.6667:27,1.75:28,2:29,2.25:30,2.5:31,2.75:32,3:33,3.5:34,4:35,4.5:36,5:37,5.5:38,6:39,6.5:40,7:41,7.5:42,8:43,8.5:44,9:45,9.5:46,10:47,11:48,12:49,13:50,14:51,15:52,16:53,17:54,18:55,19:56,20:57,24:58,32:59,40:60,64:61,128:62,256:63},h.perEnvelopeBoundMin=0,h.perEnvelopeBoundMax=2,h.randomEnvelopeSeedMax=63,h.randomEnvelopeStepsMax=24,h.pickedStringDispersionCenterFreq=6e3,h.pickedStringDispersionFreqScale=.3,h.pickedStringDispersionFreqMult=4,h.pickedStringShelfHz=4e3,h.distortionRange=8,h.stringSustainRange=15,h.stringDecayRate=.12,h.enableAcousticSustain=!1,h.sustainTypeNames=["bright","acoustic"],h.bitcrusherFreqRange=14,h.bitcrusherOctaveStep=.5,h.bitcrusherQuantizationRange=8,h.maxEnvelopeCount=16,h.defaultAutomationRange=13,h.instrumentAutomationTargets=w([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"note volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:2,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,8]},{name:"stringSustain",computeIndex:3,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[7]},{name:"unison",computeIndex:4,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[0,5,7,9,6,2,3]},{name:"operatorFrequency",computeIndex:5,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:h.operatorCount+2,effect:null,compatibleInstruments:[1,11]},{name:"operatorAmplitude",computeIndex:11,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:h.operatorCount+2,effect:null,compatibleInstruments:[1,11]},{name:"feedbackAmplitude",computeIndex:17,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[1,11]},{name:"pitchShift",computeIndex:18,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:7,compatibleInstruments:null},{name:"detune",computeIndex:19,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:8,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:20,displayName:"vibrato range",interleave:!1,isFilter:!1,maxCount:1,effect:9,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:1,displayName:"n. filter freqs",interleave:!1,isFilter:!0,maxCount:1,effect:5,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:21,displayName:"n. filter # freq",interleave:!1,isFilter:!0,maxCount:h.filterMaxPoints,effect:5,compatibleInstruments:null},{name:"decimalOffset",computeIndex:37,displayName:"decimal offset",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,8]},{name:"supersawDynamism",computeIndex:38,displayName:"dynamism",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"supersawSpread",computeIndex:39,displayName:"spread",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"supersawShape",computeIndex:40,displayName:"saw↔pulse",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"phaserFreq",computeIndex:41,displayName:"phaser freq",interleave:!1,isFilter:!1,maxCount:1,effect:13,compatibleInstruments:null},{name:"phaserMix",computeIndex:42,displayName:"phaser",interleave:!1,isFilter:!1,maxCount:1,effect:13,compatibleInstruments:null},{name:"phaserFeedback",computeIndex:43,displayName:"phaser feedback",interleave:!1,isFilter:!1,maxCount:1,effect:13,compatibleInstruments:null},{name:"phaserStages",computeIndex:44,displayName:"phaser stages",interleave:!1,isFilter:!1,maxCount:1,effect:13,compatibleInstruments:null},{name:"ringModulation",computeIndex:45,displayName:"ring mod",interleave:!1,isFilter:!1,maxCount:1,effect:12,compatibleInstruments:null},{name:"ringModulationHz",computeIndex:46,displayName:"ring mod hz",interleave:!1,isFilter:!1,maxCount:1,effect:12,compatibleInstruments:null},{name:"distortion",computeIndex:48,displayName:"distortion",interleave:!1,isFilter:!1,maxCount:1,effect:3,compatibleInstruments:null},{name:"bitcrusherQuantization",computeIndex:49,displayName:"bitcrush",interleave:!1,isFilter:!1,maxCount:1,effect:4,compatibleInstruments:null},{name:"bitcrusherFrequency",computeIndex:50,displayName:"freq crush",interleave:!1,isFilter:!1,maxCount:1,effect:4,compatibleInstruments:null},{name:"chorus",computeIndex:51,displayName:"chorus",interleave:!1,isFilter:!1,maxCount:1,effect:1,compatibleInstruments:null},{name:"echoSustain",computeIndex:52,displayName:"echo sustain",interleave:!1,isFilter:!1,maxCount:1,effect:6,compatibleInstruments:null},{name:"reverb",computeIndex:53,displayName:"reverb",interleave:!1,isFilter:!1,maxCount:1,effect:0,compatibleInstruments:null},{name:"panning",computeIndex:54,displayName:"panning",interleave:!1,isFilter:!1,maxCount:1,effect:2,compatibleInstruments:null},{name:"arpeggioSpeed",computeIndex:55,displayName:"arpeggio speed",interleave:!1,isFilter:!1,maxCount:1,effect:11,compatibleInstruments:null}]),h.operatorWaves=w([{name:"sine",samples:h.sineWave},{name:"triangle",samples:function(){const e=new Float32Array(h.sineWaveLength+1);for(let t=0;t<h.sineWaveLength+1;t++)e[t]=Math.asin(Math.sin(t*Math.PI*2/h.sineWaveLength))/(Math.PI/2);return e}()},{name:"pulse width",samples:g()},{name:"sawtooth",samples:v()},{name:"ramp",samples:v(!0)},{name:"trapezoid",samples:function(e=2){const t=new Float32Array(h.sineWaveLength+1);for(let n=0;n<h.sineWaveLength+1;n++)t[n]=Math.max(-1,Math.min(1,Math.asin(Math.sin(n*Math.PI*2/h.sineWaveLength))*e));return t}(2)},{name:"quasi-sine",samples:function(){const e=new Float32Array(h.sineWaveLength+1);for(let t=0;t<h.sineWaveLength+1;t++)e[t]=Math.round(Math.sin(t*Math.PI*2/h.sineWaveLength));return e}()}]),h.pwmOperatorWaves=w([{name:"1%",samples:g(.01)},{name:"5%",samples:g(.05)},{name:"12.5%",samples:g(.125)},{name:"25%",samples:g(.25)},{name:"33%",samples:g(1/3)},{name:"50%",samples:g(.5)},{name:"66%",samples:g(2/3)},{name:"75%",samples:g(.75)},{name:"87.5%",samples:g(.875)},{name:"95%",samples:g(.95)},{name:"99%",samples:g(.99)}]),h.barEditorHeight=10,h.modulators=w([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:16,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:16,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:h.tempoMax-h.tempoMin,newNoteVol:Math.ceil((h.tempoMax-h.tempoMin)/2),forSong:!0,convertRealFactor:h.tempoMin,associatedEffect:16,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:2*h.reverbRange,newNoteVol:h.reverbRange,forSong:!0,convertRealFactor:-h.reverbRange,associatedEffect:16,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:16,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"note volume",pianoName:"Note Vol.",maxRawVol:h.volumeRange,newNoteVol:Math.ceil(h.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-h.volumeRange/2),associatedEffect:16,promptName:"Note Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"pan",pianoName:"Pan",maxRawVol:h.panMax,newNoteVol:Math.ceil(h.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:h.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:h.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedback",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:h.pulseWidthRange,newNoteVol:h.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:h.detuneMax-h.detuneMin,newNoteVol:h.detuneCenter,forSong:!1,convertRealFactor:-h.detuneCenter,associatedEffect:8,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch ÷25]"]},{name:"song detune",pianoName:"Detune",maxRawVol:h.songDetuneMax-h.songDetuneMin,newNoteVol:Math.ceil((h.songDetuneMax-h.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:16,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[ADDITIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats ÷24]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"eq filter",pianoName:"EQFlt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"note filter",pianoName:"N.Flt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:h.bitcrusherQuantizationRange-1,newNoteVol:Math.round(h.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:h.bitcrusherFreqRange-1,newNoteVol:Math.round(h.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:h.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:h.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats ÷12]"]},{name:"chorus",pianoName:"Chorus",maxRawVol:h.chorusRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt cut",pianoName:"EQFlt Cut",maxRawVol:h.filterSimpleCutRange-1,newNoteVol:h.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt peak",pianoName:"EQFlt Peak",maxRawVol:h.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt cut",pianoName:"N.Flt Cut",maxRawVol:h.filterSimpleCutRange-1,newNoteVol:h.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt peak",pianoName:"N.Flt Peak",maxRawVol:h.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:h.pitchShiftRange-1,newNoteVol:h.pitchShiftCenter,forSong:!1,convertRealFactor:-h.pitchShiftCenter,associatedEffect:7,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:h.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"mix volume",pianoName:"Mix Vol.",maxRawVol:h.volumeRange,newNoteVol:Math.ceil(h.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-h.volumeRange/2),associatedEffect:16,promptName:"Mix Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 5",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"FM Slider 5",promptDesc:["This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 6",pianoName:"FM 6",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"decimal offset",pianoName:"Decimal Offset",maxRawVol:99,newNoteVol:0,forSong:!1,convertRealFactor:0,invertSliderIndicator:!0,associatedEffect:16,promptName:"Decimal Offset",promptDesc:["This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.","[$LO - $HI]"]},{name:"envelope speed",pianoName:"EnvelopeSpd",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Envelope Speed",promptDesc:["This setting controls how fast all of the envelopes for the instrument play.","At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"dynamism",pianoName:"Dynamism",maxRawVol:h.supersawDynamismMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Supersaw Dynamism",promptDesc:["This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.","At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"spread",pianoName:"Spread",maxRawVol:h.supersawSpreadMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Supersaw Spread",promptDesc:["This setting controls the supersaw spread of your instrument, just like the spread slider.","At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"saw shape",pianoName:"Saw Shape",maxRawVol:h.supersawShapeMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Supersaw Shape",promptDesc:["This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.","As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.","[OVERWRITING] [$LO - $HI] [%]"]},{name:"song bitcrush",pianoName:"Song Bit crush",maxRawVol:2*h.bitcrusherQuantizationRange,newNoteVol:h.bitcrusherQuantizationRange,forSong:!0,convertRealFactor:-h.bitcrusherQuantizationRange,associatedEffect:16,promptName:"Song Bit crush",promptDesc:["This setting affects the overall bitcrush of your song. It works by multiplying existing bitcrush for instruments, so those with no bitcrush set will be unaffected.","At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"song freqcrush",pianoName:"Song freqcrush",maxRawVol:2*h.bitcrusherFreqRange,newNoteVol:h.bitcrusherFreqRange,forSong:!0,convertRealFactor:-h.bitcrusherFreqRange,associatedEffect:16,promptName:"Song Freq crush",promptDesc:["This setting affects the overall frequency crush of your song. It works by multiplying existing freq crush for instruments, so those with no bitcrush or freq crush set will be unaffected.","At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"song panning",pianoName:"Song Panning",maxRawVol:2*h.panMax,newNoteVol:h.panMax,forSong:!0,convertRealFactor:-h.panMax,associatedEffect:2,promptName:"Song Panning",promptDesc:["This setting affects the overall panning of your song. It works by adding to existing pan for instruments, so those with no panning set will be unaffected.","At $MID, nothing will be added to the songs panning. At $HI, all instruments will have 100+ panning added, which would max out the panning. At $LO, -100+ panning added to it, which would make the panning as low as possible.","[ADDITIVE] [$LO - $HI]"]},{name:"song chorus",pianoName:"Song Chorus",maxRawVol:2*h.chorusRange,newNoteVol:h.chorusRange,forSong:!0,convertRealFactor:-h.chorusRange,associatedEffect:16,promptName:"Song Chorus",promptDesc:["This setting affects the overall chorus of your song. It works by multiplying existing chorus for instruments, so those with no chorus set will be unaffected.","At $MID, all instruments' chorus will be unchanged from default. This increases up to double the set chorus value at $HI, or down to no chorus at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"song distortion",pianoName:"Song Distortion",maxRawVol:2*h.distortionRange,newNoteVol:h.distortionRange,forSong:!0,convertRealFactor:-h.distortionRange,associatedEffect:16,promptName:"Song Distortion",promptDesc:["This setting affects the overall distortion of your song. It works by multiplying existing distortion for instruments, so those with no distortion set will be unaffected.","At $MID, all instruments' distortion will be unchanged from default. This increases up to double the set distortion value at $HI, or down to no distortion at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"ring modulation",pianoName:"Ring Modulation",maxRawVol:h.ringModRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Ring Modulation",promptDesc:["This setting controls the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"song ring modulation",pianoName:"Songwide Ring Modulation",maxRawVol:2*h.ringModRange,newNoteVol:h.ringModRange,forSong:!0,convertRealFactor:-h.ringModRange,associatedEffect:16,promptName:"Songwide Ring Modulation",promptDesc:["This setting multiplies the Ring Modulation effect across all instruments.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"ring mod hertz",pianoName:"Ring Modulation (Hertz)",maxRawVol:h.ringModHzRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Ring Modulation (Hertz)",promptDesc:["This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"phaser",pianoName:"Phaser",maxRawVol:h.phaserMixRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:13,promptName:"Instrument Phaser",promptDesc:["This setting controls the Phaser Mix of your insturment, just like the Phaser slider.","At $LO, your instrument will have no phaser. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"phaser frequency",pianoName:"Phaser Frequency",maxRawVol:h.phaserFreqRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:13,promptName:"Phaser Frequency",promptDesc:["This setting controls the phaser frequency of your insturment, just like the phaser freq slider.","At $LO, your instrument will have no phaser freq. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"phaser feedback",pianoName:"Phaser Feedback",maxRawVol:h.phaserFeedbackRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:13,promptName:"Phaser Feedback",promptDesc:["This setting controls the phaser feedback of your insturment, just like the phaser feedback slider.","At $LO, your instrument will have no phaser feedback. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"phaser stages",pianoName:"Phaser Stages",maxRawVol:h.phaserMaxStages,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:13,promptName:"Phaser Stages",promptDesc:["This setting controls the number of phaser stages in your insturment, just like the phaser stages slider.","At $LO, your instrument will have no phaser stages. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"song pitch shift",pianoName:"Song Pitch Shift",maxRawVol:2*h.pitchShiftRange-2,newNoteVol:h.pitchShiftRange,forSong:!0,convertRealFactor:1-h.pitchShiftRange,associatedEffect:7,promptName:"Songwide Pitch Shift",promptDesc:["This setting controls the pitch offset of all instruments regardless of whether or not the instrument has the effect itself, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[ADDITIVE] [$LO - $HI] [pitch]"]},{name:"individual envelope speed",pianoName:"IndvEnvSpd",maxRawVol:63,newNoteVol:23,forSong:!1,convertRealFactor:0,associatedEffect:16,promptName:"Individual Envelope Speed",promptDesc:["This setting controls how fast the specified envelope of the instrument will play.","At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:","[0-4]: x0, x0.01, x0.02, x0.03, x0.04,","[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,","[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,","[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,","[20-24]: x0.75, x0.8, x0.9, x1, x1.25,","[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,","[30-34]: x2.25, x2.5, x2.75, x3, x3.5,","[35-39]: x4, x4.5, x5, x5.5, x6,","[40-44]: x6.5, x7, x7.5, x8, x8.5,","[45-49]: x9, x9.5, x10, x11, x12","[50-54]: x13, x14, x15, x16, x17","[55-59]: x18, x19, x20, x24, x32","[60-63]: x40, x64, x128, x256","[OVERWRITING] [$LO - $HI]"]}]);var E=e&&e.i||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],i=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},A=e&&e.o||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,a,s=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(i=s.next()).done;)o.push(i.value)}catch(e){a={error:e}}finally{try{i&&!i.done&&(n=s.return)&&n.call(s)}finally{if(a)throw a.error}}return o},R=e&&e.l||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(A(arguments[t]));return e};function N(e,t){var n,i,a,s,o,r;try{for(var l=E(t),p=l.next();!p.done;p=l.next()){var h=p.value;if(h instanceof Node)e.appendChild(h);else if("string"==typeof h)e.appendChild(document.createTextNode(h));else if("function"==typeof h)N(e,[h()]);else if(Array.isArray(h))N(e,h);else if(h&&"undefined"!=typeof Symbol&&"function"==typeof h[Symbol.iterator])N(e,R(h));else if(h&&h.constructor===Object&&e instanceof Element)try{for(var c=(a=void 0,E(Object.keys(h))),u=c.next();!u.done;u=c.next()){var f=u.value,d=h[f];if("class"===f)"string"==typeof d?e.setAttribute("class",d):Array.isArray(h)||d&&"undefined"!=typeof Symbol&&"function"==typeof d[Symbol.iterator]?e.setAttribute("class",R(d).join(" ")):console.warn("Invalid "+f+' value "'+d+'" on '+e.tagName+" element.");else if("style"===f)if(d&&d.constructor===Object)try{for(var m=(o=void 0,E(Object.keys(d))),y=m.next();!y.done;y=m.next()){var g=y.value;g in e.style?e.style[g]=d[g]:e.style.setProperty(g,d[g])}}catch(e){o={error:e}}finally{try{y&&!y.done&&(r=m.return)&&r.call(m)}finally{if(o)throw o.error}}else e.setAttribute(f,d);else"function"==typeof d?e[f]=d:"boolean"==typeof d?d?e.setAttribute(f,""):e.removeAttribute(f):e.setAttribute(f,d)}}catch(e){a={error:e}}finally{try{u&&!u.done&&(s=c.return)&&s.call(c)}finally{if(a)throw a.error}}else e.appendChild(document.createTextNode(h))}}catch(e){n={error:e}}finally{try{p&&!p.done&&(i=l.return)&&i.call(l)}finally{if(n)throw n.error}}return e}var B="http://www.w3.org/2000/svg";var W,V,$,U,j=e&&e.i||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],i=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Q=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return document.createRange().createContextualFragment(e.join())},_=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=document.createDocumentFragment(),i=(new DOMParser).parseFromString('<svg xmlns="http://www.w3.org/2000/svg">'+e.join()+"</svg>","image/svg+xml").documentElement;null!==i.firstChild;)document.importNode(i.firstChild,!0),n.appendChild(i.firstChild);return n},K=function(e){Q[e]=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return N(document.createElement(e),t)}};try{for(var J=j("a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr".split(" ")),X=J.next();!X.done;X=J.next()){K(X.value)}}catch(e){W={error:e}}finally{try{X&&!X.done&&(V=J.return)&&V.call(J)}finally{if(W)throw W.error}}var Y=function(e){if(_[e]=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return N(document.createElementNS(B,e),t)},/-/.test(e)){var t=e.replace(/-/g,"_");_[t]=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return N(document.createElementNS(B,e),t)}}};try{for(var Z=j("a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern".split(" ")),ee=Z.next();!ee.done;ee=Z.next()){Y(ee.value)}}catch(e){$={error:e}}finally{try{ee&&!ee.done&&(U=Z.return)&&U.call(Z)}finally{if($)throw $.error}}class te{static resetColors(){this.colorLookup.clear()}static getArbitaryChannelColor(e,t){if(!this.usesColorFormula){let i;switch(e){case"noise":i=""==te.getComputed("--noise-channel-limit")?te.noiseChannels[t%te.noiseChannels.length]:te.noiseChannels[t%(Number(te.getComputed("--noise-channel-limit"))%te.noiseChannels.length)];break;case"mod":i=""==te.getComputed("--mod-channel-limit")?te.modChannels[t%te.modChannels.length]:te.modChannels[t%(Number(te.getComputed("--mod-channel-limit"))%te.modChannels.length)];break;default:i=""==te.getComputed("--pitch-channel-limit")?te.pitchChannels[t%te.pitchChannels.length]:te.pitchChannels[t%(Number(te.getComputed("--pitch-channel-limit"))%te.pitchChannels.length)]}var n=/\(([^)]+)\)/;return{secondaryChannel:te.getComputed(n.exec(i.secondaryChannel)[1]),primaryChannel:te.getComputed(n.exec(i.primaryChannel)[1]),secondaryNote:te.getComputed(n.exec(i.secondaryNote)[1]),primaryNote:te.getComputed(n.exec(i.primaryNote)[1])}}switch(e){case"noise":{const e=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-hue"),n=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-hue-scale"),i=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-sat"),a=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-sat-scale"),s=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-lum"),o=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-lum-scale"),r=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-hue"),l=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-hue-scale"),p=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-sat"),c=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-sat-scale"),u=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-lum"),f=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-lum-scale"),d=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-hue"),m=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-hue-scale"),y=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-sat"),g=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-sat-scale"),v=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-lum"),b=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-lum-scale"),w=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-hue"),S=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-hue-scale"),x=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-sat"),k=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-sat-scale"),M=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-lum"),F=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-lum-scale");let q={secondaryChannel:"hsl("+(+e+t*+n/h.noiseChannelCountMax*256)%256+","+(+i+t*+a)+"%,"+(+s+t*+o)+"%)",primaryChannel:"hsl("+(+r+t*+l/h.noiseChannelCountMax*256)%256+","+(+p+t*+c)+"%,"+(+u+t*+f)+"%)",secondaryNote:"hsl("+(+d+t*+m/h.noiseChannelCountMax*256)%256+","+(+y+t*+g)+"%,"+(+v+t*+b)+"%)",primaryNote:"hsl("+(+w+t*+S/h.noiseChannelCountMax*256)%256+","+(+x+t*+k)+"%,"+(+M+t*+F)+"%)"};return te.colorLookup.set(t,q),q}case"mod":{const e=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-hue"),n=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-hue-scale"),i=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-sat"),a=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-sat-scale"),s=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-lum"),o=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-lum-scale"),r=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-hue"),l=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-hue-scale"),p=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-sat"),c=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-sat-scale"),u=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-lum"),f=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-lum-scale"),d=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-hue"),m=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-hue-scale"),y=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-sat"),g=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-sat-scale"),v=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-lum"),b=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-lum-scale"),w=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-hue"),S=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-hue-scale"),x=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-sat"),k=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-sat-scale"),M=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-lum"),F=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-lum-scale");let q={secondaryChannel:"hsl("+(+e+t*+n/h.modChannelCountMax*256)%256+","+(+i+t*+a)+"%,"+(+s+t*+o)+"%)",primaryChannel:"hsl("+(+r+t*+l/h.modChannelCountMax*256)%256+","+(+p+t*+c)+"%,"+(+u+t*+f)+"%)",secondaryNote:"hsl("+(+d+t*+m/h.modChannelCountMax*256)%256+","+(+y+t*+g)+"%,"+(+v+t*+b)+"%)",primaryNote:"hsl("+(+w+t*+S/h.modChannelCountMax*256)%256+","+(+x+t*+k)+"%,"+(+M+t*+F)+"%)"};return te.colorLookup.set(t,q),q}default:{const e=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-hue"),n=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-hue-scale"),i=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-sat"),a=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-sat-scale"),s=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-lum"),o=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-lum-scale"),r=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-hue"),l=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-hue-scale"),p=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-sat"),c=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-sat-scale"),u=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-lum"),f=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-lum-scale"),d=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-hue"),m=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-hue-scale"),y=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-sat"),g=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-sat-scale"),v=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-lum"),b=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-lum-scale"),w=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-hue"),S=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-hue-scale"),x=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-sat"),k=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-sat-scale"),M=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-lum"),F=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-lum-scale");let q={secondaryChannel:"hsl("+(+e+t*+n/h.pitchChannelCountMax*256)%256+","+ +i*(1-+a*Math.floor(t/7))+"%,"+ +s*(1-+o*Math.floor(t/7))+"%)",primaryChannel:"hsl("+(+r+t*+l/h.pitchChannelCountMax*256)%256+","+ +p*(1-+c*Math.floor(t/7))+"%,"+ +u*(1-+f*Math.floor(t/7))+"%)",secondaryNote:"hsl("+(+d+t*+m/h.pitchChannelCountMax*256)%256+","+ +y*(1-+g*Math.floor(t/7))+"%,"+ +v*(1-+b*Math.floor(t/7))+"%)",primaryNote:"hsl("+(+w+t*+S/h.pitchChannelCountMax*256)%256+","+ +x*(1-+k*Math.floor(t/7))+"%,"+ +M*(1-+F*Math.floor(t/7))+"%)"};return te.colorLookup.set(t,q),q}}}static getComputedChannelColor(e,t){if(this.usesColorFormula)return te.getChannelColor(e,t);{let i=te.getChannelColor(e,t);var n=/\(([^)]+)\)/;return{secondaryChannel:te.getComputed(n.exec(i.secondaryChannel)[1]),primaryChannel:te.getComputed(n.exec(i.primaryChannel)[1]),secondaryNote:te.getComputed(n.exec(i.secondaryNote)[1]),primaryNote:te.getComputed(n.exec(i.primaryNote)[1])}}}static getChannelColor(e,t){if(this.usesColorFormula){if(te.colorLookup.has(t))return te.colorLookup.get(t);if(t<e.pitchChannelCount){let e={secondaryChannel:"hsl("+(this.c_pitchSecondaryChannelHue+t*this.c_pitchSecondaryChannelHueScale/h.pitchChannelCountMax*256)%360+","+this.c_pitchSecondaryChannelSat*(1-this.c_pitchSecondaryChannelSatScale*Math.floor(t/9))+"%,"+this.c_pitchSecondaryChannelLum*(1-this.c_pitchSecondaryChannelLumScale*Math.floor(t/9))+"%)",primaryChannel:"hsl("+(this.c_pitchPrimaryChannelHue+t*this.c_pitchPrimaryChannelHueScale/h.pitchChannelCountMax*256)%360+","+this.c_pitchPrimaryChannelSat*(1-this.c_pitchPrimaryChannelSatScale*Math.floor(t/9))+"%,"+this.c_pitchPrimaryChannelLum*(1-this.c_pitchPrimaryChannelLumScale*Math.floor(t/9))+"%)",secondaryNote:"hsl("+(this.c_pitchSecondaryNoteHue+t*this.c_pitchSecondaryNoteHueScale/h.pitchChannelCountMax*256)%360+","+this.c_pitchSecondaryNoteSat*(1-this.c_pitchSecondaryNoteSatScale*Math.floor(t/9))+"%,"+this.c_pitchSecondaryNoteLum*(1-this.c_pitchSecondaryNoteLumScale*Math.floor(t/9))+"%)",primaryNote:"hsl("+(this.c_pitchPrimaryNoteHue+t*this.c_pitchPrimaryNoteHueScale/h.pitchChannelCountMax*256)%360+","+this.c_pitchPrimaryNoteSat*(1-this.c_pitchPrimaryNoteSatScale*Math.floor(t/9))+"%,"+this.c_pitchPrimaryNoteLum*(1-this.c_pitchPrimaryNoteLumScale*Math.floor(t/9))+"%)"};return te.colorLookup.set(t,e),e}if(t<e.pitchChannelCount+e.noiseChannelCount){let n={secondaryChannel:"hsl("+(this.c_noiseSecondaryChannelHue+(t-e.pitchChannelCount)*this.c_noiseSecondaryChannelHueScale/h.noiseChannelCountMax*256)%360+","+(this.c_noiseSecondaryChannelSat+t*this.c_noiseSecondaryChannelSatScale)+"%,"+(this.c_noiseSecondaryChannelLum+t*this.c_noiseSecondaryChannelLumScale)+"%)",primaryChannel:"hsl("+(this.c_noisePrimaryChannelHue+(t-e.pitchChannelCount)*this.c_noisePrimaryChannelHueScale/h.noiseChannelCountMax*256)%360+","+(this.c_noisePrimaryChannelSat+t*this.c_noisePrimaryChannelSatScale)+"%,"+(this.c_noisePrimaryChannelLum+t*this.c_noisePrimaryChannelLumScale)+"%)",secondaryNote:"hsl("+(this.c_noiseSecondaryNoteHue+(t-e.pitchChannelCount)*this.c_noiseSecondaryNoteHueScale/h.noiseChannelCountMax*256)%360+","+(this.c_noiseSecondaryNoteSat+t*this.c_noiseSecondaryNoteSatScale)+"%,"+(this.c_noiseSecondaryNoteLum+t*this.c_noiseSecondaryNoteLumScale)+"%)",primaryNote:"hsl("+(this.c_noisePrimaryNoteHue+(t-e.pitchChannelCount)*this.c_noisePrimaryNoteHueScale/h.noiseChannelCountMax*256)%360+","+(this.c_noisePrimaryNoteSat+t*this.c_noisePrimaryNoteSatScale)+"%,"+(this.c_noisePrimaryNoteLum+t*this.c_noisePrimaryNoteLumScale)+"%)"};return te.colorLookup.set(t,n),n}{let n={secondaryChannel:"hsl("+(this.c_modSecondaryChannelHue+(t-e.pitchChannelCount-e.noiseChannelCount)*this.c_modSecondaryChannelHueScale/h.modChannelCountMax*256)%360+","+(this.c_modSecondaryChannelSat+t*this.c_modSecondaryChannelSatScale)+"%,"+(this.c_modSecondaryChannelLum+t*this.c_modSecondaryChannelLumScale)+"%)",primaryChannel:"hsl("+(this.c_modPrimaryChannelHue+(t-e.pitchChannelCount-e.noiseChannelCount)*this.c_modPrimaryChannelHueScale/h.modChannelCountMax*256)%360+","+(this.c_modPrimaryChannelSat+t*this.c_modPrimaryChannelSatScale)+"%,"+(this.c_modPrimaryChannelLum+t*this.c_modPrimaryChannelLumScale)+"%)",secondaryNote:"hsl("+(this.c_modSecondaryNoteHue+(t-e.pitchChannelCount-e.noiseChannelCount)*this.c_modSecondaryNoteHueScale/h.modChannelCountMax*256)%360+","+(this.c_modSecondaryNoteSat+t*this.c_modSecondaryNoteSatScale)+"%,"+(this.c_modSecondaryNoteLum+t*this.c_modSecondaryNoteLumScale)+"%)",primaryNote:"hsl("+(this.c_modPrimaryNoteHue+(t-e.pitchChannelCount-e.noiseChannelCount)*this.c_modPrimaryNoteHueScale/h.modChannelCountMax*256)%360+","+(this.c_modPrimaryNoteSat+t*this.c_modPrimaryNoteSatScale)+"%,"+(this.c_modPrimaryNoteLum+t*this.c_modPrimaryNoteLumScale)+"%)"};return te.colorLookup.set(t,n),n}}return t<e.pitchChannelCount?""==te.getComputed("--pitch-channel-limit")?te.pitchChannels[t%te.pitchChannels.length]:te.pitchChannels[t%Number(te.getComputed("--pitch-channel-limit"))%te.pitchChannels.length]:t<e.pitchChannelCount+e.noiseChannelCount?""==te.getComputed("--noise-channel-limit")?te.noiseChannels[(t-e.pitchChannelCount)%te.noiseChannels.length]:te.noiseChannels[(t-e.pitchChannelCount)%Number(te.getComputed("--noise-channel-limit"))%te.noiseChannels.length]:""==te.getComputed("--mod-channel-limit")?te.modChannels[(t-e.pitchChannelCount-e.noiseChannelCount)%te.modChannels.length]:te.modChannels[(t-e.pitchChannelCount-e.noiseChannelCount)%Number(te.getComputed("--mod-channel-limit"))%te.modChannels.length]}static setThemeProperty(e,t){var n;(null===(n=this.p.sheet)||void 0===n?void 0:n.cssRules[0]).style.setProperty(e,t)}static getThemeProperties(){var e;return null===(e=this.p.sheet)||void 0===e?void 0:e.cssRules[0].cssText}static getFullTheme(){return this.p.textContent}static setTheme(e){let t=this.themes[e];null==t&&(t=this.themes["AbyssBox Classic"]),this.p.textContent=t,this.currentSetTheme=e;const n=document.querySelector("meta[name='theme-color']");null!=n&&n.setAttribute("content",getComputedStyle(document.documentElement).getPropertyValue("--ui-widget-background")),this.resetColors(),this.usesColorFormula="true"==getComputedStyle(this.p).getPropertyValue("--use-color-formula").trim(),this.usesPianoScheme="true"==getComputedStyle(this.p).getPropertyValue("--use-piano-scheme").trim(),this.c_invertedText=getComputedStyle(this.p).getPropertyValue("--inverted-text"),this.c_trackEditorBgNoiseDim=getComputedStyle(this.p).getPropertyValue("--track-editor-bg-noise-dim"),this.c_trackEditorBgNoise=getComputedStyle(this.p).getPropertyValue("--track-editor-bg-noise"),this.c_trackEditorBgModDim=getComputedStyle(this.p).getPropertyValue("--track-editor-bg-mod-dim"),this.c_trackEditorBgMod=getComputedStyle(this.p).getPropertyValue("--track-editor-bg-mod"),this.c_trackEditorBgPitchDim=getComputedStyle(this.p).getPropertyValue("--track-editor-bg-pitch-dim"),this.c_trackEditorBgPitch=getComputedStyle(this.p).getPropertyValue("--track-editor-bg-pitch"),this.usesColorFormula&&(this.c_pitchSecondaryChannelHue=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-hue"),this.c_pitchSecondaryChannelHueScale=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-hue-scale"),this.c_pitchSecondaryChannelSat=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-sat"),this.c_pitchSecondaryChannelSatScale=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-sat-scale"),this.c_pitchSecondaryChannelLum=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-lum"),this.c_pitchSecondaryChannelLumScale=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-channel-lum-scale"),this.c_pitchPrimaryChannelHue=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-hue"),this.c_pitchPrimaryChannelHueScale=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-hue-scale"),this.c_pitchPrimaryChannelSat=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-sat"),this.c_pitchPrimaryChannelSatScale=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-sat-scale"),this.c_pitchPrimaryChannelLum=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-lum"),this.c_pitchPrimaryChannelLumScale=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-channel-lum-scale"),this.c_pitchSecondaryNoteHue=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-hue"),this.c_pitchSecondaryNoteHueScale=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-hue-scale"),this.c_pitchSecondaryNoteSat=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-sat"),this.c_pitchSecondaryNoteSatScale=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-sat-scale"),this.c_pitchSecondaryNoteLum=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-lum"),this.c_pitchSecondaryNoteLumScale=+getComputedStyle(this.p).getPropertyValue("--pitch-secondary-note-lum-scale"),this.c_pitchPrimaryNoteHue=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-hue"),this.c_pitchPrimaryNoteHueScale=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-hue-scale"),this.c_pitchPrimaryNoteSat=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-sat"),this.c_pitchPrimaryNoteSatScale=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-sat-scale"),this.c_pitchPrimaryNoteLum=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-lum"),this.c_pitchPrimaryNoteLumScale=+getComputedStyle(this.p).getPropertyValue("--pitch-primary-note-lum-scale"),this.c_noiseSecondaryChannelHue=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-hue"),this.c_noiseSecondaryChannelHueScale=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-hue-scale"),this.c_noiseSecondaryChannelSat=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-sat"),this.c_noiseSecondaryChannelSatScale=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-sat-scale"),this.c_noiseSecondaryChannelLum=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-lum"),this.c_noiseSecondaryChannelLumScale=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-channel-lum-scale"),this.c_noisePrimaryChannelHue=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-hue"),this.c_noisePrimaryChannelHueScale=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-hue-scale"),this.c_noisePrimaryChannelSat=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-sat"),this.c_noisePrimaryChannelSatScale=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-sat-scale"),this.c_noisePrimaryChannelLum=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-lum"),this.c_noisePrimaryChannelLumScale=+getComputedStyle(this.p).getPropertyValue("--noise-primary-channel-lum-scale"),this.c_noiseSecondaryNoteHue=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-hue"),this.c_noiseSecondaryNoteHueScale=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-hue-scale"),this.c_noiseSecondaryNoteSat=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-sat"),this.c_noiseSecondaryNoteSatScale=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-sat-scale"),this.c_noiseSecondaryNoteLum=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-lum"),this.c_noiseSecondaryNoteLumScale=+getComputedStyle(this.p).getPropertyValue("--noise-secondary-note-lum-scale"),this.c_noisePrimaryNoteHue=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-hue"),this.c_noisePrimaryNoteHueScale=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-hue-scale"),this.c_noisePrimaryNoteSat=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-sat"),this.c_noisePrimaryNoteSatScale=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-sat-scale"),this.c_noisePrimaryNoteLum=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-lum"),this.c_noisePrimaryNoteLumScale=+getComputedStyle(this.p).getPropertyValue("--noise-primary-note-lum-scale"),this.c_modSecondaryChannelHue=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-hue"),this.c_modSecondaryChannelHueScale=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-hue-scale"),this.c_modSecondaryChannelSat=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-sat"),this.c_modSecondaryChannelSatScale=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-sat-scale"),this.c_modSecondaryChannelLum=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-lum"),this.c_modSecondaryChannelLumScale=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-channel-lum-scale"),this.c_modPrimaryChannelHue=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-hue"),this.c_modPrimaryChannelHueScale=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-hue-scale"),this.c_modPrimaryChannelSat=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-sat"),this.c_modPrimaryChannelSatScale=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-sat-scale"),this.c_modPrimaryChannelLum=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-lum"),this.c_modPrimaryChannelLumScale=+getComputedStyle(this.p).getPropertyValue("--mod-primary-channel-lum-scale"),this.c_modSecondaryNoteHue=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-hue"),this.c_modSecondaryNoteHueScale=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-hue-scale"),this.c_modSecondaryNoteSat=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-sat"),this.c_modSecondaryNoteSatScale=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-sat-scale"),this.c_modSecondaryNoteLum=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-lum"),this.c_modSecondaryNoteLumScale=+getComputedStyle(this.p).getPropertyValue("--mod-secondary-note-lum-scale"),this.c_modPrimaryNoteHue=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-hue"),this.c_modPrimaryNoteHueScale=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-hue-scale"),this.c_modPrimaryNoteSat=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-sat"),this.c_modPrimaryNoteSatScale=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-sat-scale"),this.c_modPrimaryNoteLum=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-lum"),this.c_modPrimaryNoteLumScale=+getComputedStyle(this.p).getPropertyValue("--mod-primary-note-lum-scale"))}static getComputed(e){return getComputedStyle(this.p).getPropertyValue(e)}}te.colorLookup=new Map,te.usesColorFormula=!1,te.usesPianoScheme=!1,te.currentSetTheme="Rainbow",te.themes={Glyde:'\n\t  :root { \n\t\t--page-margin: #000000; \n\t\t--song-player-margin: #000;\n\t\t--editor-background: #472434a8; \n\t\t--hover-preview: white; \n\t\t--playhead: rgba(255, 255, 255, 0.9); \n\t\t--primary-text: #ffe5c2; \n\t\t--secondary-text: #ffcedd; \n\t\t--inverted-text: black; \n\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t--box-selection-fill: #1e0915; \n\t\t--loop-accent: #ffdeaf; \n\t\t--link-accent: #df88ff; \n\t\t--ui-widget-background: #8a516e9e; \n\t\t--ui-widget-focus: #4f152b; \n\t\t--pitch-background: #00000038; \n\t\t--tonic: #ff9db9; \n\t\t--fifth-note: #ffe1b88c; \n\t\t--third-note: #8e2f9b8c;\n\t\t--white-piano-key: #ffb6ce; \n\t\t--black-piano-key: #ff7ba7; \n\t\t--use-color-formula: true; \n\t\t--track-editor-bg-pitch: #751e40; \n\t\t--track-editor-bg-pitch-dim: #4f152b; \n\t\t--track-editor-bg-noise: #751e30; \n\t\t--track-editor-bg-noise-dim: #4f152b; \n\t\t--track-editor-bg-mod: #751e29; \n\t\t--track-editor-bg-mod-dim: #4f152b; \n\t\t--multiplicative-mod-slider: #ea7d7d; \n\t\t--overwriting-mod-slider: #ffebd5; \n\t\t--indicator-primary: #ffebd5; \n\t\t--indicator-secondary: #4f152b; \n\t\t--select2-opt-group: #ffebd5; \n\t\t--input-box-outline: #a33e67; \n\t\t--mute-button-normal: #b63448; \n\t\t--mute-button-mod: #6d0f1d; \n\t\t--mod-label-primary: #2b080d; \n\t\t--mod-label-secondary-text: #421a20; \n\t\t--mod-label-primary-text: #ffc6cf; \n\t\t--progress-bar: #ffc9ff;\n\t\t--pitch-secondary-channel-hue: 60; \n\t\t--pitch-secondary-channel-sat: 23; \n\t\t--pitch-secondary-channel-sat-scale: 0.1; \n\t\t--pitch-secondary-channel-lum: 50; \n\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t--pitch-primary-channel-hue: 60; \n\t\t--pitch-primary-channel-hue-scale: 6.1; \n\t\t--pitch-primary-channel-sat: 75; \n\t\t--pitch-primary-channel-sat-scale: 0.1; \n\t\t--pitch-primary-channel-lum: 87.5; \n\t\t--pitch-primary-channel-lum-scale: 0.05; \n\t\t--pitch-secondary-note-hue: 60; \n\t\t--pitch-secondary-note-hue-scale: 6.1; \n\t\t--pitch-secondary-note-sat: 53.9; \n\t\t--pitch-secondary-note-sat-scale: 0.1; \n\t\t--pitch-secondary-note-lum: 65; \n\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t--pitch-primary-note-hue: 60; \n\t\t--pitch-primary-note-hue-scale: 6.1; \n\t\t--pitch-primary-note-sat: 100; \n\t\t--pitch-primary-note-sat-scale: 0.05; \n\t\t--pitch-primary-note-lum: 95.6; \n\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t--noise-secondary-channel-hue: 0; \n\t\t--noise-secondary-channel-hue-scale: 2; \n\t\t--noise-secondary-channel-sat: 65; \n\t\t--noise-secondary-channel-sat-scale: 0; \n\t\t--noise-secondary-channel-lum: 72; \n\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t--noise-primary-channel-hue: 0; \n\t\t--noise-primary-channel-hue-scale: 1; \n\t\t--noise-primary-channel-sat: 100; \n\t\t--noise-primary-channel-sat-scale: 1; \n\t\t--noise-primary-channel-lum: 93.5; \n\t\t--noise-primary-channel-lum-scale: 0; \n\t\t--noise-secondary-note-hue: 24; \n\t\t--noise-secondary-note-hue-scale: 2; \n\t\t--noise-secondary-note-sat: 100; \n\t\t--noise-secondary-note-sat-scale: 0; \n\t\t--noise-secondary-note-lum: 75; \n\t\t--noise-secondary-note-lum-scale: 0; \n\t\t--noise-primary-note-hue: 24; \n\t\t--noise-primary-note-hue-scale: 2; \n\t\t--noise-primary-note-sat: 100; \n\t\t--noise-primary-note-sat-scale: 1; \n\t\t--noise-primary-note-lum: 90; \n\t\t--noise-primary-note-lum-scale: 1; \n\t\t--mod-secondary-channel-hue: 55; \n\t\t--mod-secondary-channel-hue-scale: 1.5; \n\t\t--mod-secondary-channel-sat: 100; \n\t\t--mod-secondary-channel-sat-scale: 0; \n\t\t--mod-secondary-channel-lum: 70; \n\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t--mod-primary-channel-hue: 55; \n\t\t--mod-primary-channel-hue-scale: 1.5; \n\t\t--mod-primary-channel-sat: 96; \n\t\t--mod-primary-channel-sat-scale: 0; \n\t\t--mod-primary-channel-lum: 95; \n\t\t--mod-primary-channel-lum-scale: 0; \n\t\t--mod-secondary-note-hue: 55; \n\t\t--mod-secondary-note-hue-scale: 1.5; \n\t\t--mod-secondary-note-sat: 92; \n\t\t--mod-secondary-note-sat-scale: 0; \n\t\t--mod-secondary-note-lum: 75; \n\t\t--mod-secondary-note-lum-scale: 0; \n\t\t--mod-primary-note-hue: 55; \n\t\t--mod-primary-note-hue-scale: 1.5; \n\t\t--mod-primary-note-sat: 96; \n\t\t--mod-primary-note-sat-scale: 0; \n\t\t--mod-primary-note-lum: 95; \n\t\t--mod-primary-note-lum-scale: 0; \n\t\t--note-flash: #fff; \n\t\t--note-flash-secondary: #ffffff54; }\n\t\t* {\n\t\tcursor: url("abyssbox_cursor.png"), auto !important;\n\t\t}\n\t\t\n\t\t\t@font-face {\n\t\t   font-family: "Varela";\n\t\t   src:\n \t\t   url("./image_assets/Varela.ttf") format("truetype") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url("https://choptop84.github.io/choptop84s-image-repository/glydebg.png") !important;\n\t\t\tbackground-position: top right;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\tdiv#beepboxEditorContainer {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-width: 8px;\n\t\t\t\tborder-color: #4f152b;\n\t\t\t\tpadding-bottom: 5px;\n\t\t\t}\n\t\t\t\t\n\t\t\t#text-content {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-width: 8px;\n\t\t\t\tborder-color: #4f152b;\n\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: \'Varela\';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: \'Varela\' !important;\n\t\t\t}\n\n\t\t\t#firstImage {\n\t\t\t\tbackground-image: url("https://choptop84.github.io/choptop84s-image-repository/slushiepfp.PNG") !important;\n\t\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\tbackground-size: 100% 100% !important;\n\t\t\t}\n\n\t\t\t#text-content > section > h1 > font {\n\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\tmargin: auto;\n\t\t\t\tcontent: url("https://choptop84.github.io/choptop84s-image-repository/AbyssBoxGlydeThemeLogo.png");\n\t\t\t\t}\n\n\t\t\t\tdiv.beepboxEditor.load {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   div.noSelection {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   .beepboxEditor .loopEditor {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   .beepboxEditor .muteEditor {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   div.muteEditor div {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\t',"modbox rainbow":"\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #ff0000;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\n\t\t\t\t--pitch-background: #444; \n\t\t\t\t--tonic: #ffaaaa; \n\t\t\t\t--pitch1-background: #ffceaa; \n\t\t\t\t--pitch2-background: #ffdfaa; \n\t\t\t\t--pitch3-background: #fff5aa; \n\t\t\t\t--third-note: #e8ffaa;\n\t\t\t\t--pitch5-background: #bfffb2; \n\t\t\t\t--pitch6-background: #b2ffc8; \n\t\t\t\t--fifth-note: #b2ffe4; \n\t\t\t\t--pitch8-background: #b2f3ff; \n\t\t\t\t--pitch9-background: #b2b3ff; \n\t\t\t\t--pitch10-background: #e0b2ff; \n\t\t\t\t--pitch11-background: #ffafe9; \n\t\t\t\t--octave-scrollbar: #43ff00; \n\t\t\t\t\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #000000;\n\t\t\t\t--black-piano-key-text: #fefe00;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t --mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t",Rainbow:"\n\t  :root { \n\t--page-margin: black;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #ff0000;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\n\t\t\t--pitch-background: #444; \n\t\t\t--tonic: #ffaaaa; \n\t\t\t--pitch1-background: #ffceaa; \n\t\t\t--pitch2-background: #ffdfaa; \n\t\t\t--pitch3-background: #fff5aa; \n\t\t\t--third-note: #e8ffaa;\n\t\t\t--pitch5-background: #bfffb2; \n\t\t\t--pitch6-background: #b2ffc8; \n\t\t\t--fifth-note: #b2ffe4; \n\t\t\t--pitch8-background: #b2f3ff; \n\t\t\t--pitch9-background: #b2b3ff; \n\t\t\t--pitch10-background: #e0b2ff; \n\t\t\t--pitch11-background: #ffafe9; \n\t\t\t--octave-scrollbar: #43ff00; \n\t\t\t\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #000000;\n\t\t\t--black-piano-key-text: #fefe00;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #74f;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\n\t\t\t--noise-channel-limit: 4;\n\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t--mod1-secondary-channel: #0099a1;\n\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t }\n\n\t\t@keyframes rainbowBG {\n\t\t0%   { color: #da1d1d; background-color: #da1d1d; }\n\t\t14%  { color: #eb7a38; background-color: #eb7a38; }\n\t\t28%  { color: #f1c811; background-color: #f1c811; }\n\t\t42%  { color: #11cc39; background-color: #11cc39; }\n\t\t57%  { color: #2ed9e6; background-color: #2ed9e6; }\n\t\t71%  { color: #842ee6; background-color: #842ee6; }\n\t\t85%  { color: #e02ee6; background-color: #e02ee6; }\n\t\t100% { color: #da1d1d; background-color: #da1d1d; }\n\t\t}\n\t\t\n\n\t\t/* sets background image */\n\t\tbody {\n\t\tanimation: rainbowBG 2s;\n\t\tanimation-iteration-count: infinite;\n\t\t}\n\n\t\t.beepboxEditor button {\n\t\t\tanimation: rainbow 2s;\n\t\t\tanimation-iteration-count: infinite;\n\t\t}\n\t\t\t"},te.pageMargin="var(--page-margin)",te.editorBackground="var(--editor-background)",te.hoverPreview="var(--hover-preview)",te.playhead="var(--playhead)",te.primaryText="var(--primary-text)",te.secondaryText="var(--secondary-text)",te.invertedText="var(--inverted-text)",te.textSelection="var(--text-selection)",te.boxSelectionFill="var(--box-selection-fill)",te.loopAccent="var(--loop-accent)",te.sampleFailed="var(--sample-failed, #f00)",te.linkAccent="var(--link-accent)",te.uiWidgetBackground="var(--ui-widget-background)",te.uiWidgetFocus="var(--ui-widget-focus)",te.pitchBackground="var(--pitch-background)",te.tonic="var(--tonic)",te.fifthNote="var(--fifth-note)",te.thirdNote="var(--third-note)",te.dimmedArea="var(--dimmed-area, var(--editor-background))",te.pitch1Background="var(--pitch1-background)",te.pitch2Background="var(--pitch2-background)",te.pitch3Background="var(--pitch3-background)",te.pitch5Background="var(--pitch5-background)",te.pitch6Background="var(--pitch6-background)",te.pitch8Background="var(--pitch8-background)",te.pitch9Background="var(--pitch9-background)",te.pitch10Background="var(--pitch10-background)",te.pitch11Background="var(--pitch11-background)",te.whitePianoKey="var(--white-piano-key)",te.blackPianoKey="var(--black-piano-key)",te.whitePianoKeyText="var(--white-piano-key-text)",te.blackPianoKeyText="var(--black-piano-key-text)",te.songPlayerMargin="var(--song-player-margin)",te.progressBar="var(--progress-bar)",te.useColorFormula="var(--use-color-formula)",te.pitchSecondaryChannelHue="var(--pitch-secondary-channel-hue)",te.pitchSecondaryChannelHueScale="var(--pitch-secondary-channel-hue-scale)",te.pitchSecondaryChannelSat="var(--pitch-secondary-channel-sat)",te.pitchSecondaryChannelSatScale="var(--pitch-secondary-channel-sat-scale)",te.pitchSecondaryChannelLum="var(--pitch-secondary-channel-lum)",te.pitchSecondaryChannelLumScale="var(--pitch-secondary-channel-lum-scale)",te.pitchPrimaryChannelHue="var(--pitch-primary-channel-hue)",te.pitchPrimaryChannelHueScale="var(--pitch-primary-channel-hue-scale)",te.pitchPrimaryChannelSat="var(--pitch-primary-channel-sat)",te.pitchPrimaryChannelSatScale="var(--pitch-primary-channel-sat-scale)",te.pitchPrimaryChannelLum="var(--pitch-primary-channel-lum)",te.pitchPrimaryChannelLumScale="var(--pitch-primary-channel-lum-scale)",te.pitchSecondaryNoteHue="var(--pitch-secondary-note-hue)",te.pitchSecondaryNoteHueScale="var(--pitch-secondary-note-hue-scale)",te.pitchSecondaryNoteSat="var(--pitch-secondary-note-sat)",te.pitchSecondaryNoteSatScale="var(--pitch-secondary-note-sat-scale)",te.pitchSecondaryNoteLum="var(--pitch-secondary-note-lum)",te.pitchSecondaryNoteLumScale="var(--pitch-secondary-note-lum-scale)",te.pitchPrimaryNoteHue="var(--pitch-primary-note-hue)",te.pitchPrimaryNoteHueScale="var(--pitch-primary-note-hue-scale)",te.pitchPrimaryNoteSat="var(--pitch-primary-note-sat)",te.pitchPrimaryNoteSatScale="var(--pitch-primary-note-sat-scale)",te.pitchPrimaryNoteLum="var(--pitch-primary-note-lum)",te.pitchPrimaryNoteLumScale="var(--pitch-primary-note-lum-scale)",te.modSecondaryChannelHue="var(--mod-secondary-channel-hue)",te.modSecondaryChannelHueScale="var(--mod-secondary-channel-hue-scale)",te.modSecondaryChannelSat="var(--mod-secondary-channel-sat)",te.modSecondaryChannelSatScale="var(--mod-secondary-channel-sat-scale)",te.modSecondaryChannelLum="var(--mod-secondary-channel-lum)",te.modSecondaryChannelLumScale="var(--mod-secondary-channel-lum-scale)",te.modPrimaryChannelHue="var(--mod-primary-channel-hue)",te.modPrimaryChannelHueScale="var(--mod-primary-channel-hue-scale)",te.modPrimaryChannelSat="var(--mod-primary-channel-sat)",te.modPrimaryChannelSatScale="var(--mod-primary-channel-sat-scale)",te.modPrimaryChannelLum="var(--mod-primary-channel-lum)",te.modPrimaryChannelLumScale="var(--mod-primary-channel-lum-scale)",te.modSecondaryNoteHue="var(--mod-secondary-note-hue)",te.modSecondaryNoteHueScale="var(--mod-secondary-note-hue-scale)",te.modSecondaryNoteSat="var(--mod-secondary-note-sat)",te.modSecondaryNoteSatScale="var(--mod-secondary-note-sat-scale)",te.modSecondaryNoteLum="var(--mod-secondary-note-lum)",te.modSecondaryNoteLumScale="var(--mod-secondary-note-lum-scale)",te.modPrimaryNoteHue="var(--mod-primary-note-hue)",te.modPrimaryNoteHueScale="var(--mod-primary-note-hue-scale)",te.modPrimaryNoteSat="var(--mod-primary-note-sat)",te.modPrimaryNoteSatScale="var(--mod-primary-note-sat-scale)",te.modPrimaryNoteLum="var(--mod-primary-note-lum)",te.modPrimaryNoteLumScale="var(--mod-primary-note-lum-scale)",te.noiseSecondaryChannelHue="var(--noise-secondary-channel-hue)",te.noiseSecondaryChannelHueScale="var(--noise-secondary-channel-hue-scale)",te.noiseSecondaryChannelSat="var(--noise-secondary-channel-sat)",te.noiseSecondaryChannelSatScale="var(--noise-secondary-channel-sat-scale)",te.noiseSecondaryChannelLum="var(--noise-secondary-channel-lum)",te.noiseSecondaryChannelLumScale="var(--noise-secondary-channel-lum-scale)",te.noisePrimaryChannelHue="var(--noise-primary-channel-hue)",te.noisePrimaryChannelHueScale="var(--noise-primary-channel-hue-scale)",te.noisePrimaryChannelSat="var(--noise-primary-channel-sat)",te.noisePrimaryChannelSatScale="var(--noise-primary-channel-sat-scale)",te.noisePrimaryChannelLum="var(--noise-primary-channel-lum)",te.noisePrimaryChannelLumScale="var(--noise-primary-channel-lum-scale)",te.noiseSecondaryNoteHue="var(--noise-secondary-note-hue)",te.noiseSecondaryNoteHueScale="var(--noise-secondary-note-hue-scale)",te.noiseSecondaryNoteSat="var(--noise-secondary-note-sat)",te.noiseSecondaryNoteSatScale="var(--noise-secondary-note-sat-scale)",te.noiseSecondaryNoteLum="var(--noise-secondary-note-lum)",te.noiseSecondaryNoteLumScale="var(--noise-secondary-note-lum-scale)",te.noisePrimaryNoteHue="var(--noise-primary-note-hue)",te.noisePrimaryNoteHueScale="var(--noise-primary-note-hue-scale)",te.noisePrimaryNoteSat="var(--noise-primary-note-sat)",te.noisePrimaryNoteSatScale="var(--noise-primary-note-sat-scale)",te.noisePrimaryNoteLum="var(--noise-primary-note-lum)",te.noisePrimaryNoteLumScale="var(--noise-primary-note-lum-scale)",te.trackEditorBgPitch="var(--track-editor-bg-pitch)",te.trackEditorBgPitchDim="var(--track-editor-bg-pitch-dim)",te.trackEditorBgNoise="var(--track-editor-bg-noise)",te.trackEditorBgNoiseDim="var(--track-editor-bg-noise-dim)",te.trackEditorBgMod="var(--track-editor-bg-mod)",te.trackEditorBgModDim="var(--track-editor-bg-mod-dim)",te.multiplicativeModSlider="var(--multiplicative-mod-slider)",te.overwritingModSlider="var(--overwriting-mod-slider)",te.indicatorPrimary="var(--indicator-primary)",te.indicatorSecondary="var(--indicator-secondary)",te.select2OptGroup="var(--select2-opt-group)",te.inputBoxOutline="var(--input-box-outline)",te.muteButtonNormal="var(--mute-button-normal)",te.muteButtonMod="var(--mute-button-mod)",te.modLabelPrimary="var(--mod-label-primary)",te.modLabelSecondaryText="var(--mod-label-secondary-text)",te.modLabelPrimaryText="var(--mod-label-primary-text)",te.disabledNotePrimary="var(--disabled-note-primary)",te.disabledNoteSecondary="var(--disabled-note-secondary)",te.scrollbarColor="var(--scrollbar-color)",te.scrollbarBackground="var(--scrollbar-background)",te.c_pitchSecondaryChannelHue=0,te.c_pitchSecondaryChannelHueScale=0,te.c_pitchSecondaryChannelSat=0,te.c_pitchSecondaryChannelSatScale=0,te.c_pitchSecondaryChannelLum=0,te.c_pitchSecondaryChannelLumScale=0,te.c_pitchPrimaryChannelHue=0,te.c_pitchPrimaryChannelHueScale=0,te.c_pitchPrimaryChannelSat=0,te.c_pitchPrimaryChannelSatScale=0,te.c_pitchPrimaryChannelLum=0,te.c_pitchPrimaryChannelLumScale=0,te.c_pitchSecondaryNoteHue=0,te.c_pitchSecondaryNoteHueScale=0,te.c_pitchSecondaryNoteSat=0,te.c_pitchSecondaryNoteSatScale=0,te.c_pitchSecondaryNoteLum=0,te.c_pitchSecondaryNoteLumScale=0,te.c_pitchPrimaryNoteHue=0,te.c_pitchPrimaryNoteHueScale=0,te.c_pitchPrimaryNoteSat=0,te.c_pitchPrimaryNoteSatScale=0,te.c_pitchPrimaryNoteLum=0,te.c_pitchPrimaryNoteLumScale=0,te.c_modSecondaryChannelHue=0,te.c_modSecondaryChannelHueScale=0,te.c_modSecondaryChannelSat=0,te.c_modSecondaryChannelSatScale=0,te.c_modSecondaryChannelLum=0,te.c_modSecondaryChannelLumScale=0,te.c_modPrimaryChannelHue=0,te.c_modPrimaryChannelHueScale=0,te.c_modPrimaryChannelSat=0,te.c_modPrimaryChannelSatScale=0,te.c_modPrimaryChannelLum=0,te.c_modPrimaryChannelLumScale=0,te.c_modSecondaryNoteHue=0,te.c_modSecondaryNoteHueScale=0,te.c_modSecondaryNoteSat=0,te.c_modSecondaryNoteSatScale=0,te.c_modSecondaryNoteLum=0,te.c_modSecondaryNoteLumScale=0,te.c_modPrimaryNoteHue=0,te.c_modPrimaryNoteHueScale=0,te.c_modPrimaryNoteSat=0,te.c_modPrimaryNoteSatScale=0,te.c_modPrimaryNoteLum=0,te.c_modPrimaryNoteLumScale=0,te.c_noiseSecondaryChannelHue=0,te.c_noiseSecondaryChannelHueScale=0,te.c_noiseSecondaryChannelSat=0,te.c_noiseSecondaryChannelSatScale=0,te.c_noiseSecondaryChannelLum=0,te.c_noiseSecondaryChannelLumScale=0,te.c_noisePrimaryChannelHue=0,te.c_noisePrimaryChannelHueScale=0,te.c_noisePrimaryChannelSat=0,te.c_noisePrimaryChannelSatScale=0,te.c_noisePrimaryChannelLum=0,te.c_noisePrimaryChannelLumScale=0,te.c_noiseSecondaryNoteHue=0,te.c_noiseSecondaryNoteHueScale=0,te.c_noiseSecondaryNoteSat=0,te.c_noiseSecondaryNoteSatScale=0,te.c_noiseSecondaryNoteLum=0,te.c_noiseSecondaryNoteLumScale=0,te.c_noisePrimaryNoteHue=0,te.c_noisePrimaryNoteHueScale=0,te.c_noisePrimaryNoteSat=0,te.c_noisePrimaryNoteSatScale=0,te.c_noisePrimaryNoteLum=0,te.c_noisePrimaryNoteLumScale=0,te.c_invertedText="",te.c_trackEditorBgNoiseDim="",te.c_trackEditorBgNoise="",te.c_trackEditorBgModDim="",te.c_trackEditorBgMod="",te.c_trackEditorBgPitchDim="",te.c_trackEditorBgPitch="",te.pitchChannels=w([{name:"pitch1",secondaryChannel:"var(--pitch1-secondary-channel)",primaryChannel:"var(--pitch1-primary-channel)",secondaryNote:"var(--pitch1-secondary-note)",primaryNote:"var(--pitch1-primary-note)"},{name:"pitch2",secondaryChannel:"var(--pitch2-secondary-channel)",primaryChannel:"var(--pitch2-primary-channel)",secondaryNote:"var(--pitch2-secondary-note)",primaryNote:"var(--pitch2-primary-note)"},{name:"pitch3",secondaryChannel:"var(--pitch3-secondary-channel)",primaryChannel:"var(--pitch3-primary-channel)",secondaryNote:"var(--pitch3-secondary-note)",primaryNote:"var(--pitch3-primary-note)"},{name:"pitch4",secondaryChannel:"var(--pitch4-secondary-channel)",primaryChannel:"var(--pitch4-primary-channel)",secondaryNote:"var(--pitch4-secondary-note)",primaryNote:"var(--pitch4-primary-note)"},{name:"pitch5",secondaryChannel:"var(--pitch5-secondary-channel)",primaryChannel:"var(--pitch5-primary-channel)",secondaryNote:"var(--pitch5-secondary-note)",primaryNote:"var(--pitch5-primary-note)"},{name:"pitch6",secondaryChannel:"var(--pitch6-secondary-channel)",primaryChannel:"var(--pitch6-primary-channel)",secondaryNote:"var(--pitch6-secondary-note)",primaryNote:"var(--pitch6-primary-note)"},{name:"pitch7",secondaryChannel:"var(--pitch7-secondary-channel)",primaryChannel:"var(--pitch7-primary-channel)",secondaryNote:"var(--pitch7-secondary-note)",primaryNote:"var(--pitch7-primary-note)"},{name:"pitch8",secondaryChannel:"var(--pitch8-secondary-channel)",primaryChannel:"var(--pitch8-primary-channel)",secondaryNote:"var(--pitch8-secondary-note)",primaryNote:"var(--pitch8-primary-note)"},{name:"pitch9",secondaryChannel:"var(--pitch9-secondary-channel)",primaryChannel:"var(--pitch9-primary-channel)",secondaryNote:"var(--pitch9-secondary-note)",primaryNote:"var(--pitch9-primary-note)"},{name:"pitch10",secondaryChannel:"var(--pitch10-secondary-channel)",primaryChannel:"var(--pitch10-primary-channel)",secondaryNote:"var(--pitch10-secondary-note)",primaryNote:"var(--pitch10-primary-note)"},{name:"pitch11",secondaryChannel:"var(--pitch11-secondary-channel)",primaryChannel:"var(--pitch11-primary-channel)",secondaryNote:"var(--pitch11-secondary-note)",primaryNote:"var(--pitch11-primary-note)"},{name:"pitch12",secondaryChannel:"var(--pitch12-secondary-channel)",primaryChannel:"var(--pitch12-primary-channel)",secondaryNote:"var(--pitch12-secondary-note)",primaryNote:"var(--pitch12-primary-note)"}]),te.noiseChannels=w([{name:"noise1",secondaryChannel:"var(--noise1-secondary-channel)",primaryChannel:"var(--noise1-primary-channel)",secondaryNote:"var(--noise1-secondary-note)",primaryNote:"var(--noise1-primary-note)"},{name:"noise2",secondaryChannel:"var(--noise2-secondary-channel)",primaryChannel:"var(--noise2-primary-channel)",secondaryNote:"var(--noise2-secondary-note)",primaryNote:"var(--noise2-primary-note)"},{name:"noise3",secondaryChannel:"var(--noise3-secondary-channel)",primaryChannel:"var(--noise3-primary-channel)",secondaryNote:"var(--noise3-secondary-note)",primaryNote:"var(--noise3-primary-note)"},{name:"noise4",secondaryChannel:"var(--noise4-secondary-channel)",primaryChannel:"var(--noise4-primary-channel)",secondaryNote:"var(--noise4-secondary-note)",primaryNote:"var(--noise4-primary-note)"},{name:"noise5",secondaryChannel:"var(--noise5-secondary-channel)",primaryChannel:"var(--noise5-primary-channel)",secondaryNote:"var(--noise5-secondary-note)",primaryNote:"var(--noise5-primary-note)"}]),te.modChannels=w([{name:"mod1",secondaryChannel:"var(--mod1-secondary-channel)",primaryChannel:"var(--mod1-primary-channel)",secondaryNote:"var(--mod1-secondary-note)",primaryNote:"var(--mod1-primary-note)"},{name:"mod2",secondaryChannel:"var(--mod2-secondary-channel)",primaryChannel:"var(--mod2-primary-channel)",secondaryNote:"var(--mod2-secondary-note)",primaryNote:"var(--mod2-primary-note)"},{name:"mod3",secondaryChannel:"var(--mod3-secondary-channel)",primaryChannel:"var(--mod3-primary-channel)",secondaryNote:"var(--mod3-secondary-note)",primaryNote:"var(--mod3-primary-note)"},{name:"mod4",secondaryChannel:"var(--mod4-secondary-channel)",primaryChannel:"var(--mod4-primary-channel)",secondaryNote:"var(--mod4-secondary-note)",primaryNote:"var(--mod4-primary-note)"}]),te.p=document.head.appendChild(Q.style({type:"text/css"})),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);class ne{static valueToPreset(e){const t=e>>6,n=63&e;return null==ne?void 0:ne.presetCategories[t].presets[n]}static midiProgramToPresetValue(e){for(let t=0;t<ne.presetCategories.length;t++){const n=ne.presetCategories[t];for(let i=0;i<n.presets.length;i++){const a=n.presets[i];if(a.generalMidi&&a.midiProgram==e)return(t<<6)+i}}return null}static nameToPresetValue(e){for(let t=0;t<ne.presetCategories.length;t++){const n=ne.presetCategories[t];for(let i=0;i<n.presets.length;i++){if(n.presets[i].name==e)return(t<<6)+i}}return null}static instrumentToPreset(e){var t;return null===(t=ne.presetCategories[0].presets.dictionary)||void 0===t?void 0:t[null==n?void 0:n[e]]}}function ie(e,t){for(let n=0;n<e.length;n++)e[n]*=t}function ae(e){if(!function(e){return!(!e||e&e-1)}(e))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(e)/Math.log(2))}function se(e,t){const n=ae(t);if(t<4)throw new Error("FFT array length must be at least 4.");for(let i=n-1;i>=2;i--){const n=1<<i,a=n>>1,s=n<<1,o=2*Math.PI/s,r=Math.cos(o),l=Math.sin(o),p=2*r;for(let i=0;i<t;i+=s){const t=i,s=t+a,o=t+n,h=o+a,c=o+n,u=e[t],f=e[o];e[t]=u+f,e[s]*=2,e[o]=u-f,e[h]*=2;let d=r,m=-l,y=1,g=0;for(let n=1;n<a;n++){const i=t+n,a=o-n,s=o+n,r=c-n,l=e[i],h=e[a],u=e[s],f=e[r],v=l-h,b=u+f;e[i]=l+h,e[a]=f-u,e[s]=v*d-b*m,e[r]=b*d+v*m;const w=p*d-y,S=p*m-g;y=d,g=m,d=w,m=S}}}for(let n=0;n<t;n+=4){const t=n+1,i=n+2,a=n+3,s=e[n],o=2*e[t],r=e[i],l=2*e[a],p=s+r,h=s-r;e[n]=p+o,e[t]=p-o,e[i]=h+l,e[a]=h-l}!function(e,t){const n=ae(t);if(n>16)throw new Error("FFT array length must not be greater than 2^16.");const i=16-n;for(let n=0;n<t;n++){let t;if(t=(43690&n)>>1|(21845&n)<<1,t=(52428&t)>>2|(13107&t)<<2,t=(61680&t)>>4|(3855&t)<<4,t=(t>>8|(255&t)<<8)>>i,t>n){let i=e[n];e[n]=e[t],e[t]=i}}}(e,t)}ne.version="1.6",ne.versionDisplayName="AbyssBox "+ne.version,ne.releaseNotesURL="./patch_notes.html",ne.isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent),ne.ctrlSymbol=ne.isOnMac?"⌘":"Ctrl+",ne.ctrlName=ne.isOnMac?"command":"control",ne.showSongDetailsAlert=!0,ne.presetCategories=w([{name:"Custom Instruments",presets:w([{name:n[0],customType:0},{name:n[1],customType:1},{name:n[2],customType:2},{name:n[3],customType:3},{name:n[4],customType:4},{name:n[5],customType:5},{name:n[6],customType:6},{name:n[7],customType:7},{name:n[8],customType:8},{name:n[9],customType:9},{name:n[11],customType:11}])},{name:"Retro Presets",presets:w([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:11},{frequency:"1×",amplitude:7},{frequency:"1×",amplitude:9},{frequency:"20×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:14},{frequency:"2×",amplitude:14},{frequency:"1×",amplitude:11},{frequency:"2×",amplitude:11}],envelopes:[]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",transition:"seemless",effects:"none",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}}])},{name:"Keyboard Presets",presets:w([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,effects:["note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],panDelay:10,reverb:68,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 3",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:1681.79,linearGain:4},{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"peak",cutoffHz:3363.59,linearGain:4},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.0884}],reverb:67,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:86,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:1}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:9},{frequency:"16×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"3⟲",feedbackAmplitude:6,operators:[{frequency:"3×",amplitude:15},{frequency:"~1×",amplitude:6},{frequency:"8×",amplitude:4},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}}])},{name:"Idiophone Presets",presets:w([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:6,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"3×",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:7,envelope:"custom"},{frequency:"20×",amplitude:2,envelope:"twang 1"}]}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:9,envelope:"custom"},{frequency:"9×",amplitude:3,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"13×",amplitude:6,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:11,envelope:"custom"},{frequency:"5×",amplitude:3,envelope:"twang 2"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"11×",amplitude:9,envelope:"custom"},{frequency:"20×",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:10,envelope:"custom"},{frequency:"7×",amplitude:6,envelope:"twang 3"},{frequency:"20×",amplitude:1,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:7,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"16×",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→4",feedbackAmplitude:15,feedbackEnvelope:"decay 1",operators:[{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"5×",amplitude:6,envelope:"custom"},{frequency:"8×",amplitude:9,envelope:"custom"},{frequency:"13×",amplitude:11,envelope:"custom"}]}}])},{name:"Guitar Presets",presets:w([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"5×",amplitude:2,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:4,envelope:"twang 3"},{frequency:"4×",amplitude:4,envelope:"twang 2"},{frequency:"16×",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:w([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:1,envelope:"twang 3"},{frequency:"1×",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"13×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲ 4⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 1"},{frequency:"~1×",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"steady"},{frequency:"3×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:w([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:11,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 3"},{frequency:"9×",amplitude:3,envelope:"twang 3"},{frequency:"16×",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"11×",amplitude:3,envelope:"twang 3"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"9×",amplitude:4,envelope:"twang 2"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"steady"},{frequency:"16×",amplitude:4,envelope:"twang 3"},{frequency:"1×",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"twang 3"},{frequency:"~2×",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:w([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2→3→4",feedbackAmplitude:8,operators:[{frequency:"3×",amplitude:13},{frequency:"~1×",amplitude:5},{frequency:"4×",amplitude:6},{frequency:"3×",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"4×",amplitude:12},{frequency:"16×",amplitude:5},{frequency:"1×",amplitude:2},{frequency:"~1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:2,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"~2×",amplitude:6},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:4,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:11},{frequency:"1×",amplitude:9},{frequency:"~2×",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:w([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",vibrato:"light",algorithm:"1 2 3 4",feedbackType:"1→3 2→4",feedbackAmplitude:7,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"3×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"}]}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:w([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1→2",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:9},{frequency:"3×",amplitude:9},{frequency:"2×",amplitude:7},{frequency:"7×",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"16×",amplitude:5},{frequency:"~1×",amplitude:10},{frequency:"1×",amplitude:9},{frequency:"6×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:5,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"6×",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"16×",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"tremolo4",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:12,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"~2×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"},{frequency:"7×",amplitude:8,envelope:"custom"}]}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3×",amplitude:6,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"twang 3"},{frequency:"2×",amplitude:15,envelope:"flare 3"},{frequency:"4×",amplitude:15,envelope:"flare 2"},{frequency:"8×",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"decay 1",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:12,envelope:"custom"},{frequency:"4×",amplitude:14,envelope:"custom"}]}},{name:"supersaw string",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142},{type:"low-pass",cutoffHz:3363.59,linearGain:.1768}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:500,linearGain:.1768}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:6,pulseWidth:35.35534,dynamism:83,spread:8,shape:50,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"supersaw string 2",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],effects:["note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],chorus:57,reverb:42,fadeInSeconds:.0575,fadeOutTicks:-6,pulseWidth:50,dynamism:67,spread:58,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"pulseWidth",envelope:"flare 2"}]}}])},{name:"Vocal Presets",presets:w([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1 2 3)←4",feedbackType:"1→2→3→4",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"9×",amplitude:5,envelope:"custom"},{frequency:"20×",amplitude:1,envelope:"custom"},{frequency:"~1×",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:15},{frequency:"1×",amplitude:7},{frequency:"~1×",amplitude:7},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"tremolo5",vibrato:"none",algorithm:"1←2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:12,feedbackEnvelope:"tremolo3",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"16×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,operators:[{frequency:"2×",amplitude:13},{frequency:"5×",amplitude:12},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:15,envelope:"punch"},{frequency:"4×",amplitude:15,envelope:"punch"},{frequency:"7×",amplitude:15,envelope:"punch"},{frequency:"1×",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:11,envelope:"custom"},{frequency:"~1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:2,envelope:"steady"},{frequency:"16×",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:w([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"flare 2"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:13},{frequency:"1×",amplitude:5},{frequency:"9×",amplitude:5},{frequency:"13×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 1"},{frequency:"~1×",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"flare 1"},{frequency:"~1×",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"flare 1"},{frequency:"~1×",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:w([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"4×",amplitude:4,envelope:"swell 1"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"5×",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"4×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"8×",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"8×",amplitude:4,envelope:"steady"},{frequency:"4×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"punch"},{frequency:"8×",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"tremolo5",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"~2×",amplitude:2,envelope:"twang 3"},{frequency:"1×",amplitude:0,envelope:"steady"}]}}])},{name:"Flute Presets",presets:w([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"4⟲",feedbackAmplitude:7,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:4,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"~1×",amplitude:1,envelope:"punch"}]}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"4⟲",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3←4)",feedbackType:"3→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:4,envelope:"twang 1"},{frequency:"20×",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:4,envelope:"custom"},{frequency:"6×",amplitude:2,envelope:"custom"},{frequency:"11×",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:w([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"2×",amplitude:14},{frequency:"~1×",amplitude:4},{frequency:"6×",amplitude:3},{frequency:"13×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,operators:[{frequency:"1×",amplitude:14},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:8},{frequency:"3×",amplitude:7},{frequency:"11×",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:12},{frequency:"3×",amplitude:7},{frequency:"7×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:13,operators:[{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:9},{frequency:"1×",amplitude:7},{frequency:"11×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1←(2 3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:14},{frequency:"~1×",amplitude:10},{frequency:"3×",amplitude:7},{frequency:"1×",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"1×",amplitude:15},{frequency:"4×",amplitude:5},{frequency:"1×",amplitude:10},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"~1×",amplitude:13},{frequency:"2×",amplitude:10},{frequency:"5×",amplitude:5},{frequency:"11×",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13},{frequency:"5×",amplitude:7},{frequency:"7×",amplitude:5},{frequency:"~1×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"supersaw pad",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768}],effects:["reverb"],reverb:100,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}}])},{name:"Drum Presets",presets:w([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:14},{frequency:"7×",amplitude:3},{frequency:"3×",amplitude:5},{frequency:"4×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3←4",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"~1×",amplitude:12},{frequency:"2×",amplitude:15},{frequency:"4×",amplitude:14},{frequency:"~1×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"8×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:w([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:12},{frequency:"1×",amplitude:4},{frequency:"20×",amplitude:1},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"5×",amplitude:13},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:6},{frequency:"11×",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"Modbox Presets",presets:w([{name:"modbox theepsynth",settings:{type:"FM",effects:"none",transition:"hard",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}}])},{name:"Sandbox Presets",presets:w([{name:"sandbox netsky hollow",generalMidi:!1,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"arpeggio",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",spectrum:[100,100,100,100,100,100,100,100,100,100,100,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45]}},{name:"sandbox abnormality",generalMidi:!1,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"none",transition:"seamless",chord:"arpeggio",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",wave:"spiky",interval:"fifth",vibrato:"none"}},{name:"sandbox playstation",generalMidi:!1,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"chorus",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"steady",wave:"glitch",interval:"shimmer",vibrato:"none"}},{name:"sandbox harmony pulse",generalMidi:!1,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"chorus",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"punch",wave:"double pulse",interval:"union",vibrato:"none"}},{name:"sandbox pink ping",generalMidi:!1,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:3e3,filterResonance:0,filterEnvelope:"tripolo6",spectrum:[0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"sandbox tv static",generalMidi:!1,isNoise:!0,midiSubharmonicOctaves:1,settings:{type:"noise",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:40,filterEnvelope:"steady",wave:"static"}},{name:"sandbox clean pulse",generalMidi:!1,settings:{type:"custom chip",transition:"hard",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1]}},{name:"sandbox snp chorus",generalMidi:!1,settings:{type:"FM",transition:"hard",effects:"chorus & reverb",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2→3→4",feedbackAmplitude:1,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:6,envelope:"custom"}]}},{name:"sandbox snp echo",generalMidi:!1,settings:{type:"FM",transition:"hard fade",effects:"chorus",chord:"strum",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:15,envelope:"custom"},{frequency:"20×",amplitude:9,envelope:"twang 1"},{frequency:"20×",amplitude:5,envelope:"twang 2"}]}},{name:"sandbox tori synth lead",generalMidi:!1,settings:{type:"harmonics",effects:"chorus",transition:"seamless",chord:"harmony",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,100,100,100,71,71,43,43,43,29,29,43,43,43,43,43,43,43,43,43,43,43,29,14,0,0,0,86]}},{name:"sandbox glorious piano 1",generalMidi:!1,settings:{type:"custom chip",transition:"hard fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[24,24,-16,-15,-15,-14,-13,-13,-12,-11,-11,-10,-9,-8,-8,-7,-6,-5,-5,-4,-3,-2,-2,23,22,22,21,20,20,19,19,18,18,17,16,15,15,14,13,12,12,11,0,-1,-1,-2,-3,-3,-4,-5,-5,-6,-20,-19,-17,-17,-14,-11,-8,-5,-2,-23,-24,-24]}},{name:"sandbox glorious piano 2",generalMidi:!1,settings:{type:"custom chip",transition:"hard fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",interval:"shimmer",vibrato:"light",customChipWave:[24,24,-16,-15,-15,-14,-13,-13,-12,12,9,5,2,-3,-7,-10,-6,-5,-5,-4,-3,-2,-2,23,22,22,21,20,20,19,19,18,18,17,16,15,15,0,4,8,15,21,0,-1,-1,-2,-3,-3,-4,-5,-5,-6,-20,-19,-17,-17,-2,-2,-8,2,-2,-5,-24,-24]}},{name:"sandbox muffled katrumpet",generalMidi:!1,settings:{type:"custom chip",transition:"cross fade",effects:"reverb",chord:"strum",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"light",customChipWave:[24,23,22,22,22,22,22,21,21,19,19,15,11,7,5,-2,-5,-11,-13,-14,-16,-17,-17,-17,-17,-17,-17,-17,-17,-13,-10,-1,4,6,8,10,11,14,15,15,16,16,16,16,16,16,16,16,15,15,14,11,8,4,2,-4,-7,-11,-12,-13,-14,-15,-15,-15]}},{name:"sandbox ehruthing",generalMidi:!1,settings:{type:"custom chip","hard fade":"seamless",effects:"reverb",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",customChipWave:[24,24,23,22,21,21,20,19,18,18,17,16,15,-22,-20,-18,-16,-14,-13,-11,-10,-7,-6,-4,-3,-2,0,2,4,17,16,15,13,12,11,9,8,6,5,4,3,2,1,-1,-1,-2,-3,-4,-6,-6,-7,-8,-8,-9,-10,-10,-11,-13,-15,-16,-17,-3,-4,-5]}},{name:"sandbox wurtz organ",generalMidi:!1,settings:{type:"FM",transition:"seamless",effects:"chorus",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"punch",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:3,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:14,envelope:"tremolo6"},{frequency:"2×",amplitude:9,envelope:"tripolo3"},{frequency:"4×",amplitude:5,envelope:"pentolo3"},{frequency:"8×",amplitude:2,envelope:"pentolo6"}]}}])},{name:"Blackbox Presets",presets:w([{name:"blackbox deep key",midiProgram:9,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:32,filterEnvelope:"twang 1",interval:"shimmer",vibrato:"light",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,30]}},{name:"blackbox ring ding",midiProgram:78,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1500,filterResonance:16,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"},{frequency:"12×",amplitude:9,envelope:"custom"},{frequency:"22×",amplitude:4,envelope:"twang 2"}]}}])},{name:"Todbox Presets",presets:w([{name:"todbox accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"todbox accordian",interval:"honky tonk",vibrato:"none"}},{name:"todbox wind",generalMidi:!1,settings:{type:"FM",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:200,filterResonance:2950,filterEnvelope:"steady",vibrato:"none",algorithm:"1→3 2→4",feedbackType:"1→3 2→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:15,envelope:"steady"},{frequency:"16×",amplitude:0,envelope:"custom"},{frequency:"16×",amplitude:15,envelope:"steady"},{frequency:"16×",amplitude:0,envelope:"flare 2"}]}}])},{name:"Midbox Misc Presets",presets:w([{name:"Broken Music Box",midiProgram:21,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],effects:["transition type","chord type","vibrato","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"custom",vibratoDepth:.72,vibratoDelay:19,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:23,fadeInSeconds:0,fadeOutTicks:12,wave:"rounded",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"Enhanced Synth Kick",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:19027.31,linearGain:4},{type:"high-pass",cutoffHz:62.5,linearGain:2.8284},{type:"peak",cutoffHz:1681.79,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:19027.31,linearGain:4},{type:"high-pass",cutoffHz:62.5,linearGain:2.8284},{type:"peak",cutoffHz:1681.79,linearGain:.25}],effects:["pitch shift","vibrato","note filter","distortion","bitcrusher","chorus"],pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:2,vibratoDelay:0,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:148.65,linearGain:11.3137}],noteSubFilters0:[{type:"peak",cutoffHz:148.65,linearGain:11.3137}],distortion:71,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:57,panDelay:10,chorus:29,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:13,operators:[{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 3"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"operatorAmplitude",envelope:"twang 1",index:1},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 2"}]}},{name:"Scratch String",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:176.78,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:176.78,linearGain:.25}],effects:["transition type","vibrato","note filter","distortion","echo","reverb"],transition:"normal",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:.3536}],distortion:100,aliases:!1,panDelay:10,echoSustain:29,echoDelayBeats:.75,reverb:29,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1←2←(3 4)",feedbackType:"1→4",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:3,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"Xylophone Saw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:.1768}],effects:["chord type","pitch shift","vibrato","bitcrusher","chorus","echo"],chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:24,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.75,fadeInSeconds:0,fadeOutTicks:12,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:0,3:0,4:0,5:0,6:24,7:24,8:24,9:24,10:24,11:-12,12:-12,13:-12,14:-12,15:-12,16:24,17:24,18:24,19:24,20:24,21:24,22:12,23:12,24:12,25:12,26:12,27:-24,28:-24,29:-24,30:-24,31:-24,32:0,33:0,34:0,35:0,36:0,37:0,38:24,39:24,40:24,41:24,42:24,43:-11,44:-11,45:-11,46:-11,47:-11,48:24,49:24,50:24,51:24,52:24,53:24,54:12,55:12,56:12,57:12,58:12,59:12,60:12,61:12,62:12,63:12},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteVolume",envelope:"twang 2"}]}},{name:"Bow Bass",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chord type","pitch shift","vibrato","note filter","bitcrusher","chorus","echo"],chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:19,vibrato:"custom",vibratoDepth:.36,vibratoDelay:0,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],bitcrusherOctave:6,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.75,fadeInSeconds:0,fadeOutTicks:6,wave:"square",unison:"custom",unisonVoices:2,unisonSpread:12,unisonOffset:-12,unisonExpression:1,unisonSign:1,customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:24,7:24,8:24,9:24,10:24,11:24,12:24,13:24,14:24,15:24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:24,25:24,26:24,27:24,28:24,29:24,30:24,31:24,32:24,33:24,34:24,35:24,36:24,37:24,38:24,39:24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:24,49:24,50:24,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteFilterFreq",envelope:"twang 2",index:0},{target:"noteFilterFreq",envelope:"twang 2",index:1}]}},{name:"Depths",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:4e3,linearGain:.7071},{type:"peak",cutoffHz:840.9,linearGain:.3536},{type:"high-pass",cutoffHz:62.5,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:4e3,linearGain:.7071},{type:"peak",cutoffHz:840.9,linearGain:.3536},{type:"high-pass",cutoffHz:62.5,linearGain:2}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:0,detuneCents:-52,vibrato:"custom",vibratoDepth:.56,vibratoDelay:0,vibratoSpeed:1,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884}],bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:100,reverb:71,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"ramp",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"tremolo4",index:0}]}},{name:"Disco Vocal Lead",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","pitch shift","note filter","distortion","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:125,linearGain:.0884},{type:"low-pass",cutoffHz:5656.85,linearGain:4}],noteSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:.0884},{type:"low-pass",cutoffHz:5656.85,linearGain:4}],distortion:100,aliases:!1,panDelay:10,chorus:100,echoSustain:29,echoDelayBeats:1,reverb:19,fadeInSeconds:0,fadeOutTicks:6,harmonics:[43,71,100,0,0,100,0,57,0,0,0,86,29,0,0,0,0,14,0,14,14,0,0,0,0,43,0,0],unison:"piano",stringSustain:93,envelopes:[]}},{name:"Blessed Piano",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"peak",cutoffHz:707.11,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:707.11,linearGain:4}],effects:["chord type","pitch shift","vibrato","note filter","distortion","bitcrusher","chorus"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,vibrato:"custom",vibratoDepth:.48,vibratoDelay:11,vibratoSpeed:16,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.0884}],distortion:14,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:29,panDelay:10,chorus:86,fadeInSeconds:0,fadeOutTicks:24,wave:"triangle",unison:"custom",unisonVoices:2,unisonSpread:6,unisonOffset:6.5,unisonExpression:.8,unisonSign:1,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"Sawtooth Pluck",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.25}],effects:["transition type","chord type","pitch shift","vibrato","note filter"],transition:"normal",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:24,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:8e3,linearGain:4}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:8e3,linearGain:4}],panDelay:10,fadeInSeconds:0,fadeOutTicks:12,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteFilterFreq",envelope:"swell 1",index:2}]}},{name:"Desolated Piano",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5}],effects:["pitch shift","vibrato","bitcrusher","chorus","reverb"],pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:.6,vibratoDelay:1,vibratoSpeed:18,vibratoType:0,bitcrusherOctave:3.5,bitcrusherQuantization:0,panDelay:10,chorus:29,reverb:26,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,operators:[{frequency:"~1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"3×",amplitude:3,waveform:"trapezoid",pulseWidth:5},{frequency:"8×",amplitude:4,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"vibratoDepth",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"decay 1",index:1},{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:2}]}},{name:"Distorted Guitar 1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["note filter","distortion","chorus","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:840.9,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:.1768}],noteSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:840.9,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:.1768}],distortion:71,aliases:!1,panDelay:10,chorus:14,echoSustain:43,echoDelayBeats:1,reverb:39,fadeInSeconds:0,fadeOutTicks:6,harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"Distorted Guitar 2",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.125},{type:"peak",cutoffHz:3363.59,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.125},{type:"peak",cutoffHz:3363.59,linearGain:.5}],effects:["note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:210.22,linearGain:4},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters0:[{type:"peak",cutoffHz:210.22,linearGain:4},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],bitcrusherOctave:6.5,bitcrusherQuantization:71,panDelay:10,chorus:43,reverb:52,fadeInSeconds:0,fadeOutTicks:24,algorithm:"(1 2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:14,waveform:"trapezoid",pulseWidth:5},{frequency:"~2×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:10,waveform:"pulse width",pulseWidth:5},{frequency:"8×",amplitude:3,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"Distorted Guitar 3",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:500,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:500,linearGain:4}],effects:["pitch shift","note filter","distortion","chorus","reverb"],pitchShiftSemitones:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:.7071},{type:"high-pass",cutoffHz:176.78,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:840.9,linearGain:.7071},{type:"high-pass",cutoffHz:176.78,linearGain:.3536}],distortion:100,aliases:!1,panDelay:10,chorus:14,reverb:6,fadeInSeconds:0,fadeOutTicks:24,harmonics:[100,0,86,0,43,0,100,43,0,29,0,100,0,0,0,71,43,0,0,0,14,0,0,0,0,0,0,29],unison:"none",stringSustain:0,envelopes:[{target:"noteVolume",envelope:"twang 1"}]}},{name:"High Pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:8}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:8}],effects:["pitch shift","vibrato","note filter","chorus"],pitchShiftSemitones:12,vibrato:"custom",vibratoDepth:.28,vibratoDelay:19,vibratoSpeed:30,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],panDelay:10,chorus:86,fadeInSeconds:.0125,fadeOutTicks:24,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:11,operators:[{frequency:"4×",amplitude:13,waveform:"pulse width",pulseWidth:3},{frequency:"0.12×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"3×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"twang 1",index:1},{target:"noteFilterAllFreqs",envelope:"swell 1"}]}},{name:"Magical Pulse",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.0884}],effects:["transition type","pitch shift","vibrato","chorus"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:.56,vibratoDelay:27,vibratoSpeed:14,vibratoType:0,panDelay:10,chorus:57,fadeInSeconds:0,fadeOutTicks:6,wave:"sawtooth",unison:"custom",unisonVoices:2,unisonSpread:.03,unisonOffset:-.02,unisonExpression:.85,unisonSign:.7,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteVolume",envelope:"swell 3"}]}},{name:"Distorted Lead",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","distortion","bitcrusher","chorus"],transition:"normal",clicklessTransition:!1,distortion:29,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:0,panDelay:10,chorus:100,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:11,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"pulse width",pulseWidth:7},{frequency:"1×",amplitude:8,waveform:"ramp",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"FM Punch Bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],effects:["note filter"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:7,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"ramp",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"feedbackAmplitude",envelope:"punch"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"Rough Glistening Piano",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:210.22,linearGain:1.4142},{type:"high-pass",cutoffHz:125,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:210.22,linearGain:1.4142},{type:"high-pass",cutoffHz:125,linearGain:.1768}],effects:["chord type","note filter","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:23,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,71,43,29,29,14,14,43,0,43,0,57,71,0,71,43,0,0,57,0,57,0,71,0,71,0,57,0],unison:"honky tonk",envelopes:[{target:"noteFilterFreq",envelope:"twang 2",index:0}]}},{name:"Soft Glistening Piano",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.3536}],effects:["chord type","detune","note filter","chorus","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:-20,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],panDelay:10,chorus:29,reverb:97,fadeInSeconds:.135,fadeOutTicks:48,harmonics:[100,0,0,29,29,14,14,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,43,14,0,0,0,0],unison:"honky tonk",envelopes:[{target:"noteFilterFreq",envelope:"twang 2",index:0}]}},{name:"Jingle Bells",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"high-pass",cutoffHz:707.11,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"high-pass",cutoffHz:707.11,linearGain:2}],effects:["chord type","pitch shift","detune","note filter","bitcrusher","chorus","echo","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:8,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:2},{type:"high-pass",cutoffHz:176.78,linearGain:.5},{type:"peak",cutoffHz:2378.41,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:2},{type:"high-pass",cutoffHz:176.78,linearGain:.5},{type:"peak",cutoffHz:2378.41,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:2.8284}],bitcrusherOctave:5,bitcrusherQuantization:0,panDelay:10,chorus:29,echoSustain:57,echoDelayBeats:1.667,reverb:77,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,29,57,71,0,0,0,0,0,0,0,14,43,14,0,0,0,0,0,0,14,0,14,14,0,0,0,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"twang 2"}]}},{name:"Odd Snare",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["pitch shift","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],pitchShiftSemitones:24,detuneCents:200,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:176.78,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:176.78,linearGain:2.8284}],distortion:29,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.083,reverb:3,fadeInSeconds:0,fadeOutTicks:12,algorithm:"(1 2)←3←4",feedbackType:"2⟲ 3⟲ 4⟲",feedbackAmplitude:15,operators:[{frequency:"16×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"0.12×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"twang 3",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"pitchShift",envelope:"twang 3"},{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteFilterFreq",envelope:"swell 1",index:1},{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"operatorFrequency",envelope:"twang 1",index:0}]}},{name:"Otherworldly Kick",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["pitch shift","vibrato","distortion","bitcrusher","chorus"],pitchShiftSemitones:12,vibrato:"custom",vibratoDepth:.92,vibratoDelay:18,vibratoSpeed:30,vibratoType:0,distortion:29,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:57,panDelay:10,chorus:14,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"20×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 3"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"operatorFrequency",envelope:"twang 1",index:0}]}},{name:"Bitcrushed Piano",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],effects:["transition type","chord type","pitch shift","vibrato","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:.72,vibratoDelay:19,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:29,echoDelayBeats:.75,reverb:23,fadeInSeconds:0,fadeOutTicks:12,wave:"triangle",unison:"custom",unisonVoices:2,unisonSpread:211e-6,unisonOffset:-.3,unisonExpression:.8,unisonSign:1,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"Boop Pad",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],effects:["transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],panDelay:10,reverb:48,fadeInSeconds:0,fadeOutTicks:96,wave:"square",unison:"custom",unisonVoices:2,unisonSpread:211e-6,unisonOffset:-.3,unisonExpression:.8,unisonSign:1,customChipWave:{0:-1,1:1,2:-1,3:-4,4:-6,5:-8,6:-11,7:-12,8:-15,9:-16,10:-18,11:-19,12:-21,13:-22,14:-24,15:-24,16:-24,17:-24,18:-23,19:-22,20:-21,21:-19,22:-17,23:-16,24:-14,25:-13,26:-10,27:-8,28:-6,29:-4,30:-2,31:-1,32:2,33:3,34:5,35:7,36:10,37:12,38:14,39:16,40:18,41:19,42:20,43:21,44:23,45:23,46:24,47:24,48:24,49:24,50:24,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:23,59:22,60:21,61:19,62:16,63:14},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteVolume",envelope:"twang 2"},{target:"noteFilterFreq",envelope:"twang 2",index:0}]}},{name:"Spectrum Pad",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:2,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["vibrato","distortion","bitcrusher","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,distortion:29,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,panDelay:10,reverb:26,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],envelopes:[]}},{name:"Countdown Pulse",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:2}],effects:["transition type","pitch shift","detune","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:16,detuneCents:196,panDelay:10,chorus:14,echoSustain:29,echoDelayBeats:.5,reverb:13,fadeInSeconds:0,fadeOutTicks:48,pulseWidth:42,decimalOffset:0,unison:"none",envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"Ambient Pulse 1",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536},{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536},{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],effects:["note filter","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:2.8284}],panDelay:10,echoSustain:29,echoDelayBeats:1.333,reverb:35,fadeInSeconds:0,fadeOutTicks:96,algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"pulse width",pulseWidth:6},{frequency:"3×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"~2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:2}]}},{name:"Saturn Pad",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:1},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],effects:["note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.5}],panDelay:10,reverb:26,fadeInSeconds:0,fadeOutTicks:24,harmonics:[0,100,100,100,0,0,0,0,43,43,0,86,0,100,0,29,0,0,0,0,71,57,0,0,86,0,0,43],unison:"shimmer",stringSustain:93,envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo3"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Build-Up Pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536}],effects:["note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],panDelay:10,reverb:32,fadeInSeconds:0,fadeOutTicks:96,algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"pulse width",pulseWidth:6},{frequency:"3×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"~2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:2}]}},{name:"Ambient Pulse 2",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:.7071},{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:8}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:.7071},{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:8}],effects:["chord type","note filter","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1681.79,linearGain:1}],panDelay:10,reverb:32,fadeInSeconds:0,fadeOutTicks:72,harmonics:[57,57,71,57,43,43,43,71,43,43,43,57,71,86,100,86,57,57,43,43,43,57,43,29,43,57,57,43],unison:"custom",unisonVoices:2,unisonSpread:.0018,unisonOffset:0,unisonExpression:.85,unisonSign:1.6,envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo5"}]}},{name:"Hyper Synth Saw",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"peak",cutoffHz:19027.31,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:19027.31,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:1.4142}],effects:["chord type","detune","vibrato","distortion","chorus","echo","reverb"],chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:16,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,distortion:14,aliases:!1,panDelay:10,chorus:86,echoSustain:43,echoDelayBeats:1,reverb:58,fadeInSeconds:0,fadeOutTicks:96,wave:"sawtooth",unison:"custom",unisonVoices:2,unisonSpread:.0018,unisonOffset:0,unisonExpression:.85,unisonSign:1.6,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Mechanical Blip",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.25},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.25},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.3536}],effects:["transition type","detune","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:500,linearGain:4},{type:"high-pass",cutoffHz:176.78,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:500,linearGain:4},{type:"high-pass",cutoffHz:176.78,linearGain:11.3137}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],bitcrusherOctave:4.5,bitcrusherQuantization:43,panDelay:10,chorus:43,echoSustain:57,echoDelayBeats:1.5,reverb:23,fadeInSeconds:0,fadeOutTicks:-1,wave:"rounded",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Another Piano",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:2378.41,linearGain:2},{type:"peak",cutoffHz:3363.59,linearGain:1.4142},{type:"high-pass",cutoffHz:88.39,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:2378.41,linearGain:2},{type:"peak",cutoffHz:3363.59,linearGain:1.4142},{type:"high-pass",cutoffHz:88.39,linearGain:1}],effects:["detune","note filter","reverb"],detuneCents:16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.125}],panDelay:10,reverb:26,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:44,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"noteVolume",envelope:"twang 2"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"}]}}])},{name:"Midbox Dubstep Presets",presets:w([{name:"Dubstep Bwayyyy",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.7071},{type:"peak",cutoffHz:420.45,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.7071},{type:"peak",cutoffHz:420.45,linearGain:.5}],effects:["transition type","vibrato","note filter","distortion","chorus","reverb"],transition:"continue",clicklessTransition:!1,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:11.3137}],distortion:100,aliases:!1,panDelay:10,chorus:71,reverb:32,fadeInSeconds:0,fadeOutTicks:12,pulseWidth:30,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"swell 3",index:0},{target:"noteFilterFreq",envelope:"swell 2",index:0}]}},{name:"Dubstep Bass Hum",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:2},{type:"peak",cutoffHz:420.45,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.5},{type:"peak",cutoffHz:16e3,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:2},{type:"peak",cutoffHz:420.45,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.5},{type:"peak",cutoffHz:16e3,linearGain:2}],effects:["transition type","pitch shift","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],distortion:29,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:14,panDelay:10,chorus:43,reverb:32,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:10,envelopes:[{target:"noteFilterFreq",envelope:"flare 1",index:0},{target:"noteFilterFreq",envelope:"flare 3",index:0}]}},{name:"Dubstep Yaa",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["transition type","pitch shift","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],bitcrusherOctave:2.5,bitcrusherQuantization:29,panDelay:10,chorus:86,reverb:10,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:8,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"swell 1",index:0}]}},{name:"Dubstep Yeoww",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["transition type","chord type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:11.3137}],distortion:100,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:0,panDelay:10,chorus:86,reverb:35,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:40,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"twang 3",index:0},{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"Dubstep Lead",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:1189.21,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:1189.21,linearGain:.0884}],effects:["transition type","pitch shift","note filter","distortion","bitcrusher"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"low-pass",cutoffHz:1e3,linearGain:2}],noteSubFilters0:[{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"low-pass",cutoffHz:1e3,linearGain:2}],distortion:29,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:86,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"Dubstep Dyaii",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"low-pass",cutoffHz:3363.59,linearGain:.5},{type:"peak",cutoffHz:11313.71,linearGain:2.8284},{type:"peak",cutoffHz:1e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"low-pass",cutoffHz:3363.59,linearGain:.5},{type:"peak",cutoffHz:11313.71,linearGain:2.8284},{type:"peak",cutoffHz:1e3,linearGain:.0884}],effects:["transition type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],transition:"slide",clicklessTransition:!1,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:8},{type:"peak",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:707.11,linearGain:8},{type:"peak",cutoffHz:1414.21,linearGain:11.3137}],distortion:29,aliases:!1,bitcrusherOctave:3,bitcrusherQuantization:71,panDelay:10,chorus:71,reverb:32,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,0,71,86,0,0,100,86,86,71,57,57,29,14,57,71,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",stringSustain:100,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Dubstep Alarm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:1414.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:1414.21,linearGain:.5}],effects:["transition type","pitch shift","note filter","distortion","bitcrusher"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:1414.21,linearGain:11.3137}],distortion:29,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:100,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:6,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0}]}}])},{name:"Midbox Noise Presets",presets:w([{name:"Hollow Retro Riser",isNoise:!0,generalMidi:!1,settings:{type:"noise",eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["bitcrusher","chorus","echo","reverb"],bitcrusherOctave:4,bitcrusherQuantization:43,panDelay:10,chorus:29,echoSustain:57,echoDelayBeats:.5,reverb:29,fadeInSeconds:0,fadeOutTicks:-3,wave:"hollow",unison:"none",envelopes:[]}}])},{name:"UltraBox Presets",presets:w([{name:"nes white",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit white",envelopes:[]}},{name:"nes ping",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit metallic",envelopes:[]}},{name:"distorted pulse vocal",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],effects:["panning","transition type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:10,echoSustain:14,echoDelayBeats:.167,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"1/8 pulse",unison:"none",envelopes:[]}},{name:"dubsteb bwah",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","chord type"],transition:"interrupt",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"note size",index:3}]}},{name:"FM cool bass",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],effects:["panning","transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM funky bass",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","reverb"],transition:"normal",clicklessTransition:!1,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"note size"}]}},{name:"mrow",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[],effects:["panning","chord type","reverb"],chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,reverb:35,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:9,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"talking bass",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[],effects:["chord type"],chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15},{frequency:"2×",amplitude:8},{frequency:"2×",amplitude:5},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"note size",index:3},{target:"feedbackAmplitude",envelope:"note size"}]}},{name:"synth marimba",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:1},{type:"peak",cutoffHz:4e3,linearGain:.5}],effects:["note filter","echo"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142}],echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,29,29,0,0,0,100,0,0,0,86,29,0,14,100,0,0,0,0,0,14,0,0,14,0,0,86],unison:"fifth",stringSustain:7,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"}]}},{name:"italian accordian",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:1,eqSubFilters1:[],effects:["panning","chorus","reverb"],pan:0,panDelay:10,chorus:71,reverb:45,fadeInSeconds:.0263,fadeOutTicks:-3,wave:"square",unison:"honky tonk",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"chip supersaw",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,reverb:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"dissonant",customChipWave:{0:22,1:22,2:16,3:6,4:0,5:-3,6:-8,7:-10,8:-13,9:-16,10:-19,11:-19,12:-20,13:-22,14:-22,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:24,32:24,33:16,34:9,35:6,36:4,37:2,38:0,39:-1,40:-3,41:-4,42:-4,43:-6,44:-6,45:-6,46:-6,47:-5,48:-5,49:-4,50:-2,51:-2,52:1,53:4,54:6,55:8,56:10,57:12,58:14,59:16,60:18,61:19,62:22,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"fm supersaw",generalMidi:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["panning","transition type","pitch shift","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],pan:0,panDelay:10,chorus:71,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4 5 6",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:10,waveform:"sawtooth",pulseWidth:5},{frequency:"3×",amplitude:7,waveform:"sawtooth",pulseWidth:5},{frequency:"4×",amplitude:9,waveform:"sawtooth",pulseWidth:5},{frequency:"8×",amplitude:6,waveform:"sawtooth",pulseWidth:5}],envelopes:[]}},{name:"obama why",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[],effects:["note filter","panning","reverb"],noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:11.3137}],pan:0,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,29,29,14,14,0,14,14,43,71,100,100,86,71,71,57,57,43,43,43,43,43,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"AbyssBox 0.8 to 1.2 Presets",presets:w([{name:"Demonic Bell",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071},{type:"high-pass",cutoffHz:353.55,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071},{type:"high-pass",cutoffHz:353.55,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:.0884}],effects:["detune","distortion","bitcrusher","echo","reverb"],detuneCents:-52,distortion:29,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:29,panDelay:10,echoSustain:43,echoDelayBeats:1,reverb:68,fadeInSeconds:0,fadeOutTicks:96,harmonics:[43,71,71,100,86,100,43,86,71,57,86,29,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:64,envelopes:[]}},{name:"Spacey Triangle",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"high-pass",cutoffHz:176.78,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"high-pass",cutoffHz:176.78,linearGain:4}],effects:["transition type","vibrato","distortion","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,distortion:29,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,chorus:86,echoSustain:43,echoDelayBeats:1,reverb:26,fadeInSeconds:0,fadeOutTicks:96,wave:"triangle",unison:"dirty",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Harmonic Piano",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.125},{type:"high-pass",cutoffHz:88.39,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.125},{type:"high-pass",cutoffHz:88.39,linearGain:1}],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,57,57,57,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"Organic Synth",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.1768}],effects:["chord type","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,panDelay:10,reverb:71,fadeInSeconds:.0263,fadeOutTicks:96,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:3},{target:"noteVolume",envelope:"twang 2"}]}},{name:"Nokia Ringtone",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["transition type","chord type"],transition:"interrupt",chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-1,algorithm:"(1 2)←(3 4)",feedbackType:"1→2",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:2},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15}],envelopes:[]}}])},{name:"AbyssBox 1.3+ Presets",presets:w([{name:"Supersaw Pluck",generalMidi:!1,settings:{type:"supersaw",eqFilter:[],eqFilterType:!1,eqSimpleCut:9,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["chord type","note filter","chorus","echo","reverb"],chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],panDelay:10,chorus:14,echoSustain:29,echoDelayBeats:1,reverb:0,fadeInSeconds:0,fadeOutTicks:48,pulseWidth:40,decimalOffset:0,dynamism:67,spread:50,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"Credits Bass",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["transition type","chord type","note filter"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:9,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"alto sax",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 1"}]}},{name:"FM Violin",generalMidi:!1,settings:{type:"FM6op",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","vibrato","distortion","chorus","echo"],transition:"normal",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,distortion:43,aliases:!1,panDelay:10,chorus:14,echoSustain:14,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:6,algorithm:"Custom",feedbackType:"Custom",feedbackAmplitude:4,customAlgorithm:{mods:[[6,2,3,4,5],[],[],[],[],[]],carrierCount:2},customFeedback:{mods:[[1],[],[],[],[],[]]},operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:12,waveform:"rounded",pulseWidth:5},{frequency:"6×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:7,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang 3"},{target:"noteVolume",envelope:"swell 2"}]}},{name:"Shamisen 2",generalMidi:!1,settings:{type:"FM6op",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"Custom",feedbackType:"Custom",feedbackAmplitude:4,customAlgorithm:{mods:[[6,2,3,4,5],[],[],[],[],[]],carrierCount:2},customFeedback:{mods:[[1],[],[],[],[],[]]},operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:12,waveform:"rounded",pulseWidth:5},{frequency:"6×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:7,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"Picked Dist Guitar",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["vibrato","note filter","distortion","bitcrusher"],vibrato:"custom",vibratoDepth:.32,vibratoDelay:19,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.7071},{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.7071},{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[86,86,86,86,71,57,71,71,14,14,14,29,57,43,43,57,43,29,29,29,29,29,29,43,43,43,0,71],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"noteVolume",envelope:"punch"}]}},{name:"Heavy Knock",generalMidi:!1,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["vibrato","note filter","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,wave:"white",unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"Future Keys",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:125,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:1,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:.25}],effects:["chorus","echo","reverb","phaser"],phaserMix:100,phaserFreq:94,phaserFeedback:42,phaserStages:97,panDelay:10,chorus:43,echoSustain:43,echoDelayBeats:.75,reverb:19,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,100,100,86,86,86,71,71,57,29,14,14,14,0,29,57,29,0,29,43,57,57,29,14,14,29,43,29],unison:"none",envelopes:[{target:"phaserFreq",envelope:"tremolo6"},{target:"noteVolume",envelope:"twang -1"}]}},{name:"Light Bell",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["reverb","ring modulation"],ringMod:71,ringModHz:90,rmWaveformIndex:0,rmPulseWidth:0,panDelay:10,reverb:39,fadeInSeconds:0,fadeOutTicks:24,harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,43],unison:"shimmer",stringSustain:71,envelopes:[{target:"noteVolume",envelope:"twang 3"}]}},{name:"Distortion Bass",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.25},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142},{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"peak",cutoffHz:1e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.25},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142},{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"peak",cutoffHz:1e3,linearGain:.5}],effects:["note filter","distortion","bitcrusher","phaser"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:88.39,linearGain:1.4142},{type:"low-pass",cutoffHz:4e3,linearGain:.5}],noteSubFilters0:[{type:"high-pass",cutoffHz:88.39,linearGain:1.4142},{type:"low-pass",cutoffHz:4e3,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:0,phaserMix:65,phaserFreq:19,phaserFeedback:61,phaserStages:52,panDelay:10,fadeInSeconds:0,fadeOutTicks:6,harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,71],unison:"none",stringSustain:64,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1},{target:"phaserFeedback",envelope:"twang 3"}]}},{name:"Phased Overdrive Guitar",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:250,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"peak",cutoffHz:840.9,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:250,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"peak",cutoffHz:840.9,linearGain:.3536}],effects:["note filter","distortion","bitcrusher","phaser"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:0,phaserMix:100,phaserFreq:19,phaserFeedback:61,phaserStages:52,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,71],unison:"none",stringSustain:64,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1},{target:"phaserFeedback",envelope:"twang 2"}]}},{name:"Phased Picked Guitar",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:250,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"peak",cutoffHz:840.9,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:250,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"peak",cutoffHz:840.9,linearGain:.3536}],effects:["note filter","distortion","bitcrusher","chorus","echo","phaser"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:29,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:0,phaserMix:77,phaserFreq:19,phaserFeedback:61,phaserStages:52,panDelay:10,chorus:43,echoSustain:43,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:12,harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,71],unison:"none",stringSustain:64,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1},{target:"phaserMix",envelope:"twang -1"}]}},{name:"Accumula Guitar",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"peak",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:16e3,linearGain:11.3137},{type:"peak",cutoffHz:210.22,linearGain:4},{type:"high-pass",cutoffHz:62.5,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:16e3,linearGain:11.3137},{type:"peak",cutoffHz:210.22,linearGain:4},{type:"high-pass",cutoffHz:62.5,linearGain:.25}],effects:["transition type","chord type","detune","vibrato","note filter","bitcrusher","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:12,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:19027.31,linearGain:8}],noteSubFilters0:[{type:"peak",cutoffHz:19027.31,linearGain:8}],bitcrusherOctave:6.5,bitcrusherQuantization:0,panDelay:20,reverb:3,fadeInSeconds:.0125,fadeOutTicks:96,algorithm:"1 2 3 4 5 6",feedbackType:"1→2→3→4→5→6",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"6×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"9×",amplitude:8,waveform:"sine",pulseWidth:5}],envelopes:[{target:"feedbackAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"punch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:5},{target:"noteFilterFreq",envelope:"twang",inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"operatorAmplitude",envelope:"random",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2,steps:4,seed:2,waveform:2},{target:"operatorAmplitude",envelope:"random",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,index:4,steps:4,seed:19,waveform:2},{target:"operatorAmplitude",envelope:"random",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:.6,perEnvelopeUpperBound:1,index:5,steps:2,seed:21,waveform:2},{target:"operatorAmplitude",envelope:"random",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1,steps:4,seed:2,waveform:2},{target:"noteVolume",envelope:"random",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:.7,perEnvelopeUpperBound:1.6,steps:8,seed:2,waveform:2},{target:"detune",envelope:"random",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:5,seed:2,waveform:2}]}}])},{name:"AbyssBox's Spooky Presets",presets:w([{name:"Ghost House",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","vibrato","bitcrusher"],transition:"normal",clicklessTransition:!1,vibrato:"heavy",vibratoDepth:.45,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:3.5,bitcrusherQuantization:43,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"}]}},{name:"Chipwave Music Box",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["vibrato","note filter","bitcrusher","chorus","echo"],vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:4},{type:"high-pass",cutoffHz:88.39,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:4},{type:"high-pass",cutoffHz:88.39,linearGain:2.8284}],bitcrusherOctave:4.5,bitcrusherQuantization:14,panDelay:10,chorus:14,echoSustain:29,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:12,wave:"square",unison:"none",customChipWave:{0:24,1:24,2:24,3:23,4:23,5:22,6:21,7:19,8:17,9:14,10:11,11:7,12:3,13:-1,14:-5,15:-8,16:-10,17:-12,18:-14,19:-16,20:-17,21:-18,22:-19,23:-20,24:-21,25:-22,26:-23,27:-23,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-23,37:-23,38:-22,39:-21,40:-20,41:-19,42:-18,43:-17,44:-16,45:-14,46:-12,47:-10,48:-8,49:-5,50:-1,51:3,52:7,53:11,54:14,55:17,56:19,57:21,58:22,59:23,60:23,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteFilterFreq",envelope:"decay 3",index:1},{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"decay 3"}]}},{name:"Chipwave Spooky Pad",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:2.8284},{type:"high-pass",cutoffHz:88.39,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:2.8284},{type:"high-pass",cutoffHz:88.39,linearGain:2.8284}],effects:["vibrato","bitcrusher","chorus","echo","phaser"],vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,bitcrusherOctave:5.5,bitcrusherQuantization:14,phaserMix:100,phaserFreq:16,phaserFeedback:23,phaserStages:32,panDelay:10,chorus:71,echoSustain:43,echoDelayBeats:1,fadeInSeconds:.0125,fadeOutTicks:24,wave:"square",unison:"none",customChipWave:{0:24,1:24,2:24,3:23,4:23,5:22,6:21,7:19,8:17,9:14,10:11,11:7,12:3,13:-1,14:-5,15:-8,16:-10,17:-12,18:-14,19:-16,20:-17,21:-18,22:-19,23:-20,24:-21,25:-22,26:-23,27:-23,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-23,37:-23,38:-22,39:-21,40:-20,41:-19,42:-18,43:-17,44:-16,45:-14,46:-12,47:-10,48:-8,49:-5,50:-1,51:3,52:7,53:11,54:14,55:17,56:19,57:21,58:22,59:23,60:23,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteVolume",envelope:"twang 3"}]}}])}]);class oe{constructor(){this.h=1,this.u=[void 0],this.m=0,this.g=0,this.v=0}pushFront(e){this.v>=this.h&&this.S(),this.g=this.g-1&this.m,this.u[this.g]=e,this.v++}pushBack(e){this.v>=this.h&&this.S(),this.u[this.g+this.v&this.m]=e,this.v++}popFront(){if(this.v<=0)throw new Error("No elements left to pop.");const e=this.u[this.g];return this.u[this.g]=void 0,this.g=this.g+1&this.m,this.v--,e}popBack(){if(this.v<=0)throw new Error("No elements left to pop.");this.v--;const e=this.g+this.v&this.m,t=this.u[e];return this.u[e]=void 0,t}peakFront(){if(this.v<=0)throw new Error("No elements left to pop.");return this.u[this.g]}peakBack(){if(this.v<=0)throw new Error("No elements left to pop.");return this.u[this.g+this.v-1&this.m]}count(){return this.v}set(e,t){if(e<0||e>=this.v)throw new Error("Invalid index");this.u[this.g+e&this.m]=t}get(e){if(e<0||e>=this.v)throw new Error("Invalid index");return this.u[this.g+e&this.m]}remove(e){if(e<0||e>=this.v)throw new Error("Invalid index");if(e<=this.v>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.v;)this.set(e-1,this.get(e)),e++;this.popBack()}}S(){if(this.h>=1073741824)throw new Error("Capacity too big.");this.h=this.h<<1;const e=this.u,t=new Array(this.h),n=0|this.v,i=0|this.g;for(let a=0;a<n;a++)t[a]=e[i+a&this.m];for(let e=n;e<this.h;e++)t[e]=void 0;this.g=0,this.u=t,this.m=this.h-1}}const re=new class{constructor(){this.activeEvents=[],this.listeners={},this.activeEvents=[],this.listeners={}}raise(e,t,n){if(null!=this.listeners[e]){this.activeEvents.push(e);for(let i=0;i<this.listeners[e].length;i++)this.listeners[e][i](t,n);this.activeEvents.pop()}}listen(e,t){null==this.listeners[e]&&(this.listeners[e]=[]),this.listeners[e].push(t)}unlisten(e,t){if(null==this.listeners[e])return;const n=this.listeners[e].indexOf(t);-1!=n&&this.listeners[e].splice(n,1)}unlistenAll(e){null!=this.listeners[e]&&(this.listeners[e]=[])}};class le{constructor(){this.a=[1],this.b=[1],this.order=0}linearGain0thOrder(e){this.b[0]=e,this.order=0}lowPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),n=1+t;this.a[1]=(1-t)/n,this.b[1]=this.b[0]=1/n,this.order=1}lowPass1stOrderSimplified(e){const t=2*Math.sin(.5*e);this.a[1]=t-1,this.b[0]=t,this.b[1]=0,this.order=1}highPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),n=1+t;this.a[1]=(1-t)/n,this.b[0]=t/n,this.b[1]=-t/n,this.order=1}highShelf1stOrder(e,t){const n=Math.tan(.5*e),i=Math.sqrt(t),a=(n*i-1)/(n*i+1);this.a[1]=a/1,this.b[0]=(1+a+t*(1-a))/2,this.b[1]=(1+a-t*(1-a))/2,this.order=1}allPass1stOrderInvertPhaseAbove(e){const t=(Math.sin(e)-1)/Math.cos(e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(e){const t=(1-e)/(1+e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(e,t){const n=Math.sin(e)/(2*t),i=Math.cos(e),a=1+n;this.a[1]=-2*i/a,this.a[2]=(1-n)/a,this.b[2]=this.b[0]=(1-i)/(2*a),this.b[1]=(1-i)/a,this.order=2}lowPass2ndOrderSimplified(e,t){const n=2*Math.sin(e/2),i=1-1/(2*t),a=i+i/(1-n);this.a[1]=2*n+(n-1)*n*a-2,this.a[2]=(n-1)*(n-n*a-1),this.b[0]=n*n,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(e,t){const n=Math.sin(e)/(2*t),i=Math.cos(e),a=1+n;this.a[1]=-2*i/a,this.a[2]=(1-n)/a,this.b[2]=this.b[0]=(1+i)/(2*a),this.b[1]=-(1+i)/a,this.order=2}highShelf2ndOrder(e,t,n){const i=Math.sqrt(t),a=Math.cos(e),s=i+1,o=i-1,r=.5*Math.sin(e)*Math.sqrt(s/i*(1/n-1)+2),l=2*Math.sqrt(i)*r,p=s-o*a+l;this.a[1]=2*(o-s*a)/p,this.a[2]=(s-o*a-l)/p,this.b[0]=i*(s+o*a+l)/p,this.b[1]=-2*i*(o+s*a)/p,this.b[2]=i*(s+o*a-l)/p,this.order=2}peak2ndOrder(e,t,n){const i=Math.sqrt(t),a=n*e/(i>=1?i:1/i),s=Math.tan(.5*a),o=1+s/i;this.b[0]=(1+s*i)/o,this.b[1]=this.a[1]=-2*Math.cos(e)/o,this.b[2]=(1-s*i)/o,this.a[2]=(1-s/i)/o,this.order=2}}class pe{constructor(){this.real=0,this.imag=0,this.denom=1}analyze(e,t){this.analyzeComplex(e,Math.cos(t),Math.sin(t))}analyzeComplex(e,t,n){const i=e.a,a=e.b,s=t,o=-n;let r=a[0]+a[1]*s,l=a[1]*o,p=1+i[1]*s,h=i[1]*o,c=s,u=o;for(let t=2;t<=e.order;t++){const e=c*o+u*s;c=c*s-u*o,u=e,r+=a[t]*c,l+=a[t]*u,p+=i[t]*c,h+=i[t]*u}this.denom=p*p+h*h,this.real=r*p+l*h,this.imag=l*p-r*h}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}}class he{constructor(){this.a1=0,this.a2=0,this.b0=1,this.b1=0,this.b2=0,this.a1Delta=0,this.a2Delta=0,this.b0Delta=0,this.b1Delta=0,this.b2Delta=0,this.output1=0,this.output2=0,this.useMultiplicativeInputCoefficients=!1}resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(e,t,n,i){if(2!=e.order||2!=t.order)throw new Error;this.a1=e.a[1],this.a2=e.a[2],this.b0=e.b[0],this.b1=e.b[1],this.b2=e.b[2],this.a1Delta=(t.a[1]-e.a[1])*n,this.a2Delta=(t.a[2]-e.a[2])*n,i?(this.b0Delta=Math.pow(t.b[0]/e.b[0],n),this.b1Delta=Math.pow(t.b[1]/e.b[1],n),this.b2Delta=Math.pow(t.b[2]/e.b[2],n)):(this.b0Delta=(t.b[0]-e.b[0])*n,this.b1Delta=(t.b[1]-e.b[1])*n,this.b2Delta=(t.b[2]-e.b[2])*n),this.useMultiplicativeInputCoefficients=i}}function ce(e){return 2*Math.atan(.5*e)}const ue=2654435761,fe=2246822519,de=3266489917,me=668265263,ye=374761393;let ge;function ve(e,t=0){const n="string"==typeof e?(ge??=new TextEncoder).encode(e):e,i=n;let a=t+ye&4294967295,s=0;if(i.length>=16){const e=[t+ue+fe&4294967295,t+fe&4294967295,t+0&4294967295,t-ue&4294967295],i=n,o=i.length-16;let r=0;for(s=0;(4294967280&s)<=o;s+=4){const t=s,n=i[t+0]+(i[t+1]<<8),a=i[t+2]+(i[t+3]<<8),o=n*fe+(a*fe<<16);let l=e[r]+o&4294967295;l=l<<13|l>>>19;const p=65535&l,h=l>>>16;e[r]=p*ue+(h*ue<<16)&4294967295,r=r+1&3}a=(e[0]<<1|e[0]>>>31)+(e[1]<<7|e[1]>>>25)+(e[2]<<12|e[2]>>>20)+(e[3]<<18|e[3]>>>14)&4294967295}a=a+n.length&4294967295;const o=n.length-4;for(;s<=o;s+=4){const e=s,t=i[e+0]+(i[e+1]<<8),n=i[e+2]+(i[e+3]<<8);a=a+(t*de+(n*de<<16))&4294967295,a=a<<17|a>>>15,a=(65535&a)*me+((a>>>16)*me<<16)&4294967295}for(;s<i.length;++s){a+=i[s]*ye,a=a<<11|a>>>21,a=(65535&a)*ue+((a>>>16)*ue<<16)&4294967295}return a^=a>>>15,a=((65535&a)*fe&4294967295)+((a>>>16)*fe<<16),a^=a>>>13,a=((65535&a)*de&4294967295)+((a>>>16)*de<<16),a^=a>>>16,a<0?a+4294967296:a}const be=1e-24;function we(e,t,n){return n<=(t-=1)?n>=e?n:e:t}function Se(e,t,n){if(e<=n&&n<=t)return n;throw new Error(`Value ${n} not in range [${e}, ${t}]`)}function xe(e,t){let n=parseFloat(e);return Number.isNaN(n)&&(n=t),n}function ke(e,t){let n=parseInt(e);return Number.isNaN(n)&&(n=t),n}function Me(e,t){e.push(Te[t>>>30&3]),e.push(Te[t>>>24&63]),e.push(Te[t>>>18&63]),e.push(Te[t>>>12&63]),e.push(Te[t>>>6&63]),e.push(Te[t>>>0&63])}function Fe(e,t){let n=0;return n|=ze[e.charCodeAt(t++)]<<30,n|=ze[e.charCodeAt(t++)]<<24,n|=ze[e.charCodeAt(t++)]<<18,n|=ze[e.charCodeAt(t++)]<<12,n|=ze[e.charCodeAt(t++)]<<6,n|=ze[e.charCodeAt(t++)]<<0,n}function qe(e,t,n,i,a,s,o){e.push(Te[t]),e.push(Te[Number(n>0)]);let r=Math.round(1e3*Math.abs(n)),l=Math.floor(r/63);e.push(Te[r%63],Te[l%63],Te[Math.floor(l/63)]),e.push(Te[Number(i>0)]);let p=Math.round(1e3*Math.abs(i)),h=Math.floor(p/63);e.push(Te[p%63],Te[h%63],Te[Math.floor(h/63)]),e.push(Te[Number(a>0)]);let c=Math.round(1e3*Math.abs(a));e.push(Te[c%63],Te[Math.floor(c/63)]),e.push(Te[Number(s>0)]);let u=Math.round(1e3*Math.abs(s));e.push(Te[u%63],Te[Math.floor(u/63)]),e.push(Te[+o])}function Pe(e){let t=we(0,h.keys.length,e),n=0;return 12===e?(t=0,n=1):13===e?(t=6,n=-1):14===e?(t=0,n=-1):15===e&&(t=5,n=-1),[t,n]}const Te=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],ze=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class Ie{constructor(e,t,n){this.k=[],this.M=0;for(let i=t;i<n;i++){const t=ze[e.charCodeAt(i)];this.k.push(t>>5&1),this.k.push(t>>4&1),this.k.push(t>>3&1),this.k.push(t>>2&1),this.k.push(t>>1&1),this.k.push(1&t)}}read(e){let t=0;for(;e>0;)t<<=1,t+=this.k[this.M++],e--;return t}readLongTail(e,t){let n=e,i=t;for(;this.k[this.M++];)n+=1<<i,i++;for(;i>0;)i--,this.k[this.M++]&&(n+=1<<i);return n}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class Ce{constructor(){this.q=0,this.k=[]}clear(){this.q=0}write(e,t){for(e--;e>=0;)this.k[this.q++]=t>>>e&1,e--}writeLongTail(e,t,n){if(n<e)throw new Error("value out of bounds");n-=e;let i=t;for(;n>=1<<i;)this.k[this.q++]=1,n-=1<<i,i++;for(this.k[this.q++]=0;i>0;)i--,this.k[this.q++]=n>>>i&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let t=0;t<e.q;t++)this.k[this.q++]=e.k[t]}encodeBase64(e){for(let t=0;t<this.q;t+=6){const n=this.k[t]<<5|this.k[t+1]<<4|this.k[t+2]<<3|this.k[t+3]<<2|this.k[t+4]<<1|this.k[t+5];e.push(Te[n])}return e}lengthBase64(){return Math.ceil(this.q/6)}}function He(e,t,n){return{interval:e,time:t,size:n}}class De{constructor(e,t,n,i,a=!1){this.pitches=[e],this.pins=[He(0,0,i),He(0,n-t,a?0:i)],this.start=t,this.end=n,this.continuesLastPattern=!1}pickMainInterval(){let e=0,t=0;for(let n=1;n<this.pins.length;n++){const i=this.pins[n-1],a=this.pins[n];if(i.interval==a.interval){const n=a.time-i.time;e<n&&(e=n,t=i.interval)}}if(0==e){let e=0;for(let n=0;n<this.pins.length;n++){const i=this.pins[n];e<i.size&&(e=i.size,t=i.interval)}}return t}clone(){const e=new De(-1,this.start,this.end,3);e.pitches=this.pitches.concat(),e.pins=[];for(const t of this.pins)e.pins.push(He(t.interval,t.time,t.size));return e.continuesLastPattern=this.continuesLastPattern,e}getEndPinIndex(e){let t;for(t=1;t<this.pins.length-1&&!(this.pins[t].time+this.start>e);t++);return t}}class Oe{constructor(){this.notes=[],this.instruments=[0]}cloneNotes(){const e=[];for(const t of this.notes)e.push(t.clone());return e}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}toJsonObject(e,t,n){const i=[];for(const a of this.notes){let s=t.instruments[this.instruments[0]],o=Math.max(0,h.modCount-a.pitches[0]-1),r=e.getVolumeCapForSetting(n,s.modulators[o],s.modFilterTypes[o]);const l=[];for(const t of a.pins){let i=n?Math.round(t.size):Math.round(100*t.size/r);l.push({tick:(t.time+a.start)*h.rhythms[e.rhythm].stepsPerBeat/h.partsPerBeat,pitchBend:t.interval,volume:i,forMod:n})}const p={pitches:a.pitches,points:l};0==a.start&&(p.continuesLastPattern=a.continuesLastPattern),i.push(p)}const a={notes:i};return e.patternInstruments&&(a.instruments=this.instruments.map((e=>e+1))),a}fromJsonObject(e,t,n,i,a,s,o="auto"){const r=o.toLowerCase();if(t.patternInstruments)if(Array.isArray(e.instruments)){const i=e.instruments,a=we(h.instrumentCountMin,t.getMaxInstrumentsPerPatternForChannel(n)+1,i.length);for(let e=0;e<a;e++)this.instruments[e]=we(0,n.instruments.length,(0|i[e])-1);this.instruments.length=a}else this.instruments[0]=we(0,n.instruments.length,(0|e.instrument)-1),this.instruments.length=1;if(e.notes&&e.notes.length>0){const o=Math.min(t.beatsPerBar*h.partsPerBeat*(s?h.modCount:1),e.notes.length>>>0);for(let l=0;l<e.notes.length&&!(l>=o);l++){const o=e.notes[l];if(!(o&&o.pitches&&o.pitches.length>=1&&o.points&&o.points.length>=2))continue;const p=new De(0,0,0,0);p.pitches=[],p.pins=[];for(let e=0;e<o.pitches.length;e++){const t=0|o.pitches[e];if(-1==p.pitches.indexOf(t)&&(p.pitches.push(t),p.pitches.length>=h.maxChordSize))break}if(p.pitches.length<1)continue;let c=0,u=n.instruments[this.instruments[0]],f=Math.max(0,h.modCount-p.pitches[0]-1);for(let e=0;e<o.points.length;e++){const n=o.points[e];if(null==n||null==n.tick)continue;const a=null==n.pitchBend?0:0|n.pitchBend,r=Math.round(+n.tick*h.partsPerBeat/i);let l,d=t.getVolumeCapForSetting(s,u.modulators[f],u.modFilterTypes[f]);l=null==n.volume?d:null==n.forMod?Math.max(0,Math.min(d,Math.round((0|n.volume)*d/100))):(0|n.forMod)>0?Math.round(0|n.volume):Math.max(0,Math.min(d,Math.round((0|n.volume)*d/100))),r>t.beatsPerBar*h.partsPerBeat||(0==p.pins.length&&(p.start=r,c=a),p.pins.push(He(a-c,r-p.start,l)))}if(p.pins.length<2)continue;p.end=p.pins[p.pins.length-1].time+p.start;const d=a?h.drumCount-1:h.maxPitch;let m=d,y=0;for(let e=0;e<p.pitches.length;e++)p.pitches[e]+=c,(p.pitches[e]<0||p.pitches[e]>d)&&(p.pitches.splice(e,1),e--),p.pitches[e]<m&&(m=p.pitches[e]),p.pitches[e]>y&&(y=p.pitches[e]);if(!(p.pitches.length<1)){for(let e=0;e<p.pins.length;e++){const t=p.pins[e];t.interval+m<0&&(t.interval=-m),t.interval+y>d&&(t.interval=d-y),e>=2&&t.interval==p.pins[e-1].interval&&t.interval==p.pins[e-2].interval&&t.size==p.pins[e-1].size&&t.size==p.pins[e-2].size&&(p.pins.splice(e-1,1),e--)}if(0==p.start?p.continuesLastPattern=!0===o.continuesLastPattern:p.continuesLastPattern=!1,"ultrabox"!=r&&"slarmoosbox"!=r&&"abyssbox"!=r&&u.modulators[f]==h.modulators.dictionary.tempo.index)for(const e of p.pins){const t=30,n=1,i=e.size+t;e.size=i-n}this.notes.push(p)}}}}}class Ge{constructor(e){this.frequency=4,this.amplitude=0,this.waveform=0,this.pulseWidth=.5,this.reset(e)}reset(e){this.frequency=4,this.amplitude=e<=1?h.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.waveform=e.waveform,this.pulseWidth=e.pulseWidth}}class Le{constructor(){this.name="",this.carrierCount=0,this.modulatedBy=[[],[],[],[],[],[]],this.associatedCarrier=[],this.fromPreset(1)}set(e,t){this.reset(),this.carrierCount=e;for(let n=0;n<this.modulatedBy.length;n++){this.modulatedBy[n]=t[n],n<e&&(this.associatedCarrier[n]=n+1),this.name+=n+1;for(let i=0;i<t[n].length;i++)this.name+=t[n][i],t[n][i]>e-1&&(this.associatedCarrier[t[n][i]-1]=n+1),this.name+=",";this.name+=n<e?"|":"."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(e){this.name=e.name,this.carrierCount=e.carrierCount,this.modulatedBy=e.modulatedBy,this.associatedCarrier=e.associatedCarrier}fromPreset(e){this.reset();let t=h.algorithms6Op[e];this.name=t.name,this.carrierCount=t.carrierCount;for(var n=0;n<t.modulatedBy.length;n++)this.modulatedBy[n]=Array.from(t.modulatedBy[n]),this.associatedCarrier[n]=t.associatedCarrier[n]}}class Ee{constructor(){this.name="",this.indices=[[],[],[],[],[],[]],this.fromPreset(1)}set(e){this.reset();for(let t=0;t<this.indices.length;t++){this.indices[t]=e[t];for(let n=0;n<e[t].length;n++)this.name+=e[t][n],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(e){this.name=e.name,this.indices=e.indices}fromPreset(e){this.reset();let t=h.feedbacks6Op[e];for(var n=0;n<t.indices.length;n++){this.indices[n]=Array.from(t.indices[n]);for(let e=0;e<t.indices[n].length;e++)this.name+=t.indices[n][e],this.name+=",";this.name+="."}}}class Ae{constructor(e){this.spectrum=[],this.hash=-1,this.reset(e)}reset(e){for(let t=0;t<h.spectrumControlPoints;t++)if(e)this.spectrum[t]=Math.round(h.spectrumMax*(1/Math.sqrt(1+t/3)));else{const e=0==t||7==t||11==t||14==t||16==t||18==t||21==t||23==t||t>=25;this.spectrum[t]=e?Math.max(0,Math.round(h.spectrumMax*(1-t/30))):0}this.markCustomWaveDirty()}markCustomWaveDirty(){const e=Ze.fittingPowerOfTwo(h.spectrumMax+2)-1;let t=0;for(const n of this.spectrum)t=t*e+n>>>0;this.hash=t}}class Re{constructor(){this.wave=null,this.P=-1}getCustomWave(e,t){if(this.P==e.hash)return this.wave;this.P=e.hash;const n=h.spectrumNoiseLength;null!=this.wave&&this.wave.length==n+1||(this.wave=new Float32Array(n+1));const i=this.wave;for(let e=0;e<n;e++)i[e]=0;const a=[0,1/7,Math.log2(5/4),3/7,Math.log2(1.5),5/7,6/7];function s(e){return t+Math.floor(e/h.spectrumControlPointsPerOctave)+a[(e+h.spectrumControlPointsPerOctave)%h.spectrumControlPointsPerOctave]}let o=1;for(let t=0;t<h.spectrumControlPoints+1;t++){const a=t<=0?0:e.spectrum[t-1],r=t>=h.spectrumControlPoints?e.spectrum[h.spectrumControlPoints-1]:e.spectrum[t],l=s(t-1);let p=s(t);t>=h.spectrumControlPoints&&(p=14+.25*(p-14)),0==a&&0==r||(o+=.02*y(i,n,l,p,a/h.spectrumMax,r/h.spectrumMax,-.5))}return e.spectrum[h.spectrumControlPoints-1]>0&&(o+=.02*y(i,n,14+.25*(s(h.spectrumControlPoints)-14),14,e.spectrum[h.spectrumControlPoints-1]/h.spectrumMax,0,-.5)),se(i,n),ie(i,5/(Math.sqrt(n)*Math.pow(o,.75))),i[n]=i[0],i}}class Ne{constructor(){this.harmonics=[],this.hash=-1,this.reset()}reset(){for(let e=0;e<h.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=h.harmonicsMax,this.harmonics[3]=h.harmonicsMax,this.harmonics[6]=h.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){const e=Ze.fittingPowerOfTwo(h.harmonicsMax+2)-1;let t=0;for(const n of this.harmonics)t=t*e+n>>>0;this.hash=t}}class Be{constructor(){this.wave=null,this.P=-1}getCustomWave(e,t){if(this.P==e.hash&&this.T==t)return this.wave;this.P=e.hash,this.T=t;const n=7==t?h.harmonicsRenderedForPickedString:h.harmonicsRendered,i=h.harmonicsWavelength,a=m(0,null,null);null!=this.wave&&this.wave.length==i+1||(this.wave=new Float32Array(i+1));const s=this.wave;for(let e=0;e<i;e++)s[e]=0;let o=1;for(let t=0;t<n;t++){const r=t+1;let l=t<h.harmonicsControlPoints?e.harmonics[t]:e.harmonics[h.harmonicsControlPoints-1];t>=h.harmonicsControlPoints&&(l*=1-(t-h.harmonicsControlPoints)/(n-h.harmonicsControlPoints));const p=l/h.harmonicsMax;let c=Math.pow(2,l-h.harmonicsMax+1)*Math.sqrt(p);t<h.harmonicsControlPoints&&(o+=c),c*=Math.pow(r,-.25),c*=a[t+589],s[i-r]=c}se(s,i);const r=1/Math.pow(o,.7);for(let e=0;e<s.length;e++)s[e]*=r;return function(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n];e[n]=t,t+=i}}(s),s[i]=s[0],s}}class We{constructor(){this.freq=0,this.gain=h.filterGainCenter,this.type=2}set(e,t){this.freq=e,this.gain=t}getHz(){return We.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(e){return h.filterFreqReferenceHz*Math.pow(2,(e-h.filterFreqReferenceSetting)*h.filterFreqStep)}static getSettingValueFromHz(e){return Math.log2(e/h.filterFreqReferenceHz)/h.filterFreqStep+h.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(e){return Math.max(0,Math.min(h.filterFreqRange-1,Math.round(We.getSettingValueFromHz(e))))}getLinearGain(e=1){const t=(this.gain-h.filterGainCenter)*h.filterGainStep,n=2==this.type?0:-.5,i=n+(t-n)*e;return Math.pow(2,i)}static getRoundedSettingValueFromLinearGain(e){return Math.max(0,Math.min(h.filterGainRange-1,Math.round(Math.log2(e)/h.filterGainStep+h.filterGainCenter)))}toCoefficients(e,t,n=1,i=1){const a=2*Math.PI*Math.max(h.filterFreqMinHz,Math.min(h.filterFreqMaxHz,n*this.getHz()))/t,s=this.getLinearGain(i);switch(this.type){case 0:e.lowPass2ndOrderButterworth(a,s);break;case 1:e.highPass2ndOrderButterworth(a,s);break;case 2:e.peak2ndOrder(a,s,1);break;default:throw new Error}}getVolumeCompensationMult(){const e=(this.freq-h.filterFreqReferenceSetting)*h.filterFreqStep,t=(this.gain-h.filterGainCenter)*h.filterGainStep;switch(this.type){case 0:const n=Math.pow(2,e)*h.filterFreqReferenceHz/8e3,i=(Math.sqrt(1+4*n)-1)/2,a=Math.log2(i);return Math.pow(.5,.2*Math.max(0,t+1)+Math.min(0,Math.max(-3,.595*a+.35*Math.min(0,t+1))));case 1:return Math.pow(.5,.125*Math.max(0,t+1)+Math.min(0,.3*(-e-Math.log2(h.filterFreqReferenceHz/125))+.2*Math.min(0,t+1)));case 2:const s=e+Math.log2(h.filterFreqReferenceHz/2e3),o=Math.pow(1/(1+Math.pow(s/3,2)),2);return Math.pow(.5,.125*Math.max(0,t)+.1*o*Math.min(0,t));default:throw new Error}}}class Ve{constructor(){this.controlPoints=[],this.controlPointCount=0,this.reset()}reset(){this.controlPointCount=0}addPoint(e,t,n){let i;this.controlPoints.length<=this.controlPointCount?(i=new We,this.controlPoints[this.controlPointCount]=i):i=this.controlPoints[this.controlPointCount],this.controlPointCount++,i.type=e,i.set(t,n)}toJsonObject(){const e=[];for(let t=0;t<this.controlPointCount;t++){const n=this.controlPoints[t];e.push({type:h.filterTypeNames[n.type],cutoffHz:Math.round(100*n.getHz())/100,linearGain:Math.round(1e4*n.getLinearGain())/1e4})}return e}fromJsonObject(e){if(this.controlPoints.length=0,e)for(const t of e){const e=new We;e.type=h.filterTypeNames.indexOf(t.type),-1==e.type&&(e.type=2),null!=t.cutoffHz?e.freq=We.getRoundedSettingValueFromHz(t.cutoffHz):e.freq=0,null!=t.linearGain?e.gain=We.getRoundedSettingValueFromLinearGain(t.linearGain):e.gain=h.filterGainCenter,this.controlPoints.push(e)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(e,t){if(e.controlPointCount!=t.controlPointCount)return!1;for(let n=0;n<e.controlPointCount;n++)if(e.controlPoints[n].type!=t.controlPoints[n].type)return!1;return!0}static lerpFilters(e,t,n){let i=new Ve;if(null==e)return e;if(null==t)return t;if(n=Math.max(0,Math.min(1,n)),this.filtersCanMorph(e,t)){for(let a=0;a<e.controlPointCount;a++)i.controlPoints[a]=new We,i.controlPoints[a].type=e.controlPoints[a].type,i.controlPoints[a].freq=e.controlPoints[a].freq+(t.controlPoints[a].freq-e.controlPoints[a].freq)*n,i.controlPoints[a].gain=e.controlPoints[a].gain+(t.controlPoints[a].gain-e.controlPoints[a].gain)*n;return i.controlPointCount=e.controlPointCount,i}return n>=1?t:e}convertLegacySettings(e,t,n){this.reset();const i=2*Math.asin(.475),a=t>1,s=0==t,o=10==e,r=5==n.type||6==n.type||10==n.type||1==n.type,l=48e3,p=8e3*Math.pow(2,.5*(e-10)),h=Math.min(i,2*Math.PI*p/l);if(0==n.type&&!a&&o);else if(s){const e=3.5,t=h*Math.pow(2,e),n=l*(t/(1+t/Math.PI))/(2*Math.PI),i=We.getRoundedSettingValueFromHz(n),a=We.getHzFromSettingValue(i),s=2*Math.PI*a/l,o=new le;o.lowPass1stOrderSimplified(h);const p=new pe;p.analyze(o,s);const c=p.magnitude();let u=Math.log2(c);u=.82*(u+e)-e,r&&(u=Math.min(u,-1));const f=Math.pow(2,u),d=We.getRoundedSettingValueFromLinearGain(f);this.addPoint(0,i,d)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),n=.5/e,i=h+(h*(h/(2*Math.PI*8e3/l)*Math.pow(n,.9)+1)-h)*n;let s;s=r?l*Math.min(i,h*Math.pow(2,.25))/(2*Math.PI):l*i/(2*Math.PI);const o=We.getRoundedSettingValueFromHz(s);let p;if(r)p=e;else{const t=new le;t.lowPass2ndOrderSimplified(h,e);const n=new pe;n.analyze(t,i),p=n.magnitude()}a||(p=Math.min(p,Math.sqrt(.5)));const c=We.getRoundedSettingValueFromLinearGain(p);this.addPoint(0,o,c)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(e,t,n=!1){this.reset();const i=2*Math.asin(.475),a=0==t&&n,s=48e3,o=8e3*Math.pow(2,.5*(e-10)),r=Math.min(i,2*Math.PI*o/s);if(a){const e=3.5,t=r*Math.pow(2,e),n=s*(t/(1+t/Math.PI))/(2*Math.PI),i=We.getRoundedSettingValueFromHz(n),a=We.getHzFromSettingValue(i),o=2*Math.PI*a/s,l=new le;l.lowPass1stOrderSimplified(r);const p=new pe;p.analyze(l,o);const h=p.magnitude();let c=Math.log2(h);c=.82*(c+e)-e;const u=Math.pow(2,c),f=We.getRoundedSettingValueFromLinearGain(u);this.addPoint(0,i,f)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),n=.5/e,i=r+(r*(r/(2*Math.PI*8e3/s)*Math.pow(n,.9)+1)-r)*n;let a;a=s*i/(2*Math.PI);const o=We.getSettingValueFromHz(a);let l;const p=new le;p.lowPass2ndOrderSimplified(r,e);const h=new pe;h.analyze(p,i),l=h.magnitude();const c=We.getRoundedSettingValueFromLinearGain(l);this.addPoint(0,o,c)}}}class $e{constructor(e){this.isNoiseEnvelope=e,this.target=0,this.index=0,this.envelope=0,this.perEnvelopeSpeed=h.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.steps=2,this.seed=2,this.waveform=0,this.reset()}reset(){this.target=0,this.index=0,this.envelope=0,this.pitchEnvelopeStart=0,this.pitchEnvelopeEnd=this.isNoiseEnvelope?h.drumCount-1:h.maxPitch,this.inverse=!1,this.isNoiseEnvelope=!1,this.perEnvelopeSpeed=h.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.steps=2,this.seed=2,this.waveform=0}toJsonObject(){const e={target:h.instrumentAutomationTargets[this.target].name,envelope:h.newEnvelopes[this.envelope].name,inverse:this.inverse,perEnvelopeSpeed:this.perEnvelopeSpeed,perEnvelopeLowerBound:this.perEnvelopeLowerBound,perEnvelopeUpperBound:this.perEnvelopeUpperBound};return h.instrumentAutomationTargets[this.target].maxCount>1&&(e.index=this.index),"pitch"==h.newEnvelopes[this.envelope].name?(e.pitchEnvelopeStart=this.pitchEnvelopeStart,e.pitchEnvelopeEnd=this.pitchEnvelopeEnd):"random"==h.newEnvelopes[this.envelope].name?(e.steps=this.steps,e.seed=this.seed,e.waveform=this.waveform):"lfo"==h.newEnvelopes[this.envelope].name&&(e.waveform=this.waveform),e}fromJsonObject(e,t){this.reset();let n=h.instrumentAutomationTargets.dictionary[e.target];null==n&&(n=h.instrumentAutomationTargets.dictionary.noteVolume),this.target=n.index;let i=h.envelopes.dictionary.none,a=!1;"slarmoosbox"==t||"abyssbox"==t?"tremolo2"==e.envelope?(i=h.newEnvelopes[8],a=!0):"tremolo"==e.envelope?(i=h.newEnvelopes[8],a=!1):i=h.newEnvelopes.dictionary[e.envelope]:9==h.envelopes.dictionary[e.envelope].type?(i=h.newEnvelopes[8],a=!0):i=h.newEnvelopes[Math.max(h.envelopes.dictionary[e.envelope].type-1,0)].index>8?h.newEnvelopes[h.envelopes.dictionary[e.envelope].type-1]:h.newEnvelopes[h.envelopes.dictionary[e.envelope].type],null==i&&(9==h.envelopes.dictionary[e.envelope].type?(i=h.newEnvelopes[8],a=!0):i=h.newEnvelopes[Math.max(h.envelopes.dictionary[e.envelope].type-1,0)].index>8?h.newEnvelopes[h.envelopes.dictionary[e.envelope].type-1]:h.newEnvelopes[h.envelopes.dictionary[e.envelope].type]),null==i&&(i=h.envelopes.dictionary.none),this.envelope=i.index,null!=e.index?this.index=we(0,h.instrumentAutomationTargets[this.target].maxCount,0|e.index):this.index=0,null!=e.pitchEnvelopeStart?this.pitchEnvelopeStart=we(0,this.isNoiseEnvelope?h.drumCount:h.maxPitch+1,e.pitchEnvelopeStart):this.pitchEnvelopeStart=0,null!=e.pitchEnvelopeEnd?this.pitchEnvelopeEnd=we(0,this.isNoiseEnvelope?h.drumCount:h.maxPitch+1,e.pitchEnvelopeEnd):this.pitchEnvelopeEnd=this.isNoiseEnvelope?h.drumCount:h.maxPitch,this.inverse=Boolean(e.inverse),null!=e.perEnvelopeSpeed?this.perEnvelopeSpeed=e.perEnvelopeSpeed:this.perEnvelopeSpeed=h.envelopes.dictionary[e.envelope].speed,null!=e.perEnvelopeLowerBound?this.perEnvelopeLowerBound=we(h.perEnvelopeBoundMin,h.perEnvelopeBoundMax+1,e.perEnvelopeLowerBound):this.perEnvelopeLowerBound=0,null!=e.perEnvelopeUpperBound?this.perEnvelopeUpperBound=we(h.perEnvelopeBoundMin,h.perEnvelopeBoundMax+1,e.perEnvelopeUpperBound):this.perEnvelopeUpperBound=1,a&&(this.inverse?(this.perEnvelopeUpperBound=Math.floor(this.perEnvelopeUpperBound/2*10)/10,this.perEnvelopeLowerBound=Math.floor(this.perEnvelopeLowerBound/2*10)/10):(this.perEnvelopeUpperBound=Math.floor(10*(.5+(this.perEnvelopeUpperBound-this.perEnvelopeLowerBound)/2))/10,this.perEnvelopeLowerBound=.5)),null!=e.steps?this.steps=we(1,h.randomEnvelopeStepsMax+1,e.steps):this.steps=2,null!=e.seed?this.seed=we(1,h.randomEnvelopeSeedMax+1,e.seed):this.seed=2,null!=e.waveform?this.waveform=e.waveform:this.waveform=0}}class Ue{constructor(e,t){if(this.type=0,this.preset=0,this.chipWave=2,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=h.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.chipNoise=1,this.eqFilter=new Ve,this.eqFilterType=!1,this.eqFilterSimpleCut=h.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.noteFilter=new Ve,this.noteFilterType=!1,this.noteFilterSimpleCut=h.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.eqSubFilters=[],this.noteSubFilters=[],this.envelopes=[],this.fadeIn=0,this.fadeOut=h.fadeOutNeutral,this.envelopeCount=0,this.transition=h.transitions.dictionary.normal.index,this.slideTicks=3,this.pitchShift=0,this.detune=0,this.vibrato=0,this.interval=0,this.vibratoDepth=0,this.vibratoSpeed=10,this.vibratoDelay=0,this.vibratoType=0,this.envelopeSpeed=12,this.discreteEnvelope=!1,this.unison=0,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.unisonBuzzes=!1,this.effects=0,this.chord=1,this.strumParts=1,this.volume=0,this.pan=h.panCenter,this.panDelay=10,this.arpeggioSpeed=12,this.fastTwoNoteArp=!1,this.legacyTieOver=!1,this.clicklessTransition=!1,this.aliases=!1,this.pulseWidth=h.pulseWidthRange/2,this.decimalOffset=0,this.supersawDynamism=h.supersawDynamismMax,this.supersawSpread=Math.ceil(h.supersawSpreadMax/2),this.supersawShape=0,this.stringSustain=10,this.stringSustainType=1,this.distortion=0,this.ringModulation=0,this.ringModulationHz=0,this.rmWaveformIndex=0,this.rmPulseWidth=0,this.rmHzOffset=200,this.bitcrusherFreq=0,this.bitcrusherQuantization=0,this.chorus=0,this.reverb=0,this.echoSustain=0,this.echoDelay=0,this.phaserFreq=0,this.phaserMix=h.phaserMixRange-1,this.phaserFeedback=0,this.phaserStages=2,this.invertWave=!1,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm=new Le,this.customFeedbackType=new Ee,this.feedbackAmplitude=0,this.customChipWave=new Float32Array(64),this.customChipWaveIntegral=new Float32Array(65),this.operators=[],this.harmonicsWave=new Ne,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.modChannels=[],this.modInstruments=[],this.modulators=[],this.modFilterTypes=[],this.modEnvelopeNumbers=[],this.invalidModulators=[],this.upperNoteLimit=h.maxPitch,this.lowerNoteLimit=0,this.isNoiseInstrument=!1,t)for(let e=0;e<h.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(h.modulators.dictionary.none.index);this.spectrumWave=new Ae(e);for(let e=0;e<h.operatorCount+2;e++)this.operators[e]=new Ge(e);for(let e=0;e<h.drumCount;e++)this.drumsetEnvelopes[e]=h.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e]=new Ae(!0);for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let n=0;for(let e=0;e<this.customChipWave.length;e++)n+=this.customChipWave[e];const i=n/this.customChipWave.length;let a=0,s=0;for(let e=0;e<this.customChipWave.length;e++)a+=s,s=this.customChipWave[e]-i,this.customChipWaveIntegral[e]=a;this.customChipWaveIntegral[64]=0,this.isNoiseInstrument=e}setTypeAndReset(e,t,n){n&&(e=10),this.type=e,this.preset=e,this.volume=0,this.effects=4,this.chorus=h.chorusRange-1,this.reverb=0,this.echoSustain=Math.floor(.5*(h.echoSustainRange-1)),this.echoDelay=Math.floor(.5*(h.echoDelayRange-1)),this.eqFilter.reset(),this.eqFilterType=!1,this.eqFilterSimpleCut=h.filterSimpleCutRange-1,this.eqFilterSimplePeak=0;for(let e=0;e<h.filterMorphCount;e++)this.eqSubFilters[e]=null,this.noteSubFilters[e]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=h.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.distortion=Math.floor(.75*(h.distortionRange-1)),this.bitcrusherFreq=Math.floor(.5*(h.bitcrusherFreqRange-1)),this.bitcrusherQuantization=Math.floor(.5*(h.bitcrusherQuantizationRange-1)),this.ringModulation=0,this.ringModulationHz=0,this.rmPulseWidth=0,this.rmWaveformIndex=0,this.rmHzOffset=200,this.phaserFreq=0,this.phaserFeedback=0,this.phaserStages=2,this.phaserMix=h.phaserMixRange-1,this.invertWave=!1,this.pan=h.panCenter,this.panDelay=10,this.pitchShift=h.pitchShiftCenter,this.detune=h.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.stringSustainType=h.enableAcousticSustain?1:0,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.envelopeSpeed=12,this.discreteEnvelope=!1,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=h.fadeOutNeutral,this.transition=h.transitions.dictionary.normal.index,this.envelopeCount=0,this.upperNoteLimit=h.maxPitch,this.lowerNoteLimit=0,this.isNoiseInstrument=t,e){case 0:this.chipWave=2,this.chord=h.chords.dictionary.arpeggio.index,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=h.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0;break;case 9:this.chipWave=2,this.chord=h.chords.dictionary.arpeggio.index;for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let n=0;for(let e=0;e<this.customChipWave.length;e++)n+=this.customChipWave[e];const i=n/this.customChipWave.length;let a=0,s=0;for(let e=0;e<this.customChipWave.length;e++)a+=s,s=this.customChipWave[e]-i,this.customChipWaveIntegral[e]=a;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=h.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 11:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 2:this.chipNoise=1,this.chord=h.chords.dictionary.arpeggio.index;break;case 3:this.chord=h.chords.dictionary.simultaneous.index,this.spectrumWave.reset(t);break;case 4:this.chord=h.chords.dictionary.simultaneous.index;for(let e=0;e<h.drumCount;e++)this.drumsetEnvelopes[e]=h.envelopes.dictionary["twang 2"].index,null==this.drumsetSpectrumWaves[e]&&(this.drumsetSpectrumWaves[e]=new Ae(!0)),this.drumsetSpectrumWaves[e].reset(t);break;case 5:this.chord=h.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:this.chord=h.chords.dictionary.arpeggio.index,this.pulseWidth=h.pulseWidthRange/2,this.decimalOffset=0;break;case 7:this.chord=h.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 10:this.transition=0,this.vibrato=0,this.interval=0,this.effects=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let e=0;e<h.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(h.modulators.dictionary.none.index),this.invalidModulators[e]=!1,this.modFilterTypes[e]=0,this.modEnvelopeNumbers[e]=0;break;case 8:this.chord=h.chords.dictionary.arpeggio.index,this.supersawDynamism=h.supersawDynamismMax,this.supersawSpread=Math.ceil(h.supersawSpreadMax/2),this.supersawShape=0,this.pulseWidth=h.pulseWidthRange/2-1,this.decimalOffset=0;break;default:throw new Error("Unrecognized instrument type: "+e)}this.chord!=h.chords.dictionary.simultaneous.index&&(this.effects=2048|this.effects)}convertLegacySettings(e,t){let n=e.filterCutoff,i=e.filterResonance,a=e.filterEnvelope,s=e.pulseEnvelope,o=e.operatorEnvelopes,r=e.feedbackEnvelope;null==n&&(n=0==this.type?6:10),null==i&&(i=0),null==a&&(a=h.envelopes.dictionary.none),null==s&&(s=h.envelopes.dictionary[6==this.type?"twang 2":"none"]),null==o&&(o=[h.envelopes.dictionary[1==this.type?"note size":"none"],h.envelopes.dictionary.none,h.envelopes.dictionary.none,h.envelopes.dictionary.none]),null==r&&(r=h.envelopes.dictionary.none);10==n&&4==a.type&&(a=h.envelopes.dictionary.none);const l=h.algorithms[this.algorithm].carrierCount;let p=!0,c=!0,u=1==a.type||1==s.type;if(1==this.type||11==this.type){u=u||1==r.type;for(let e=0;e<o.length;e++)e<l?1!=o[e].type?c=!1:p=!1:u=u||1==o[e].type}this.envelopeCount=0,1!=this.type&&11!=this.type||(c&&u?this.addEnvelope(h.instrumentAutomationTargets.dictionary.noteVolume.index,0,h.envelopes.dictionary["note size"].index,!1):p&&!u&&this.addEnvelope(h.instrumentAutomationTargets.dictionary.none.index,0,h.envelopes.dictionary["note size"].index,!1)),0==a.type?(this.noteFilter.reset(),this.noteFilterType=!1,this.eqFilter.convertLegacySettings(n,i,a),this.effects&=-33,(t||this.eqFilterType)&&(this.eqFilterType=!0,this.eqFilterSimpleCut=n,this.eqFilterSimplePeak=i)):(this.eqFilter.reset(),this.eqFilterType=!1,this.noteFilterType=!1,this.noteFilter.convertLegacySettings(n,i,a),this.effects|=32,this.addEnvelope(h.instrumentAutomationTargets.dictionary.noteFilterAllFreqs.index,0,a.index,!1),(t||this.noteFilterType)&&(this.noteFilterType=!0,this.noteFilterSimpleCut=n,this.noteFilterSimplePeak=i)),0!=s.type&&this.addEnvelope(h.instrumentAutomationTargets.dictionary.pulseWidth.index,0,s.index,!1);for(let e=0;e<o.length;e++)e<l&&c||0!=o[e].type&&this.addEnvelope(h.instrumentAutomationTargets.dictionary.operatorAmplitude.index,e,o[e].index,!1);0!=r.type&&this.addEnvelope(h.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,r.index,!1)}toJsonObject(){const e={type:h.instrumentTypeNames[this.type],volume:this.volume,eqFilter:this.eqFilter.toJsonObject(),eqFilterType:this.eqFilterType,eqSimpleCut:this.eqFilterSimpleCut,eqSimplePeak:this.eqFilterSimplePeak,envelopeSpeed:this.envelopeSpeed,discreteEnvelope:this.discreteEnvelope};this.preset!=this.type&&(e.preset=this.preset);for(let t=0;t<h.filterMorphCount;t++)null!=this.eqSubFilters[t]&&(e["eqSubFilters"+t]=this.eqSubFilters[t].toJsonObject());const t=[];for(const e of h.effectOrder)this.effects&1<<e&&t.push(h.effectNames[e]);if(e.effects=t,S(this.effects)&&(e.transition=h.transitions[this.transition].name,e.clicklessTransition=this.clicklessTransition,1==h.transitions[this.transition].slides&&(e.slideTicks=this.slideTicks)),x(this.effects)&&(e.chord=this.getChord().name,e.fastTwoNoteArp=this.fastTwoNoteArp,e.arpeggioSpeed=this.arpeggioSpeed,h.chords[this.chord].strumParts>0&&(e.strumParts=this.strumParts)),k(this.effects)&&(e.pitchShiftSemitones=this.pitchShift),M(this.effects)&&(e.detuneCents=Ze.detuneToCents(this.detune)),F(this.effects)&&(-1==this.vibrato&&(this.vibrato=5),5!=this.vibrato?e.vibrato=h.vibratos[this.vibrato].name:e.vibrato="custom",e.vibratoDepth=this.vibratoDepth,e.vibratoDelay=this.vibratoDelay,e.vibratoSpeed=this.vibratoSpeed,e.vibratoType=this.vibratoType),q(this.effects)){e.noteFilterType=this.noteFilterType,e.noteSimpleCut=this.noteFilterSimpleCut,e.noteSimplePeak=this.noteFilterSimplePeak,e.noteFilter=this.noteFilter.toJsonObject();for(let t=0;t<h.filterMorphCount;t++)null!=this.noteSubFilters[t]&&(e["noteSubFilters"+t]=this.noteSubFilters[t].toJsonObject())}if(P(this.effects)&&(e.distortion=Math.round(100*this.distortion/(h.distortionRange-1)),e.aliases=this.aliases),T(this.effects)&&(e.bitcrusherOctave=(h.bitcrusherFreqRange-1-this.bitcrusherFreq)*h.bitcrusherOctaveStep,e.bitcrusherQuantization=Math.round(100*this.bitcrusherQuantization/(h.bitcrusherQuantizationRange-1))),D(this.effects)&&(e.ringMod=Math.round(100*this.ringModulation/(h.ringModRange-1)),e.ringModHz=Math.round(100*this.ringModulationHz/(h.ringModHzRange-1)),e.rmWaveformIndex=this.rmWaveformIndex,e.rmPulseWidth=Math.round(100*this.rmPulseWidth/(h.pulseWidthRange-1)),e.rmHzOffset=Math.round(100*this.rmHzOffset/h.rmHzOffsetMax)),O(this.effects)&&(e.phaserMix=Math.round(100*this.phaserMix/(h.phaserMixRange-1)),e.phaserFreq=Math.round(100*this.phaserFreq/(h.phaserFreqRange-1)),e.phaserFeedback=Math.round(100*this.phaserFeedback/(h.phaserFeedbackRange-1)),e.phaserStages=Math.round(100*this.phaserStages/(h.phaserMaxStages-1))),L(this.effects)&&(e.invertWave=this.invertWave),z(this.effects)&&(e.pan=Math.round(100*(this.pan-h.panCenter)/h.panCenter),e.panDelay=this.panDelay),I(this.effects)&&(e.chorus=Math.round(100*this.chorus/(h.chorusRange-1))),C(this.effects)&&(e.echoSustain=Math.round(100*this.echoSustain/(h.echoSustainRange-1)),e.echoDelayBeats=Math.round(1e3*(this.echoDelay+1)*h.echoDelayStepTicks/(h.ticksPerPart*h.partsPerBeat))/1e3),H(this.effects)&&(e.reverb=Math.round(100*this.reverb/(h.reverbRange-1))),G(this.effects)&&(e.upperNoteLimit=this.upperNoteLimit,e.lowerNoteLimit=this.lowerNoteLimit),4!=this.type&&(e.fadeInSeconds=Math.round(1e4*Ze.fadeInSettingToSeconds(this.fadeIn))/1e4,e.fadeOutTicks=Ze.fadeOutSettingToTicks(this.fadeOut)),5==this.type||7==this.type){e.harmonics=[];for(let t=0;t<h.harmonicsControlPoints;t++)e.harmonics[t]=Math.round(100*this.harmonicsWave.harmonics[t]/h.harmonicsMax)}if(0!=this.type&&6!=this.type&&9!=this.type&&2!=this.type&&5!=this.type&&7!=this.type&&3!=this.type||(e.unison=this.unison==h.unisons.length?"custom":h.unisons[this.unison].name,this.unison==h.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign,e.unisonBuzzes=this.unisonBuzzes)),2==this.type)e.wave=h.chipNoises[this.chipNoise].name;else if(3==this.type){e.spectrum=[];for(let t=0;t<h.spectrumControlPoints;t++)e.spectrum[t]=Math.round(100*this.spectrumWave.spectrum[t]/h.spectrumMax)}else if(4==this.type){e.drums=[];for(let t=0;t<h.drumCount;t++){const n=[];for(let e=0;e<h.spectrumControlPoints;e++)n[e]=Math.round(100*this.drumsetSpectrumWaves[t].spectrum[e]/h.spectrumMax);e.drums[t]={filterEnvelope:this.getDrumsetEnvelope(t).name,spectrum:n}}}else if(0==this.type)e.wave=h.chipWaves[this.chipWave].name,e.isUsingAdvancedLoopControls=this.isUsingAdvancedLoopControls,e.chipWaveLoopStart=this.chipWaveLoopStart,e.chipWaveLoopEnd=this.chipWaveLoopEnd,e.chipWaveLoopMode=this.chipWaveLoopMode,e.chipWavePlayBackwards=this.chipWavePlayBackwards,e.chipWaveStartOffset=this.chipWaveStartOffset;else if(6==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset;else if(8==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.dynamism=Math.round(100*this.supersawDynamism/h.supersawDynamismMax),e.spread=Math.round(100*this.supersawSpread/h.supersawSpreadMax),e.shape=Math.round(100*this.supersawShape/h.supersawShapeMax);else if(7==this.type)e.stringSustain=Math.round(100*this.stringSustain/(h.stringSustainRange-1)),h.enableAcousticSustain&&(e.stringSustainType=h.sustainTypeNames[this.stringSustainType]);else if(5==this.type)e.unison=this.unison==h.unisons.length?"custom":h.unisons[this.unison].name,this.unison==h.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(1==this.type||11==this.type){const t=[];for(const e of this.operators)t.push({frequency:h.operatorFrequencies[e.frequency].name,amplitude:e.amplitude,waveform:h.operatorWaves[e.waveform].name,pulseWidth:e.pulseWidth});if(1==this.type)e.algorithm=h.algorithms[this.algorithm].name,e.feedbackType=h.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.operators=t;else{if(e.algorithm=h.algorithms6Op[this.algorithm6Op].name,e.feedbackType=h.feedbacks6Op[this.feedbackType6Op].name,e.feedbackAmplitude=this.feedbackAmplitude,0==this.algorithm6Op){const t={};t.mods=this.customAlgorithm.modulatedBy,t.carrierCount=this.customAlgorithm.carrierCount,e.customAlgorithm=t}if(0==this.feedbackType6Op){const t={};t.mods=this.customFeedbackType.indices,e.customFeedback=t}e.operators=t}}else if(9==this.type){e.wave=h.chipWaves[this.chipWave].name,e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let t=0;t<this.customChipWave.length;t++)e.customChipWave[t]=this.customChipWave[t]}else{if(10!=this.type)throw new Error("Unrecognized instrument type");e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modFilterTypes=[],e.modEnvelopeNumbers=[];for(let t=0;t<h.modCount;t++)e.modChannels[t]=this.modChannels[t],e.modInstruments[t]=this.modInstruments[t],e.modSettings[t]=this.modulators[t],e.modFilterTypes[t]=this.modFilterTypes[t],e.modEnvelopeNumbers[t]=this.modEnvelopeNumbers[t]}const n=[];for(let e=0;e<this.envelopeCount;e++)n.push(this.envelopes[e].toJsonObject());return e.envelopes=n,e}fromJsonObject(e,t,n,i,a,s=0,o=h.jsonFormat){null==e&&(e={});const r=o.toLowerCase();let l=h.instrumentTypeNames.indexOf(e.type);if("synthbox"==r&&"FM"==e.type&&(l=h.instrumentTypeNames.indexOf("FM6op")),-1==l&&(l=n?10:t?2:0),this.setTypeAndReset(l,t,n),this.effects&=-5,null!=e.preset&&(this.preset=e.preset>>>0),null!=e.volume?this.volume="jummbox"==r||"midbox"==r||"synthbox"==r||"goldbox"==r||"paandorasbox"==r||"ultrabox"==r||"slarmoosbox"==r||"abyssbox"==r?we(-h.volumeRange/2,h.volumeRange/2+1,0|e.volume):Math.round(25*-we(0,8,Math.round(5-(0|e.volume)/20))/7):this.volume=0,this.envelopeSpeed=null!=e.envelopeSpeed?we(0,h.modulators.dictionary["envelope speed"].maxRawVol+1,0|e.envelopeSpeed):12,null!=e.discreteEnvelope?this.discreteEnvelope=e.discreteEnvelope:this.discreteEnvelope=!1,Array.isArray(e.effects)){let t=0;for(let n=0;n<e.effects.length;n++)t|=1<<h.effectNames.indexOf(e.effects[n]);this.effects=65535&t}else{const t=["none","reverb","chorus","chorus & reverb"];this.effects=t.indexOf(e.effects),-1==this.effects&&(this.effects=2==this.type?0:1)}this.transition=h.transitions.dictionary.normal.index;const p=e.transition||e.envelope;if(null!=p){let t=h.transitions.dictionary[p];if(null==e.fadeInSeconds||null==e.fadeOutTicks){const e={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[p];null!=e&&(t=h.transitions.dictionary[e.transition],this.fadeIn=Ze.secondsToFadeInSetting(e.fadeInSeconds),this.fadeOut=Ze.ticksToFadeOutSetting(e.fadeOutTicks))}null!=t&&(this.transition=t.index),this.transition!=h.transitions.dictionary.normal.index&&(this.effects=1024|this.effects)}null!=e.slideTicks&&(this.slideTicks=e.slideTicks),null!=e.fadeInSeconds&&(this.fadeIn=Ze.secondsToFadeInSetting(+e.fadeInSeconds)),null!=e.fadeOutTicks&&(this.fadeOut=Ze.ticksToFadeOutSetting(+e.fadeOutTicks));{const t=e.chord,n={harmony:"simultaneous"},i=h.chords.dictionary[n[t]]||h.chords.dictionary[t];null!=i?this.chord=i.index:2==this.type?this.chord=h.chords.dictionary.arpeggio.index:7==this.type?this.chord=h.chords.dictionary.strum.index:0==this.type?this.chord=h.chords.dictionary.arpeggio.index:1==this.type||11==this.type?this.chord=h.chords.dictionary["custom interval"].index:this.chord=h.chords.dictionary.simultaneous.index}null!=e.strumParts&&(this.strumParts=e.strumParts),this.unison=h.unisons.dictionary.none.index;const c=e.unison||e.interval||e.chorus;if(null!=c){const e={union:"none",fifths:"fifth",octaves:"octave",error:"voiced"},t=h.unisons.dictionary[e[c]]||h.unisons.dictionary[c];null!=t&&(this.unison=t.index),"custom"==c&&(this.unison=h.unisons.length)}if(this.unisonVoices=null==e.unisonVoices?h.unisons[this.unison].voices:e.unisonVoices,this.unisonSpread=null==e.unisonSpread?h.unisons[this.unison].spread:e.unisonSpread,this.unisonOffset=null==e.unisonOffset?h.unisons[this.unison].offset:e.unisonOffset,this.unisonExpression=null==e.unisonExpression?h.unisons[this.unison].expression:e.unisonExpression,this.unisonSign=null==e.unisonSign?h.unisons[this.unison].sign:e.unisonSign,this.unisonBuzzes=null!=e.unisonBuzzes&&e.unisonBuzzes,"custom harmony"==e.chorus&&(this.unison=h.unisons.dictionary.hum.index,this.chord=h.chords.dictionary["custom interval"].index),this.chord==h.chords.dictionary.simultaneous.index||Array.isArray(e.effects)||(this.effects=2048|this.effects),null!=e.pitchShiftSemitones&&(this.pitchShift=we(0,h.pitchShiftRange,Math.round(+e.pitchShiftSemitones))),null!=e.octoff){let t=e.octoff;this.effects=128|this.effects,this.pitchShift="+1 (octave)"==t||"+2 (2 octaves)"==t?24:"+1/2 (fifth)"==t||"+1 1/2 (octave and fifth)"==t?18:"-1 (octave)"==t||"-2 (2 octaves"==t?0:"-1/2 (fifth)"==t||"-1 1/2 (octave and fifth)"==t?6:12}null!=e.detuneCents&&(this.detune=we(h.detuneMin,h.detuneMax+1,Math.round(Ze.centsToDetune(+e.detuneCents)))),this.vibrato=h.vibratos.dictionary.none.index;const u=e.vibrato||e.effect;if(null!=u){const t={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},n=h.vibratos.dictionary[t[c]]||h.vibratos.dictionary[u];null!=n?this.vibrato=n.index:"custom"==u&&(this.vibrato=h.vibratos.length),this.vibrato==h.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=h.vibratos[this.vibrato].amplitude,this.vibratoDelay=h.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=h.vibratos[this.vibrato].type),n!=h.vibratos.dictionary.none&&(this.effects=512|this.effects)}if(null!=e.pan?this.pan=we(0,h.panMax+1,Math.round(h.panCenter+(0|e.pan)*h.panCenter/100)):null!=e.ipan?this.pan=we(0,h.panMax+1,h.panCenter+-50*e.ipan):this.pan=h.panCenter,this.pan!=h.panCenter&&(this.effects=4|this.effects),null!=e.panDelay?this.panDelay=0|e.panDelay:this.panDelay=10,null!=e.detune?this.detune=we(h.detuneMin,h.detuneMax+1,0|e.detune):null==e.detuneCents&&(this.detune=h.detuneCenter),null!=e.distortion&&(this.distortion=we(0,h.distortionRange,Math.round((h.distortionRange-1)*(0|e.distortion)/100))),null!=e.bitcrusherOctave&&(this.bitcrusherFreq=h.bitcrusherFreqRange-1-+e.bitcrusherOctave/h.bitcrusherOctaveStep),null!=e.bitcrusherQuantization&&(this.bitcrusherQuantization=we(0,h.bitcrusherQuantizationRange,Math.round((h.bitcrusherQuantizationRange-1)*(0|e.bitcrusherQuantization)/100))),null!=e.ringMod&&(this.ringModulation=we(0,h.ringModRange,Math.round((h.ringModRange-1)*(0|e.ringMod)/100))),null!=e.ringModHz&&(this.ringModulationHz=we(0,h.ringModHzRange,Math.round((h.ringModHzRange-1)*(0|e.ringModHz)/100))),null!=e.invertWave&&(this.invertWave=e.invertWave),null!=e.rmWaveformIndex&&(this.rmWaveformIndex=we(0,h.operatorWaves.length,e.rmWaveformIndex)),null!=e.rmPulseWidth&&(this.rmPulseWidth=we(0,h.pulseWidthRange,Math.round((h.pulseWidthRange-1)*(0|e.rmPulseWidth)/100))),null!=e.rmHzOffset&&(this.rmHzOffset=we(0,h.rmHzOffsetMax,Math.round((h.rmHzOffsetMax-1)*(0|e.rmHzOffset)/100))),null!=e.phaserMix&&(this.phaserMix=we(0,h.phaserMixRange,Math.round((h.phaserMixRange-1)*(0|e.phaserMix)/100))),null!=e.phaserFreq&&(this.phaserFreq=we(0,h.phaserFreqRange,Math.round((h.phaserFreqRange-1)*(0|e.phaserFreq)/100))),null!=e.phaserFeedback&&(this.phaserFeedback=we(0,h.phaserFeedbackRange,Math.round((h.phaserFeedbackRange-1)*(0|e.phaserFeedback)/100))),null!=e.phaserStages&&(this.phaserStages=we(0,h.phaserMaxStages,Math.round((h.phaserMaxStages-1)*(0|e.phaserStages)/100))),null!=e.echoSustain&&(this.echoSustain=we(0,h.echoSustainRange,Math.round((h.echoSustainRange-1)*(0|e.echoSustain)/100))),null!=e.echoDelayBeats&&(this.echoDelay=we(0,h.echoDelayRange,Math.round(+e.echoDelayBeats*(h.ticksPerPart*h.partsPerBeat)/h.echoDelayStepTicks-1))),isNaN(e.chorus)||(this.chorus=we(0,h.chorusRange,Math.round((h.chorusRange-1)*(0|e.chorus)/100))),null!=e.reverb?this.reverb=we(0,h.reverbRange,Math.round((h.reverbRange-1)*(0|e.reverb)/100)):this.reverb=s,null!=e.upperNoteLimit&&(this.upperNoteLimit=e.upperNoteLimit),null!=e.lowerNoteLimit&&(this.lowerNoteLimit=e.lowerNoteLimit),null!=e.pulseWidth?this.pulseWidth=we(1,h.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=h.pulseWidthRange/2,null!=e.decimalOffset?this.decimalOffset=we(0,100,Math.round(e.decimalOffset)):this.decimalOffset=0,null!=e.dynamism?this.supersawDynamism=we(0,h.supersawDynamismMax+1,Math.round(h.supersawDynamismMax*(0|e.dynamism)/100)):this.supersawDynamism=h.supersawDynamismMax,null!=e.spread?this.supersawSpread=we(0,h.supersawSpreadMax+1,Math.round(h.supersawSpreadMax*(0|e.spread)/100)):this.supersawSpread=Math.ceil(h.supersawSpreadMax/2),null!=e.shape?this.supersawShape=we(0,h.supersawShapeMax+1,Math.round(h.supersawShapeMax*(0|e.shape)/100)):this.supersawShape=0,null!=e.harmonics){for(let t=0;t<h.harmonicsControlPoints;t++)this.harmonicsWave.harmonics[t]=Math.max(0,Math.min(h.harmonicsMax,Math.round(h.harmonicsMax*+e.harmonics[t]/100)));this.harmonicsWave.markCustomWaveDirty()}else this.harmonicsWave.reset();if(null!=e.spectrum)for(let t=0;t<h.spectrumControlPoints;t++)this.spectrumWave.spectrum[t]=Math.max(0,Math.min(h.spectrumMax,Math.round(h.spectrumMax*+e.spectrum[t]/100))),this.spectrumWave.markCustomWaveDirty();else this.spectrumWave.reset(t);null!=e.stringSustain?this.stringSustain=we(0,h.stringSustainRange,Math.round((h.stringSustainRange-1)*(0|e.stringSustain)/100)):this.stringSustain=10,this.stringSustainType=h.enableAcousticSustain?h.sustainTypeNames.indexOf(e.stringSustainType):0,-1==this.stringSustainType&&(this.stringSustainType=0),2==this.type&&(this.chipNoise=h.chipNoises.findIndex((t=>t.name==e.wave)),"pink noise"==e.wave&&(this.chipNoise=h.chipNoises.findIndex((e=>"pink"==e.name))),"brownian noise"==e.wave&&(this.chipNoise=h.chipNoises.findIndex((e=>"brownian"==e.name))),-1==this.chipNoise&&(this.chipNoise=1));const f={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},d=e=>null!=f[e]?h.envelopes.dictionary[f[e]]:h.envelopes.dictionary[e];if(4==this.type&&null!=e.drums)for(let t=0;t<h.drumCount;t++){const n=e.drums[t];if(null!=n){if(this.drumsetEnvelopes[t]=h.envelopes.dictionary["twang 2"].index,null!=n.filterEnvelope){const e=d(n.filterEnvelope);null!=e&&(this.drumsetEnvelopes[t]=e.index)}if(null!=n.spectrum)for(let e=0;e<h.spectrumControlPoints;e++)this.drumsetSpectrumWaves[t].spectrum[e]=Math.max(0,Math.min(h.spectrumMax,Math.round(h.spectrumMax*+n.spectrum[e]/100)));this.drumsetSpectrumWaves[t].markCustomWaveDirty()}}if(0==this.type){const t={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0},n={"10% pulse":22,"sunsoft bass":23,"loud pulse":24,sax:25,guitar:26,"atari bass":28,"atari pulse":29,"1% pulse":30,"curved sawtooth":31,viola:32,brass:33,"acoustic bass":34,lyre:35,"ramp pulse":36,piccolo:37,squaretooth:38,flatline:39,"pnryshk a (u5)":40,"pnryshk b (riff)":41},i={"shrill lute":42,"shrill bass":44,"nes pulse":45,"saw bass":46,euphonium:47,"shrill pulse":48,"r-sawtooth":49,recorder:50,"narrow saw":51,"deep square":52,"ring pulse":53,"double sine":54,contrabass:55,"double bass":56},a={"semi-square":63,"deep square":64,squaretal:40,"saw wide":65,"saw narrow ":66,"deep sawtooth":67,sawtal:68,pulse:69,"triple pulse":70,"high pulse":71,"deep pulse":72},s={test1:56,"pokey 4bit lfsr":57,"pokey 5step bass":58,"isolated spiky":59,"unnamed 1":60,"unnamed 2":61,"guitar string":75,intense:76,"buzz wave":77,"pokey square":57,"pokey bass":58,"banana wave":83,"test 1":84,"test 2":84,"real snare":85,"earthbound o. guitar":86},o={kick:87,snare:88,piano1:89,WOW:90,overdrive:91,trumpet:92,saxophone:93,orchestrahit:94,"detached violin":95,synth:96,sonic3snare:97,"come on":98,choir:99,overdriveguitar:100,flute:101,"legato violin":102,"tremolo violin":103,"amen break":104,"pizzicato violin":105,"tim allen grunt":106,tuba:107,loopingcymbal:108,standardkick:109,standardsnare:110,closedhihat:111,foothihat:112,openhihat:113,crashcymbal:114,pianoC4:115,"liver pad":116,marimba:117,susdotwav:118,wackyboxtts:119};this.chipWave=-1;const r=e.wave;for(const e of[t,n,i,a,s,o])if(-1==this.chipWave&&null!=e[r]&&null!=h.chipWaves[e[r]]){this.chipWave=e[r];break}if(-1==this.chipWave){const e=h.chipWaves.findIndex((e=>e.name==r));-1!=e&&(this.chipWave=e)}-1==this.chipWave&&(this.chipWave=1)}if(1==this.type||11==this.type){if(1==this.type)this.algorithm=h.algorithms.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=h.feedbacks.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType&&(this.feedbackType=0);else if(this.algorithm6Op=h.algorithms6Op.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm6Op&&(this.algorithm6Op=1),0==this.algorithm6Op?this.customAlgorithm.set(e.customAlgorithm.carrierCount,e.customAlgorithm.mods):this.customAlgorithm.fromPreset(this.algorithm6Op),this.feedbackType6Op=h.feedbacks6Op.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType6Op){let t=w([{name:"2⟲ 3⟲",indices:[[],[2],[3],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"4⟲ 5⟲",indices:[[],[],[],[4],[5],[]]},{name:"5⟲ 6⟲",indices:[[],[],[],[],[5],[6]]},{name:"1⟲ 6⟲",indices:[[1],[],[],[],[],[6]]},{name:"1⟲ 3⟲",indices:[[1],[],[3],[],[],[]]},{name:"1⟲ 4⟲",indices:[[1],[],[],[4],[],[]]},{name:"1⟲ 5⟲",indices:[[1],[],[],[],[5],[]]},{name:"4⟲ 6⟲",indices:[[],[],[],[4],[],[6]]},{name:"2⟲ 6⟲",indices:[[],[2],[],[],[],[6]]},{name:"3⟲ 6⟲",indices:[[],[],[3],[],[],[6]]},{name:"4⟲ 5⟲ 6⟲",indices:[[],[],[],[4],[5],[6]]},{name:"1⟲ 3⟲ 6⟲",indices:[[1],[],[3],[],[],[6]]},{name:"2→5",indices:[[],[],[],[],[2],[]]},{name:"2→6",indices:[[],[],[],[],[],[2]]},{name:"3→5",indices:[[],[],[],[],[3],[]]},{name:"3→6",indices:[[],[],[],[],[],[3]]},{name:"4→6",indices:[[],[],[],[],[],[4]]},{name:"5→6",indices:[[],[],[],[],[],[5]]},{name:"1→3→4",indices:[[],[],[1],[],[3],[]]},{name:"2→5→6",indices:[[],[],[],[],[2],[5]]},{name:"2→4→6",indices:[[],[],[],[2],[],[4]]},{name:"4→5→6",indices:[[],[],[],[],[4],[5]]},{name:"3→4→5→6",indices:[[],[],[],[3],[4],[5]]},{name:"2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]}]),n=t[t.findIndex((t=>t.name==e.feedbackType))].indices;null!=n?(this.feedbackType6Op=0,this.customFeedbackType.set(n)):this.feedbackType6Op=1}0==this.feedbackType6Op&&null!=e.customFeedback?this.customFeedbackType.set(e.customFeedback.mods):this.customFeedbackType.fromPreset(this.feedbackType6Op),null!=e.feedbackAmplitude?this.feedbackAmplitude=we(0,h.operatorAmplitudeMax+1,0|e.feedbackAmplitude):this.feedbackAmplitude=0;for(let t=0;t<h.operatorCount+(11==this.type?2:0);t++){const n=this.operators[t];let i;if(null!=e.operators&&(i=e.operators[t]),null==i&&(i={}),n.frequency=h.operatorFrequencies.findIndex((e=>e.name==i.frequency)),-1==n.frequency&&(n.frequency=0),null!=i.amplitude?n.amplitude=we(0,h.operatorAmplitudeMax+1,0|i.amplitude):n.amplitude=0,null!=i.waveform){if("goldbox"==r&&t>3){n.waveform=0;continue}n.waveform=h.operatorWaves.findIndex((e=>e.name==i.waveform)),-1==n.waveform&&("square"==i.waveform?(n.waveform=h.operatorWaves.dictionary["pulse width"].index,n.pulseWidth=5):"rounded"==i.waveform?n.waveform=h.operatorWaves.dictionary["quasi-sine"].index:n.waveform=0)}else n.waveform=0;null!=i.pulseWidth?n.pulseWidth=0|i.pulseWidth:n.pulseWidth=5}}else if(9==this.type){if(e.customChipWave){for(let t=0;t<64;t++)this.customChipWave[t]=e.customChipWave[t];let t=0;for(let e=0;e<this.customChipWave.length;e++)t+=this.customChipWave[e];const n=t/this.customChipWave.length;let i=0,a=0;for(let e=0;e<this.customChipWave.length;e++)i+=a,a=this.customChipWave[e]-n,this.customChipWaveIntegral[e]=i;this.customChipWaveIntegral[64]=0}}else if(10==this.type&&null!=e.modChannels)for(let t=0;t<h.modCount;t++)this.modChannels[t]=e.modChannels[t],this.modInstruments[t]=e.modInstruments[t],this.modulators[t]=e.modSettings[t],null!=e.modFilterTypes&&null!=e.modEnvelopeNumbers&&(this.modEnvelopeNumbers[t]=e.modEnvelopeNumbers[t]),this.modFilterTypes[t]=e.modFilterTypes[t];if(10!=this.type){this.chord==h.chords.dictionary.arpeggio.index&&null!=e.arpeggioSpeed?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=i?9:12,null!=e.fastTwoNoteArp?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=a,null!=e.clicklessTransition?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1,null!=e.aliases?this.aliases=e.aliases:"modbox"==r?(this.effects=8|this.effects,this.aliases=!0,this.distortion=0):this.aliases=!1,null!=e.noteFilterType&&(this.noteFilterType=e.noteFilterType),null!=e.noteSimpleCut&&(this.noteFilterSimpleCut=e.noteSimpleCut),null!=e.noteSimplePeak&&(this.noteFilterSimplePeak=e.noteSimplePeak),null!=e.noteFilter?this.noteFilter.fromJsonObject(e.noteFilter):this.noteFilter.reset();for(let t=0;t<h.filterMorphCount;t++)Array.isArray(e["noteSubFilters"+t])&&(this.noteSubFilters[t]=new Ve,this.noteSubFilters[t].fromJsonObject(e["noteSubFilters"+t]));if(null!=e.eqFilterType&&(this.eqFilterType=e.eqFilterType),null!=e.eqSimpleCut&&(this.eqFilterSimpleCut=e.eqSimpleCut),null!=e.eqSimplePeak&&(this.eqFilterSimplePeak=e.eqSimplePeak),Array.isArray(e.eqFilter))this.eqFilter.fromJsonObject(e.eqFilter);else{this.eqFilter.reset();const t={},n=8e3,i=11,a=8;if(null!=e.filterCutoffHz?t.filterCutoff=we(0,i,Math.round(i-1+2*Math.log((0|e.filterCutoffHz)/n)/Math.LN2)):t.filterCutoff=0==this.type?6:10,null!=e.filterResonance?t.filterResonance=we(0,a,Math.round((a-1)*(0|e.filterResonance)/100)):t.filterResonance=0,t.filterEnvelope=d(e.filterEnvelope),t.pulseEnvelope=d(e.pulseEnvelope),t.feedbackEnvelope=d(e.feedbackEnvelope),Array.isArray(e.operators)){t.operatorEnvelopes=[];for(let n=0;n<h.operatorCount+(11==this.type?2:0);n++){let i;null!=e.operators[n]&&(i=d(e.operators[n].envelope)),t.operatorEnvelopes[n]=null!=i?i:h.envelopes.dictionary.none}}if(null!=e.filter){const n=[10,6,3,0,8,5,2],i=["none","none","none","none","decay 1","decay 2","decay 3"],a=["none","bright","medium","soft","decay bright","decay medium","decay soft"],s={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let o=null!=s[e.filter]?s[e.filter]:a.indexOf(e.filter);-1==o&&(o=0),t.filterCutoff=n[o],t.filterEnvelope=d(i[o]),t.filterResonance=0}this.convertLegacySettings(t,!0)}for(let t=0;t<h.filterMorphCount;t++)Array.isArray(e["eqSubFilters"+t])&&(this.eqSubFilters[t]=new Ve,this.eqSubFilters[t].fromJsonObject(e["eqSubFilters"+t]));if(Array.isArray(e.envelopes)){const t=e.envelopes;for(let n=0;n<t.length&&!(this.envelopeCount>=h.maxEnvelopeCount);n++){const i=new $e(this.isNoiseInstrument);let a,s,o;i.fromJsonObject(t[n],r),a=null!=e.pitchEnvelopeStart&&null!=e.pitchEnvelopeStart?e.pitchEnvelopeStart:null!=e["pitchEnvelopeStart"+n]&&null!=e["pitchEnvelopeStart"+n]?e["pitchEnvelopeStart"+n]:i.pitchEnvelopeStart,s=null!=e.pitchEnvelopeEnd&&null!=e.pitchEnvelopeEnd?e.pitchEnvelopeEnd:null!=e["pitchEnvelopeEnd"+n]&&null!=e["pitchEnvelopeEnd"+n]?e["pitchEnvelopeEnd"+n]:i.pitchEnvelopeEnd,o=null!=e["envelopeInverse"+n]&&null!=e["envelopeInverse"+n]?e["envelopeInverse"+n]:null!=e.pitchEnvelopeInverse&&null!=e.pitchEnvelopeInverse&&"pitch"==h.envelopes[i.envelope].name?e.pitchEnvelopeInverse:i.inverse,this.addEnvelope(i.target,i.index,i.envelope,!0,a,s,o,i.perEnvelopeSpeed,i.perEnvelopeLowerBound,i.perEnvelopeUpperBound,i.steps,i.seed,i.waveform)}}}0===l&&(null!=e.isUsingAdvancedLoopControls?(this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset):(this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=h.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0))}getLargestControlPointCount(e){let t;if(e){t=this.noteFilter.controlPointCount;for(let e=0;e<h.filterMorphCount;e++)null!=this.noteSubFilters[e]&&this.noteSubFilters[e].controlPointCount>t&&(t=this.noteSubFilters[e].controlPointCount)}else{t=this.eqFilter.controlPointCount;for(let e=0;e<h.filterMorphCount;e++)null!=this.eqSubFilters[e]&&this.eqSubFilters[e].controlPointCount>t&&(t=this.eqSubFilters[e].controlPointCount)}return t}static frequencyFromPitch(e){return 440*Math.pow(2,(e-69)/12)}addEnvelope(e,t,n,i,a=0,s=-1,o=!1,r=-1,l=0,p=1,c=2,u=2,f=0){s=-1!=s?s:this.isNoiseInstrument?h.drumCount-1:h.maxPitch,r=-1!=r?r:i?1:h.envelopes[n].speed;let d=!1;if(this.supportsEnvelopeTarget(e,t)||(d=!0),this.envelopeCount>=h.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new $e(this.isNoiseInstrument);const m=this.envelopes[this.envelopeCount];m.target=d?h.instrumentAutomationTargets.dictionary.none.index:e,m.index=d?0:t,m.envelope=i?n:we(0,h.newEnvelopes.length,h.envelopes[n].type),m.pitchEnvelopeStart=a,m.pitchEnvelopeEnd=s,m.inverse=o,m.perEnvelopeSpeed=r,m.perEnvelopeLowerBound=l,m.perEnvelopeUpperBound=p,m.steps=c,m.seed=u,m.waveform=f,this.envelopeCount++}supportsEnvelopeTarget(e,t){const n=h.instrumentAutomationTargets[e];if(null==n.computeIndex&&"none"!=n.name)return!1;if(t>=n.maxCount)return!1;if(null!=n.compatibleInstruments&&-1==n.compatibleInstruments.indexOf(this.type))return!1;if(null!=n.effect&&0==(this.effects&1<<n.effect))return!1;if(n.isFilter){let e=this.noteFilter.controlPointCount;if(this.noteFilterType&&(e=1),t>=e)return!1}return"operatorFrequency"!=n.name&&"operatorAmplitude"!=n.name||!(t>=4+(11==this.type?2:0))}clearInvalidEnvelopeTargets(){for(let e=0;e<this.envelopeCount;e++){const t=this.envelopes[e].target,n=this.envelopes[e].index;this.supportsEnvelopeTarget(t,n)||(this.envelopes[e].target=h.instrumentAutomationTargets.dictionary.none.index,this.envelopes[e].index=0)}}getTransition(){return S(this.effects)?h.transitions[this.transition]:10==this.type?h.transitions.dictionary.interrupt:h.transitions.dictionary.normal}getFadeInSeconds(){return 4==this.type?0:Ze.fadeInSettingToSeconds(this.fadeIn)}getFadeOutTicks(){return 4==this.type?h.drumsetFadeOutTicks:Ze.fadeOutSettingToTicks(this.fadeOut)}getChord(){return x(this.effects)?h.chords[this.chord]:h.chords.dictionary.simultaneous}getDrumsetEnvelope(e){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return h.envelopes[this.drumsetEnvelopes[e]]}}class je{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1,this.name=""}}class Qe{constructor(e){this.scaleCustom=[],this.loopType=1,this.channels=[],this.limitDecay=4,this.limitRise=4e3,this.compressionThreshold=1,this.limitThreshold=1,this.compressionRatio=1,this.limitRatio=1,this.masterGain=1,this.inVolumeCap=0,this.outVolumeCap=0,this.eqFilter=new Ve,this.eqFilterType=!1,this.eqFilterSimpleCut=h.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.eqSubFilters=[],this.getNewNoteVolume=(e,t,n,i)=>{if(e&&null!=t&&null!=n&&null!=i){i=h.modCount-i-1;let e=h.modulators[this.channels[t].instruments[n].modulators[i]].newNoteVol,a=h.modulators.dictionary.tempo.index;return this.channels[t].instruments[n].modulators[i]==a&&(e=this.tempo-h.modulators[a].convertRealFactor),null!=e?e:6}return 6},this.getVolumeCap=(e,t,n,i)=>{if(e&&null!=t&&null!=n&&null!=i){i=h.modCount-i-1;let e=this.channels[t].instruments[n],a=h.modulators[e.modulators[i]],s=a.maxRawVol;return null!=s?("eq filter"!=a.name&&"note filter"!=a.name||(s=h.filterMorphCount-1,e.modFilterTypes[i]>0&&e.modFilterTypes[i]%2?s=h.filterFreqRange:e.modFilterTypes[i]>0&&(s=h.filterGainRange)),s):6}return 6},this.getVolumeCapForSetting=(e,t,n)=>{if(e){let e=h.modulators[t].maxRawVol;return null!=e?(null==n||"eq filter"!=h.modulators[t].name&&"note filter"!=h.modulators[t].name||(e=h.filterMorphCount-1,n>0&&n%2?e=h.filterFreqRange:n>0&&(e=h.filterGainRange)),e):h.noteSizeMax}return h.noteSizeMax},null!=e?this.fromBase64String(e):this.initToDefault(!0)}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?h.layeredInstrumentCountMax:h.instrumentCountMin,this.patternInstruments?h.patternInstrumentCountMax:h.instrumentCountMin)}getMaxInstrumentsPerPattern(e){return this.getMaxInstrumentsPerPatternForChannel(this.channels[e])}getMaxInstrumentsPerPatternForChannel(e){return this.layeredInstruments?Math.min(h.layeredInstrumentCountMax,e.instruments.length):1}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}initToDefault(e=!0){if(this.scale=0,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.octave=0,this.loopStart=0,this.loopLength=4,this.tempo=120,this.loopType=1,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=3,this.layeredInstruments=!1,this.patternInstruments=!1,this.title="Untitled",this.author="",this.description="",this.showSongDetails=!1,document.title=this.title+" - "+ne.versionDisplayName,this.setSongTheme="none",e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=1;for(let e=0;e<this.getChannelCount();e++){const t=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,n=e>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=e&&(this.channels[e]=new je);const i=this.channels[e];i.octave=Math.max(3-e,0);for(let e=0;e<this.patternsPerChannel;e++)i.patterns.length<=e?i.patterns[e]=new Oe:i.patterns[e].reset();i.patterns.length=this.patternsPerChannel;for(let e=0;e<h.instrumentCountMin;e++)i.instruments.length<=e&&(i.instruments[e]=new Ue(t,n)),i.instruments[e].setTypeAndReset(n?10:t?2:0,t,n);i.instruments.length=h.instrumentCountMin;for(let e=0;e<this.barCount;e++)i.bars[e]=e<4?1:0;i.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let e,t=[];t.push(Qe.I),t.push(Te[Qe.H]),t.push(78);var n=encodeURIComponent(this.title);t.push(Te[n.length>>6],Te[63&n.length]);for(let e=0;e<n.length;e++)t.push(n.charCodeAt(e));var i=encodeURIComponent(this.author);t.push(Te[i.length>>6],Te[63&i.length]);for(let e=0;e<i.length;e++)t.push(i.charCodeAt(e));var a=encodeURIComponent(this.description);t.push(Te[a.length>>6],Te[63&a.length]);for(let e=0;e<a.length;e++)t.push(a.charCodeAt(e));t.push(Te[this.showSongDetails?1:0]),t.push(89);var s=encodeURIComponent(this.setSongTheme);t.push(Te[s.length>>6],Te[63&s.length]);for(let e=0;e<s.length;e++)t.push(s.charCodeAt(e));if(t.push(110,Te[this.pitchChannelCount],Te[this.noiseChannelCount],Te[this.modChannelCount]),t.push(115,Te[this.scale]),this.scale==h.scales.dictionary.Custom.index)for(var o=1;o<h.pitchesPerOctave;o++)t.push(Te[this.scaleCustom[o]?1:0]);t.push(107,Te[this.key],Te[this.octave-h.octaveMin]),t.push(108,Te[this.loopStart>>6],Te[63&this.loopStart]),t.push(101,Te[this.loopLength-1>>6],Te[this.loopLength-1&63]),t.push(116,Te[this.tempo>>6],Te[63&this.tempo]),t.push(97,Te[this.beatsPerBar-1]),t.push(103,Te[this.barCount-1>>6],Te[this.barCount-1&63]),t.push(106,Te[this.patternsPerChannel-1>>6],Te[this.patternsPerChannel-1&63]),t.push(114,Te[this.rhythm]),t.push(90,Te[this.loopType]),t.push(79),1!=this.compressionRatio||1!=this.limitRatio||4e3!=this.limitRise||4!=this.limitDecay||1!=this.limitThreshold||1!=this.compressionThreshold||1!=this.masterGain?(t.push(Te[Math.round(this.compressionRatio<1?10*this.compressionRatio:10+60*(this.compressionRatio-1))]),t.push(Te[Math.round(this.limitRatio<1?10*this.limitRatio:9+this.limitRatio)]),t.push(Te[this.limitDecay]),t.push(Te[Math.round((this.limitRise-2e3)/250)]),t.push(Te[Math.round(20*this.compressionThreshold)]),t.push(Te[Math.round(20*this.limitThreshold)]),t.push(Te[Math.round(50*this.masterGain)>>6],Te[63&Math.round(50*this.masterGain)])):t.push(Te[63]),t.push(85);for(let e=0;e<this.getChannelCount();e++){var r=encodeURIComponent(this.channels[e].name);t.push(Te[r.length>>6],Te[63&r.length]);for(let e=0;e<r.length;e++)t.push(r.charCodeAt(e))}if(t.push(105,Te[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let e=0;e<this.getChannelCount();e++)t.push(Te[this.channels[e].instruments.length-h.instrumentCountMin]);t.push(111);for(let e=0;e<this.pitchChannelCount;e++)t.push(Te[this.channels[e].octave]);for(let e=0;e<this.getChannelCount();e++)for(let n=0;n<this.channels[e].instruments.length;n++){const i=this.channels[e].instruments[n];if(t.push(84,Te[i.type]),t.push(118,Te[i.volume+h.volumeRange/2>>6],Te[i.volume+h.volumeRange/2&63]),t.push(117,Te[i.preset>>6],Te[63&i.preset]),t.push(102),t.push(Te[+i.eqFilterType]),i.eqFilterType)t.push(Te[i.eqFilterSimpleCut]),t.push(Te[i.eqFilterSimplePeak]);else{if(null==i.eqFilter)t.push(Te[0]),console.log("Null EQ filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+n);else{t.push(Te[i.eqFilter.controlPointCount]);for(let e=0;e<i.eqFilter.controlPointCount;e++){const n=i.eqFilter.controlPoints[e];t.push(Te[n.type],Te[Math.round(n.freq)],Te[Math.round(n.gain)])}}let a=0;for(let e=0;e<h.filterMorphCount-1;e++)a|=+(null!=i.eqSubFilters[e+1])<<e;t.push(Te[a>>6],Te[63&a]);for(let e=0;e<h.filterMorphCount-1;e++)if(a&1<<e){t.push(Te[i.eqSubFilters[e+1].controlPointCount]);for(let n=0;n<i.eqSubFilters[e+1].controlPointCount;n++){const a=i.eqSubFilters[e+1].controlPoints[n];t.push(Te[a.type],Te[Math.round(a.freq)],Te[Math.round(a.gain)])}}}if(t.push(113,Te[i.effects>>>30&63],Te[i.effects>>>24&63],Te[i.effects>>>18&63],Te[i.effects>>>12&63],Te[i.effects>>>6&63],Te[i.effects>>>0&63]),q(i.effects))if(t.push(Te[+i.noteFilterType]),i.noteFilterType)t.push(Te[i.noteFilterSimpleCut]),t.push(Te[i.noteFilterSimplePeak]);else{if(null==i.noteFilter)t.push(Te[0]),console.log("Null note filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+n);else{t.push(Te[i.noteFilter.controlPointCount]);for(let e=0;e<i.noteFilter.controlPointCount;e++){const n=i.noteFilter.controlPoints[e];t.push(Te[n.type],Te[Math.round(n.freq)],Te[Math.round(n.gain)])}}let a=0;for(let e=0;e<h.filterMorphCount-1;e++)a|=+(null!=i.noteSubFilters[e+1])<<e;t.push(Te[a>>6],Te[63&a]);for(let e=0;e<h.filterMorphCount-1;e++)if(a&1<<e){t.push(Te[i.noteSubFilters[e+1].controlPointCount]);for(let n=0;n<i.noteSubFilters[e+1].controlPointCount;n++){const a=i.noteSubFilters[e+1].controlPoints[n];t.push(Te[a.type],Te[Math.round(a.freq)],Te[Math.round(a.gain)])}}}if(S(i.effects)&&(t.push(Te[i.transition]),1==h.transitions[i.transition].slides&&t.push(Te[i.slideTicks])),x(i.effects)&&(t.push(Te[i.chord]),1==h.chords[i.chord].arpeggiates?(t.push(Te[i.arpeggioSpeed]),t.push(Te[+i.fastTwoNoteArp])):h.chords[i.chord].strumParts>0&&t.push(Te[i.strumParts])),k(i.effects)&&t.push(Te[i.pitchShift]),M(i.effects)&&t.push(Te[i.detune-h.detuneMin>>6],Te[i.detune-h.detuneMin&63]),F(i.effects)&&(t.push(Te[i.vibrato]),i.vibrato==h.vibratos.length&&(t.push(Te[Math.round(25*i.vibratoDepth)]),t.push(Te[i.vibratoSpeed]),t.push(Te[Math.round(i.vibratoDelay)]),t.push(Te[i.vibratoType]))),P(i.effects)&&(t.push(Te[i.distortion]),t.push(Te[+i.aliases])),D(i.effects)&&(t.push(Te[i.ringModulation]),t.push(Te[i.ringModulationHz]),t.push(Te[i.rmWaveformIndex]),t.push(Te[i.rmPulseWidth>>6],Te[63&i.rmPulseWidth]),t.push(Te[i.rmHzOffset-h.rmHzOffsetMin>>6],Te[i.rmHzOffset-h.rmHzOffsetMin&63])),O(i.effects)&&(t.push(Te[i.phaserFreq]),t.push(Te[i.phaserFeedback]),t.push(Te[i.phaserStages]),t.push(Te[i.phaserMix])),L(i.effects)&&t.push(Te[+i.invertWave]),T(i.effects)&&t.push(Te[i.bitcrusherFreq],Te[i.bitcrusherQuantization]),z(i.effects)&&(t.push(Te[i.pan>>6],Te[63&i.pan]),t.push(Te[i.panDelay])),I(i.effects)&&t.push(Te[i.chorus]),C(i.effects)&&t.push(Te[i.echoSustain],Te[i.echoDelay]),H(i.effects)&&t.push(Te[i.reverb]),G(i.effects)&&(t.push(Te[i.upperNoteLimit>>6],Te[63&i.upperNoteLimit]),t.push(Te[i.lowerNoteLimit>>6],Te[63&i.lowerNoteLimit])),4!=i.type&&(t.push(100,Te[i.fadeIn],Te[i.fadeOut]),t.push(Te[+i.clicklessTransition])),5==i.type||7==i.type){t.push(72);const e=new Ce;for(let t=0;t<h.harmonicsControlPoints;t++)e.write(h.harmonicsControlPointBits,i.harmonicsWave.harmonics[t]);e.encodeBase64(t)}if(0==i.type){t.push(119,Te[i.chipWave%63],Te[Math.floor(i.chipWave/63)]),t.push(104,Te[i.unison]),i.unison==h.unisons.length&&qe(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign,i.unisonBuzzes),t.push(121);const e=we(0,32,i.chipWaveLoopMode)<<1|(i.isUsingAdvancedLoopControls?1:0);t.push(Te[e]);const n=we(0,32,0)<<1|(i.chipWavePlayBackwards?1:0);t.push(Te[n]),Me(t,i.chipWaveLoopStart),Me(t,i.chipWaveLoopEnd),Me(t,i.chipWaveStartOffset)}else if(1==i.type||11==i.type){if(1==i.type)t.push(65,Te[i.algorithm]),t.push(70,Te[i.feedbackType]);else{if(t.push(65,Te[i.algorithm6Op]),0==i.algorithm6Op){t.push(67,Te[i.customAlgorithm.carrierCount]),t.push(113);for(let e=0;e<i.customAlgorithm.modulatedBy.length;e++){for(let n=0;n<i.customAlgorithm.modulatedBy[e].length;n++)t.push(Te[i.customAlgorithm.modulatedBy[e][n]]);t.push(82)}t.push(113)}if(t.push(70,Te[i.feedbackType6Op]),0==i.feedbackType6Op){t.push(113);for(let e=0;e<i.customFeedbackType.indices.length;e++){for(let n=0;n<i.customFeedbackType.indices[e].length;n++)t.push(Te[i.customFeedbackType.indices[e][n]]);t.push(82)}t.push(113)}}t.push(66,Te[i.feedbackAmplitude]),t.push(81);for(let e=0;e<(11==i.type?6:h.operatorCount);e++)t.push(Te[i.operators[e].frequency]);t.push(80);for(let e=0;e<(11==i.type?6:h.operatorCount);e++)t.push(Te[i.operators[e].amplitude]);t.push(82);for(let e=0;e<(11==i.type?6:h.operatorCount);e++)t.push(Te[i.operators[e].waveform]),2==i.operators[e].waveform&&t.push(Te[i.operators[e].pulseWidth])}else if(9==i.type){t.push(119,Te[i.chipWave%63],Te[Math.floor(i.chipWave/63)]),t.push(104,Te[i.unison]),i.unison==h.unisons.length&&qe(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign,i.unisonBuzzes),t.push(77);for(let e=0;e<64;e++)t.push(Te[i.customChipWave[e]+24])}else if(2==i.type)t.push(119,Te[i.chipNoise]),t.push(104,Te[i.unison]),i.unison==h.unisons.length&&qe(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign,i.unisonBuzzes);else if(3==i.type){t.push(83);const e=new Ce;for(let t=0;t<h.spectrumControlPoints;t++)e.write(h.spectrumControlPointBits,i.spectrumWave.spectrum[t]);e.encodeBase64(t),t.push(104,Te[i.unison]),i.unison==h.unisons.length&&qe(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign,i.unisonBuzzes)}else if(4==i.type){t.push(122);for(let e=0;e<h.drumCount;e++)t.push(Te[i.drumsetEnvelopes[e]]);t.push(83);const e=new Ce;for(let t=0;t<h.drumCount;t++)for(let n=0;n<h.spectrumControlPoints;n++)e.write(h.spectrumControlPointBits,i.drumsetSpectrumWaves[t].spectrum[n]);e.encodeBase64(t)}else if(5==i.type)t.push(104,Te[i.unison]),i.unison==h.unisons.length&&qe(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign,i.unisonBuzzes);else if(6==i.type)t.push(87,Te[i.pulseWidth>>6],Te[63&i.pulseWidth]),t.push(Te[i.decimalOffset>>6],Te[63&i.decimalOffset]),t.push(104,Te[i.unison]),i.unison==h.unisons.length&&qe(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign,i.unisonBuzzes);else if(8==i.type)t.push(120,Te[i.supersawDynamism],Te[i.supersawSpread],Te[i.supersawShape]),t.push(87,Te[i.pulseWidth>>6],Te[63&i.pulseWidth]),t.push(Te[i.decimalOffset>>6],Te[63&i.decimalOffset]);else if(7==i.type){if(h.stringSustainRange>32)throw new Error("Not enough bits to represent sustain value and type in same base64 character.");t.push(104,Te[i.unison]),i.unison==h.unisons.length&&qe(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign,i.unisonBuzzes),t.push(73,Te[i.stringSustain|i.stringSustainType<<5])}else if(10!=i.type)throw new Error("Unknown instrument type.");t.push(69,Te[i.envelopeCount]),t.push(Te[i.envelopeSpeed]),t.push(Te[+i.discreteEnvelope]);for(let e=0;e<i.envelopeCount;e++)t.push(Te[i.envelopes[e].target]),h.instrumentAutomationTargets[i.envelopes[e].target].maxCount>1&&t.push(Te[i.envelopes[e].index]),t.push(Te[i.envelopes[e].envelope]),"pitch"==h.newEnvelopes[i.envelopes[e].envelope].name?i.isNoiseInstrument?(t.push(Te[i.envelopes[e].pitchEnvelopeStart]),t.push(Te[i.envelopes[e].pitchEnvelopeEnd])):(t.push(Te[i.envelopes[e].pitchEnvelopeStart>>6],Te[63&i.envelopes[e].pitchEnvelopeStart]),t.push(Te[i.envelopes[e].pitchEnvelopeEnd>>6],Te[63&i.envelopes[e].pitchEnvelopeEnd])):"random"==h.newEnvelopes[i.envelopes[e].envelope].name?(t.push(Te[i.envelopes[e].steps]),t.push(Te[i.envelopes[e].seed]),t.push(Te[i.envelopes[e].waveform])):"lfo"==h.newEnvelopes[i.envelopes[e].envelope].name&&(t.push(Te[i.envelopes[e].waveform]),5!=i.envelopes[e].waveform&&6!=i.envelopes[e].waveform||t.push(Te[i.envelopes[e].steps])),t.push(Te[+i.envelopes[e].inverse]?Te[+i.envelopes[e].inverse]:Te[0]),"pitch"!=h.newEnvelopes[i.envelopes[e].envelope].name&&"note size"!=h.newEnvelopes[i.envelopes[e].envelope].name&&"punch"!=h.newEnvelopes[i.envelopes[e].envelope].name&&"none"!=h.newEnvelopes[i.envelopes[e].envelope].name&&t.push(Te[h.perEnvelopeSpeedToIndices[i.envelopes[e].perEnvelopeSpeed]]),t.push(Te[10*i.envelopes[e].perEnvelopeLowerBound]),t.push(Te[10*i.envelopes[e].perEnvelopeUpperBound])}t.push(98),e=new Ce;let l=0;for(;1<<l<this.patternsPerChannel+1;)l++;for(let t=0;t<this.getChannelCount();t++)for(let n=0;n<this.barCount;n++)e.write(l,this.channels[t].bars[n]);e.encodeBase64(t),t.push(112),e=new Ce;const p=new Ce,c=Qe.getNeededBits(h.noteSizeMax);for(let t=0;t<this.getChannelCount();t++){const n=this.channels[t],i=this.getMaxInstrumentsPerPattern(t),a=this.getChannelIsNoise(t),s=this.getChannelIsMod(t),o=Qe.getNeededBits(i-h.instrumentCountMin),r=Qe.getNeededBits(n.instruments.length-1);if(s){const i=Qe.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let a=0;a<n.instruments.length;a++){let n=this.channels[t].instruments[a];for(let t=0;t<h.modCount;t++){const a=n.modChannels[t],s=n.modInstruments[t],o=n.modulators[t],r=n.modFilterTypes[t],l=n.modEnvelopeNumbers[t];let p=h.modulators[o].forSong?2:0;o==h.modulators.dictionary.none.index&&(p=3),e.write(2,p),0!=p&&1!=p||(e.write(8,a),e.write(i,s)),3!=p&&e.write(6,o),"eq filter"!=h.modulators[n.modulators[t]].name&&"note filter"!=h.modulators[n.modulators[t]].name||e.write(6,r),"individual envelope speed"==h.modulators[n.modulators[t]].name&&e.write(6,l)}}}const l=a||s?0:n.octave*h.pitchesPerOctave;let u=a?4:l;const f=s?[0,1,2,3,4,5]:a?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],d=[];for(let e=0;e<f.length;e++)f[e]+=l;for(const t of n.patterns){if(this.patternInstruments){const n=Se(h.instrumentCountMin,i,t.instruments.length);e.write(o,n-h.instrumentCountMin);for(let i=0;i<n;i++)e.write(r,t.instruments[i])}if(t.notes.length>0){e.write(1,1);let n=0;for(const i of t.notes){i.start<n&&s&&(e.write(2,0),e.write(1,1),e.writePartDuration(n-i.start)),i.start>n&&(e.write(2,0),s&&e.write(1,0),e.writePartDuration(i.start-n)),p.clear(),1==i.pitches.length?p.write(1,0):(p.write(1,1),p.write(3,i.pitches.length-2)),p.writePinCount(i.pins.length-1),s?p.write(9,i.pins[0].size):p.write(c,i.pins[0].size);let t=0,a=i.pitches[0],o=a;const r=[];for(let e=1;e<i.pins.length;e++){const n=i.pins[e],l=a+n.interval;o!=l?(p.write(1,1),r.push(l),o=l):p.write(1,0),p.writePartDuration(n.time-t),t=n.time,s?p.write(9,n.size):p.write(c,n.size)}const l=String.fromCharCode.apply(null,p.encodeBase64([])),h=d.indexOf(l);-1==h?(e.write(2,1),e.concat(p)):(e.write(1,1),e.writeLongTail(0,0,h),d.splice(h,1)),d.unshift(l),d.length>10&&d.pop();const m=i.pitches.concat(r);for(let t=0;t<m.length;t++){const n=m[t],a=f.indexOf(n);if(-1==a){let t=0,i=u;if(i<n)for(;i!=n;)i++,-1==f.indexOf(i)&&t++;else for(;i!=n;)i--,-1==f.indexOf(i)&&t--;e.write(1,0),e.writePitchInterval(t)}else e.write(1,1),e.write(4,a),f.splice(a,1);f.unshift(n),f.length>16&&f.pop(),u=t==i.pitches.length-1?i.pitches[0]:n}0==i.start&&e.write(1,i.continuesLastPattern?1:0),n=i.end}n<this.beatsPerBar*h.partsPerBeat+ +s&&(e.write(2,0),s&&e.write(1,0),e.writePartDuration(this.beatsPerBar*h.partsPerBeat+ +s-n))}else e.write(1,0)}}let u=e.lengthBase64(),f=[];for(;u>0;)f.unshift(Te[63&u]),u>>=6;t.push(Te[f.length]),Array.prototype.push.apply(t,f),e.encodeBase64(t);const d=64e3;let m="";if(null!=ne.customSamples&&ne.customSamples.length>0&&(m="|"+ne.customSamples.join("|")),t.length<d)return String.fromCharCode.apply(null,t)+m;{let e="";for(let n=0;n<t.length;n+=d)e+=String.fromCharCode.apply(null,t.slice(n,n+d));return e+m}}static O(e){return 0==e?e=1:1==e&&(e=0),h.envelopes[we(0,h.envelopes.length,e)]}fromBase64String(e,t="auto"){if(null==e||""==e)return Qe.L(),void this.initToDefault(!0);let n=0;for(;e.charCodeAt(n)<=32;)n++;if(35==e.charCodeAt(n)&&n++,123==e.charCodeAt(n))return void this.fromJsonObject(JSON.parse(0==n?e:e.substring(n)),t);const s=e.charCodeAt(n);let r=!1,l=!1,c=!1,u=!1,f=!1,d=!1;106==s?(l=!0,n++):103==s?(c=!0,n++):117==s?(u=!0,n++):115==s?(d=!0,n++):97==s?(f=!0,n++):r=!0;const m=ze[e.charCodeAt(n++)];if(r&&(-1==m||m>Qe.R||m<Qe.N))return;if(l&&(-1==m||m>Qe.W||m<Qe.V))return;if(c&&(-1==m||m>Qe.$||m<Qe.U))return;if(u&&(-1==m||m>Qe.j||m<Qe._))return;if(d&&(-1==m||m>Qe.K||m<Qe.J))return;if(f&&(-1==m||m>Qe.H||m<Qe.X))return;const y=m<2,g=m<3,v=m<4,b=m<5,E=m<6,A=m<7,R=m<8,N=m<9;this.initToDefault(r&&N||l&&b||v&&c);const B=r&&N||l&&b;let W=!1;if(u||c||f||d){var V=(e=e.replaceAll("%7C","|")).split("|");if(e=V.shift(),null==ne.customSamples||ne.customSamples.join(", ")!=V.join(", ")){Qe.Y();let e=!1,t=!1,n=!1;const s=[],r=[];i.statusTable={},i.urlTable={},i.totalSamples=0,i.samplesLoaded=0,i.samplesFailed=0,o.dispatchEvent(new a(i.totalSamples,i.samplesLoaded,i.samplesFailed));for(const a of V)if("legacysamples"===a.toLowerCase())e||(e=!0,s.push(a),p(0));else if("nintariboxsamples"===a.toLowerCase())t||(t=!0,s.push(a),p(1));else if("mariopaintboxsamples"===a.toLowerCase())n||(n=!0,s.push(a),p(2));else{const e=u&&g;if(!Qe.Z(a,s,r,i,e))continue}if(s.length>0&&(ne.customSamples=s),r.length>0){const e=w(r);ne.presetCategories[ne.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:ne.presetCategories.length}}}}if(g&&r){for(const e of this.channels)e.instruments[0].transition=h.transitions.dictionary.interrupt.index,e.instruments[0].effects|=1024;this.channels[3].instruments[0].chipNoise=0}let $=null;if(r&&N||l&&b||v&&c){$=[];for(let e=$.length;e<this.getChannelCount();e++){$[e]=[];for(let t=0;t<h.instrumentCountMin;t++)$[e][t]={}}}let U,j=0,Q=0,_=-1,K=!1,J=!1;for(;n<e.length;)switch(U=e.charCodeAt(n++)){case 78:var X=(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)];if(this.title=decodeURIComponent(e.substring(n,n+X)),document.title=""!=this.title?this.title+" - "+ne.versionDisplayName:ne.versionDisplayName,n+=X,u&&!E||f&&!g){var Y=(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)];this.author=decodeURIComponent(e.substring(n,n+Y)),n+=Y;var Z=(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)];this.description=decodeURIComponent(e.substring(n,n+Z)),n+=Z,this.showSongDetails=1==ze[e.charCodeAt(n++)]}break;case 89:var ee=(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)];this.setSongTheme=decodeURIComponent(e.substring(n,n+ee)),n+=ee;break;case 110:this.pitchChannelCount=ze[e.charCodeAt(n++)],this.noiseChannelCount=ze[e.charCodeAt(n++)],this.modChannelCount=r||l&&y?0:ze[e.charCodeAt(n++)],this.pitchChannelCount=Se(h.pitchChannelCountMin,h.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=Se(h.noiseChannelCountMin,h.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=Se(h.modChannelCountMin,h.modChannelCountMax,this.modChannelCount);for(let e=this.channels.length;e<this.getChannelCount();e++)this.channels[e]=new je;if(this.channels.length=this.getChannelCount(),r&&N||l&&b||v&&c)for(let e=$.length;e<this.getChannelCount();e++){$[e]=[];for(let t=0;t<h.instrumentCountMin;t++)$[e][t]={}}break;case 115:if(this.scale=we(0,h.scales.length,ze[e.charCodeAt(n++)]),this.scale==h.scales.dictionary.Custom.index)for(var te=1;te<h.pitchesPerOctave;te++)this.scaleCustom[te]=1==ze[e.charCodeAt(n++)];r&&(this.scale=0);break;case 107:if(A&&r)this.key=we(0,h.keys.length,11-ze[e.charCodeAt(n++)]),this.octave=0;else if(r||l)this.key=we(0,h.keys.length,ze[e.charCodeAt(n++)]),this.octave=0;else if(c||g&&u){const t=ze[e.charCodeAt(n++)],[i,a]=Pe(t);this.key=i,this.octave=a}else this.key=we(0,h.keys.length,ze[e.charCodeAt(n++)]),this.octave=we(h.octaveMin,h.octaveMax+1,ze[e.charCodeAt(n++)]+h.octaveMin);break;case 108:this.loopStart=b&&r?ze[e.charCodeAt(n++)]:(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)];break;case 101:this.loopLength=b&&r?ze[e.charCodeAt(n++)]:(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]+1;break;case 116:this.tempo=v&&r?[95,120,151,190][ze[e.charCodeAt(n++)]]:A&&r?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][ze[e.charCodeAt(n++)]]:ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)],this.tempo=we(h.tempoMin,h.tempoMax+1,this.tempo);break;case 90:this.loopType=ze[e.charCodeAt(n++)];break;case 109:N&&r?(j=12*ze[e.charCodeAt(n++)],j=we(0,h.reverbRange,j)):(l&&b||v&&c)&&(j=ze[e.charCodeAt(n++)],j=we(0,h.reverbRange,j));break;case 97:this.beatsPerBar=g&&r?[6,7,8,9,10][ze[e.charCodeAt(n++)]]:ze[e.charCodeAt(n++)]+1,this.beatsPerBar=Math.max(h.beatsPerBarMin,Math.min(h.beatsPerBarMax,this.beatsPerBar));break;case 103:{const t=(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]+1;this.barCount=Se(h.barCountMin,h.barCountMax,t);for(let e=0;e<this.getChannelCount();e++){for(let t=this.channels[e].bars.length;t<this.barCount;t++)this.channels[e].bars[t]=t<4?1:0;this.channels[e].bars.length=this.barCount}}break;case 106:{let t;t=R&&r?ze[e.charCodeAt(n++)]+1:(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]+1,this.patternsPerChannel=Se(1,h.barCountMax,t);const i=this.getChannelCount();for(let e=0;e<i;e++){const t=this.channels[e].patterns;for(let e=t.length;e<this.patternsPerChannel;e++)t[e]=new Oe;t.length=this.patternsPerChannel}}break;case 105:if(N&&r||l&&b||v&&c){const t=Se(h.instrumentCountMin,h.patternInstrumentCountMax,ze[e.charCodeAt(n++)]+h.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=t>1;for(let e=0;e<this.getChannelCount();e++){const n=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,i=e>=this.pitchChannelCount+this.noiseChannelCount;for(let a=this.channels[e].instruments.length;a<t;a++)this.channels[e].instruments[a]=new Ue(n,i);if(this.channels[e].instruments.length=t,E&&r)for(let a=0;a<t;a++)this.channels[e].instruments[a].setTypeAndReset(n?2:0,n,i);for(let n=$[e].length;n<t;n++)$[e][n]={}}}else{const t=ze[e.charCodeAt(n++)];this.layeredInstruments=0!=(2&t),this.patternInstruments=0!=(1&t);for(let t=0;t<this.getChannelCount();t++){let i=1;(this.layeredInstruments||this.patternInstruments)&&(i=Se(h.instrumentCountMin,this.getMaxInstrumentsPerChannel(),ze[e.charCodeAt(n++)]+h.instrumentCountMin));const a=this.channels[t],s=this.getChannelIsNoise(t),o=this.getChannelIsMod(t);for(let e=a.instruments.length;e<i;e++)a.instruments[e]=new Ue(s,o);a.instruments.length=i}}break;case 114:if(u||f||d)this.rhythm=ze[e.charCodeAt(n++)];else{let t=ze[e.charCodeAt(n++)];this.rhythm=we(0,h.rhythms.length,t+2),(l&&g||r)&&(this.rhythm!=h.rhythms.dictionary["÷3 (triplets)"].index&&this.rhythm!=h.rhythms.dictionary["÷6 (sextuplets)"].index||(K=!0),this.rhythm>=h.rhythms.dictionary["÷6 (sextuplets)"].index&&(J=!0))}break;case 111:if(g&&r){const t=ze[e.charCodeAt(n++)];this.channels[t].octave=we(0,h.pitchOctaves,ze[e.charCodeAt(n++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0)}else if(N&&r||l&&b||v&&c)for(let t=0;t<this.getChannelCount();t++)this.channels[t].octave=we(0,h.pitchOctaves,ze[e.charCodeAt(n++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0);else{for(let t=0;t<this.pitchChannelCount;t++)this.channels[t].octave=we(0,h.pitchOctaves,ze[e.charCodeAt(n++)]);for(let e=this.pitchChannelCount;e<this.getChannelCount();e++)this.channels[e].octave=0}break;case 84:{_++,_>=this.channels[Q].instruments.length&&(Q++,_=0),Se(0,this.channels.length-1,Q);const t=this.channels[Q].instruments[_];let i=Se(0,11,ze[e.charCodeAt(n++)]);l&&b||v&&c?7!=i&&8!=i||(i+=2):(l&&E||c&&!v||u&&b)&&(8!=i&&9!=i&&10!=i||(i+=1)),t.setTypeAndReset(i,Q>=this.pitchChannelCount&&Q<this.pitchChannelCount+this.noiseChannelCount,Q>=this.pitchChannelCount+this.noiseChannelCount),!(A&&r||y&&l)||0!=i&&9!=i&&6!=i||(t.aliases=!0,t.distortion=0,t.effects|=8),K&&(t.arpeggioSpeed=9),J&&(t.fastTwoNoteArp=!0),A&&r&&t.chord!=h.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 117:{const t=ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)];this.channels[Q].instruments[_].preset=t,l&&b||v&&c?7==this.channels[Q].instruments[_].preset&&(this.channels[Q].instruments[_].preset=9,this.channels[Q].instruments[_].type=9):(l&&E||u&&b)&&(8==this.channels[Q].instruments[_].preset&&(this.channels[Q].instruments[_].preset=9,this.channels[Q].instruments[_].type=9),10==this.channels[Q].instruments[_].preset&&(this.channels[Q].instruments[_].preset=11,this.channels[Q].instruments[_].type=11)),r&&t==ne.nameToPresetValue("grand piano 1")&&(this.channels[Q].instruments[_].preset=ne.nameToPresetValue("grand piano 3"))}break;case 119:if(g&&r){const t=[1,2,3,4,5,6,7,8,0],i=ze[e.charCodeAt(n++)],a=this.channels[i].instruments[0];a.chipWave=we(0,h.chipWaves.length,0|t[ze[e.charCodeAt(n++)]]),a.convertLegacySettings($[i][0],B)}else if(E&&r){const t=[1,2,3,4,5,6,7,8,0];for(let i=0;i<this.getChannelCount();i++)for(const a of this.channels[i].instruments)i>=this.pitchChannelCount?a.chipNoise=we(0,h.chipNoises.length,ze[e.charCodeAt(n++)]):a.chipWave=we(0,h.chipWaves.length,0|t[ze[e.charCodeAt(n++)]])}else if(A&&r){const t=[1,2,3,4,5,6,7,8,0];Q>=this.pitchChannelCount?this.channels[Q].instruments[_].chipNoise=we(0,h.chipNoises.length,ze[e.charCodeAt(n++)]):this.channels[Q].instruments[_].chipWave=we(0,h.chipWaves.length,0|t[ze[e.charCodeAt(n++)]])}else{const t=this.channels[Q].instruments[_];if(2==t.type)t.chipWave=we(0,h.chipWaves.length,ze[e.charCodeAt(n++)]);else if(u||f||d)if(u&&E||f&&g){const i=ze[e.charCodeAt(n++)],a=ze[e.charCodeAt(n++)];t.chipWave=3==a?i+186:2==a?i+124:1==a?i+62:i,64==t.chipWave?t.chipWave=52:t.chipWave>64&&(t.chipWave-=1),t.chipWave=we(0,h.chipWaves.length,t.chipWave)}else t.chipWave=we(0,h.chipWaves.length,ze[e.charCodeAt(n++)]+63*ze[e.charCodeAt(n++)]);else this.channels[Q].instruments[_].chipWave=we(0,h.chipWaves.length,ze[e.charCodeAt(n++)])}break;case 102:if(N&&r||b&&l||v&&c)if(A&&r){const t=[10,6,3,0,8,5,2],i=["none","none","none","none","decay 1","decay 2","decay 3"];if(g&&r){const a=ze[e.charCodeAt(n++)],s=this.channels[a].instruments[0],o=$[a][0],r=[1,3,4,5][we(0,t.length,ze[e.charCodeAt(n++)])];o.filterCutoff=t[r],o.filterResonance=0,o.filterEnvelope=h.envelopes.dictionary[i[r]],s.convertLegacySettings(o,B)}else if(E&&r)for(let a=0;a<this.getChannelCount();a++)for(let s=0;s<this.channels[a].instruments.length;s++){const o=this.channels[a].instruments[s],r=$[a][s],l=we(0,t.length,ze[e.charCodeAt(n++)]+1);a<this.pitchChannelCount?(r.filterCutoff=t[l],r.filterResonance=0,r.filterEnvelope=h.envelopes.dictionary[i[l]]):(r.filterCutoff=10,r.filterResonance=0,r.filterEnvelope=h.envelopes.dictionary.none),o.convertLegacySettings(r,B)}else{const a=we(0,t.length,ze[e.charCodeAt(n++)]),s=this.channels[Q].instruments[_],o=$[Q][_];o.filterCutoff=t[a],o.filterResonance=0,o.filterEnvelope=h.envelopes.dictionary[i[a]],s.convertLegacySettings(o,B)}}else{const t=11,i=this.channels[Q].instruments[_],a=$[Q][_];a.filterCutoff=we(0,t,ze[e.charCodeAt(n++)]),i.convertLegacySettings(a,B)}else{const t=this.channels[Q].instruments[_];let i=ze[e.charCodeAt(n++)];if(r||0==i){t.eqFilterType=!1,(l||c||u||f||d)&&(i=ze[e.charCodeAt(n++)]);const a=i;t.eqFilter.controlPointCount=we(0,h.filterMaxPoints+1,a);for(let e=t.eqFilter.controlPoints.length;e<t.eqFilter.controlPointCount;e++)t.eqFilter.controlPoints[e]=new We;for(let i=0;i<t.eqFilter.controlPointCount;i++){const a=t.eqFilter.controlPoints[i];a.type=we(0,3,ze[e.charCodeAt(n++)]),a.freq=we(0,h.filterFreqRange,ze[e.charCodeAt(n++)]),a.gain=we(0,h.filterGainRange,ze[e.charCodeAt(n++)])}for(let e=t.eqFilter.controlPointCount;e<a;e++)n+=3;if(t.eqSubFilters[0]=t.eqFilter,l&&!b||c&&!v||u||f||d){let i=ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)];for(let a=0;a<h.filterMorphCount-1;a++)if(i&1<<a){const i=ze[e.charCodeAt(n++)];null==t.eqSubFilters[a+1]&&(t.eqSubFilters[a+1]=new Ve),t.eqSubFilters[a+1].controlPointCount=we(0,h.filterMaxPoints+1,i);for(let e=t.eqSubFilters[a+1].controlPoints.length;e<t.eqSubFilters[a+1].controlPointCount;e++)t.eqSubFilters[a+1].controlPoints[e]=new We;for(let i=0;i<t.eqSubFilters[a+1].controlPointCount;i++){const s=t.eqSubFilters[a+1].controlPoints[i];s.type=we(0,3,ze[e.charCodeAt(n++)]),s.freq=we(0,h.filterFreqRange,ze[e.charCodeAt(n++)]),s.gain=we(0,h.filterGainRange,ze[e.charCodeAt(n++)])}for(let e=t.eqSubFilters[a+1].controlPointCount;e<i;e++)n+=3}}}else t.eqFilterType=!0,t.eqFilterSimpleCut=we(0,h.filterSimpleCutRange,ze[e.charCodeAt(n++)]),t.eqFilterSimplePeak=we(0,h.filterSimplePeakRange,ze[e.charCodeAt(n++)])}break;case 121:if(u||f||d)if(u&&g){const t=Fe(e,n);n+=6;const i=e.slice(n,n+t);n+=t;const a=JSON.parse(atob(i));for(const e of a){const t=e.channel,n=e.instrument,i=e.info,a=this.channels[t].instruments[n];a.isUsingAdvancedLoopControls=i.isUsingAdvancedLoopControls,a.chipWaveLoopStart=i.chipWaveLoopStart,a.chipWaveLoopEnd=i.chipWaveLoopEnd,a.chipWaveLoopMode=i.chipWaveLoopMode,a.chipWavePlayBackwards=i.chipWavePlayBackwards,a.chipWaveStartOffset=i.chipWaveStartOffset}}else{const t=ze[e.charCodeAt(n++)],i=Boolean(1&t),a=t>>1,s=ze[e.charCodeAt(n++)],o=Boolean(1&s),r=Fe(e,n);n+=6;const l=Fe(e,n);n+=6;const p=Fe(e,n);n+=6;const h=this.channels[Q].instruments[_];h.isUsingAdvancedLoopControls=i,h.chipWaveLoopStart=r,h.chipWaveLoopEnd=l,h.chipWaveLoopMode=a,h.chipWavePlayBackwards=o,h.chipWaveStartOffset=p}else if(c&&!v&&E)"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(W||(W=!0,h.willReloadForCustomSamples=!0,ne.customSamples=["legacySamples"],p(0))),this.channels[Q].instruments[_].chipWave=we(0,h.chipWaves.length,ze[e.charCodeAt(n++)]+125);else if(N&&r||l&&b||v&&c){const t=8,i=this.channels[Q].instruments[_],a=$[Q][_];a.filterResonance=we(0,t,ze[e.charCodeAt(n++)]),i.convertLegacySettings(a,B)}break;case 122:{const t=this.channels[Q].instruments[_],i=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(N&&r||b&&l||v&&c)if(4==t.type)for(let a=0;a<h.drumCount;a++){let s=ze[e.charCodeAt(n++)];(y&&c||!c&&!u&&!f&&!d)&&(s=i[s]),t.drumsetEnvelopes[a]=Qe.O(s).index}else{const a=$[Q][_];let s=ze[e.charCodeAt(n++)];(y&&c||!c&&!u&&!f&&!d)&&(s=i[s]),a.filterEnvelope=Qe.O(s),t.convertLegacySettings(a,B)}else for(let a=0;a<h.drumCount;a++){let s=ze[e.charCodeAt(n++)];(y&&c||!c&&!u&&!f&&!d)&&(s=i[s]),t.drumsetEnvelopes[a]=we(0,h.envelopes.length,s)}}break;case 87:{const t=this.channels[Q].instruments[_];if(t.pulseWidth=f&&!g?we(0,101,ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)]):r?Math.round(Math.pow(.5,(7-t.pulseWidth)*h.pulseWidthStepPower)*h.pulseWidthRange):we(0,h.pulseWidthRange/2+ +l+1,ze[e.charCodeAt(n++)]),N&&r||b&&l||v&&c){const i=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],a=$[Q][_];let s=ze[e.charCodeAt(n++)];(y&&c||!c&&!u&&!f&&!d)&&(s=i[s]),a.pulseEnvelope=Qe.O(s),t.convertLegacySettings(a,B)}(u&&!v||f||d)&&(t.decimalOffset=we(0,100,(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]))}break;case 73:{const t=this.channels[Q].instruments[_],i=ze[e.charCodeAt(n++)];t.stringSustain=we(0,h.stringSustainRange,31&i),t.stringSustainType=h.enableAcousticSustain?we(0,2,i>>5):0}break;case 100:if(N&&r||l&&b||v&&c){const t=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(g&&r){const i=ze[e.charCodeAt(n++)],a=t[we(0,t.length,ze[e.charCodeAt(n++)])],s=this.channels[i].instruments[0];s.fadeIn=Ze.secondsToFadeInSetting(a.fadeInSeconds),s.fadeOut=Ze.ticksToFadeOutSetting(a.fadeOutTicks),s.transition=h.transitions.dictionary[a.transition].index,s.transition!=h.transitions.dictionary.normal.index&&(s.effects|=1024)}else if(E&&r)for(let i=0;i<this.getChannelCount();i++)for(const a of this.channels[i].instruments){const i=t[we(0,t.length,ze[e.charCodeAt(n++)])];a.fadeIn=Ze.secondsToFadeInSetting(i.fadeInSeconds),a.fadeOut=Ze.ticksToFadeOutSetting(i.fadeOutTicks),a.transition=h.transitions.dictionary[i.transition].index,a.transition!=h.transitions.dictionary.normal.index&&(a.effects|=1024)}else if(v&&!c&&!u&&!f&&!d||r){const i=t[we(0,t.length,ze[e.charCodeAt(n++)])],a=this.channels[Q].instruments[_];a.fadeIn=Ze.secondsToFadeInSetting(i.fadeInSeconds),a.fadeOut=Ze.ticksToFadeOutSetting(i.fadeOutTicks),a.transition=h.transitions.dictionary[i.transition].index,a.transition!=h.transitions.dictionary.normal.index&&(a.effects|=1024)}else{const i=t[we(0,t.length,ze[e.charCodeAt(n++)])],a=this.channels[Q].instruments[_];a.fadeIn=Ze.secondsToFadeInSetting(i.fadeInSeconds),a.fadeOut=Ze.ticksToFadeOutSetting(i.fadeOutTicks),a.transition=h.transitions.dictionary[i.transition].index,ze[e.charCodeAt(n++)]>0&&(a.legacyTieOver=!0),a.clicklessTransition=!!ze[e.charCodeAt(n++)],(a.transition!=h.transitions.dictionary.normal.index||a.clicklessTransition)&&(a.effects|=1024)}}else{const t=this.channels[Q].instruments[_];t.fadeIn=we(0,h.fadeInRange,ze[e.charCodeAt(n++)]),t.fadeOut=we(0,h.fadeOutTicks.length,ze[e.charCodeAt(n++)]),r||(t.clicklessTransition=!!ze[e.charCodeAt(n++)])}break;case 99:if(N&&r||l&&b||v&&c)if(A&&r)if(g&&r){const t=[0,3,2,0],i=["none","none","none","tremolo2"],a=ze[e.charCodeAt(n++)],s=we(0,t.length,ze[e.charCodeAt(n++)]),o=this.channels[a].instruments[0],r=$[a][0];o.vibrato=t[s],null!=r.filterEnvelope&&0!=r.filterEnvelope.type||(r.filterEnvelope=h.envelopes.dictionary[i[s]],o.convertLegacySettings(r,B)),o.vibrato!=h.vibratos.dictionary.none.index&&(o.effects|=512)}else if(E&&r){const t=[0,1,2,3,0,0],i=["none","none","none","none","tremolo5","tremolo2"];for(let a=0;a<this.getChannelCount();a++)for(let s=0;s<this.channels[a].instruments.length;s++){const o=we(0,t.length,ze[e.charCodeAt(n++)]),r=this.channels[a].instruments[s],p=$[a][s];r.vibrato=t[o],null!=p.filterEnvelope&&0!=p.filterEnvelope.type||(p.filterEnvelope=h.envelopes.dictionary[i[o]],r.convertLegacySettings(p,B)),r.vibrato!=h.vibratos.dictionary.none.index&&(r.effects|=512),(0!=j||l&&b||v&&c)&&!this.getChannelIsNoise(a)&&(r.effects|=1,r.reverb=j)}}else{const t=[0,1,2,3,0,0],i=["none","none","none","none","tremolo5","tremolo2"],a=we(0,t.length,ze[e.charCodeAt(n++)]),s=this.channels[Q].instruments[_],o=$[Q][_];s.vibrato=t[a],null!=o.filterEnvelope&&0!=o.filterEnvelope.type||(o.filterEnvelope=h.envelopes.dictionary[i[a]],s.convertLegacySettings(o,B)),s.vibrato!=h.vibratos.dictionary.none.index&&(s.effects|=512),(0!=j||l&&b||v&&c)&&(s.effects|=1,s.reverb=j)}else{const t=this.channels[Q].instruments[_],i=we(0,h.vibratos.length+1,ze[e.charCodeAt(n++)]);t.vibrato=i,t.vibrato!=h.vibratos.dictionary.none.index&&(t.effects|=512),i==h.vibratos.length?(t.vibratoDepth=we(0,h.modulators.dictionary["vibrato depth"].maxRawVol+1,ze[e.charCodeAt(n++)])/50,t.vibratoSpeed=we(0,h.modulators.dictionary["vibrato speed"].maxRawVol+1,ze[e.charCodeAt(n++)]),t.vibratoDelay=we(0,h.modulators.dictionary["vibrato delay"].maxRawVol+1,ze[e.charCodeAt(n++)])/2,t.vibratoType=we(0,h.vibratoTypes.length,ze[e.charCodeAt(n++)]),t.effects|=512):(t.vibratoDepth=h.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=h.vibratos[t.vibrato].delayTicks/2,t.vibratoType=h.vibratos[t.vibrato].type)}break;case 71:if(l&&b||v&&c){const t=this.channels[Q].instruments[_];t.arpeggioSpeed=we(0,h.modulators.dictionary["arp speed"].maxRawVol+1,ze[e.charCodeAt(n++)]),t.fastTwoNoteArp=!!ze[e.charCodeAt(n++)]}break;case 104:{if(g&&r){const t=ze[e.charCodeAt(n++)];this.channels[t].instruments[0].unison=we(0,h.unisons.length,ze[e.charCodeAt(n++)]);const i=this.channels[t].instruments[0];i.unisonVoices=h.unisons[i.unison].voices,i.unisonSpread=h.unisons[i.unison].spread,i.unisonOffset=h.unisons[i.unison].offset,i.unisonExpression=h.unisons[i.unison].expression,i.unisonSign=h.unisons[i.unison].sign}else if(E&&r)for(let t=0;t<this.getChannelCount();t++)for(const i of this.channels[t].instruments){const t=ze[e.charCodeAt(n++)];let a=we(0,h.unisons.length,t);8==t&&(a=2,i.chord=3),i.unison=a,i.unisonVoices=h.unisons[i.unison].voices,i.unisonSpread=h.unisons[i.unison].spread,i.unisonOffset=h.unisons[i.unison].offset,i.unisonExpression=h.unisons[i.unison].expression,i.unisonSign=h.unisons[i.unison].sign}else if(A&&r){const t=ze[e.charCodeAt(n++)];let i=we(0,h.unisons.length,t);8==t&&(i=2,this.channels[Q].instruments[_].chord=3),this.channels[Q].instruments[_].unison=i;const a=this.channels[Q].instruments[_];a.unisonVoices=h.unisons[a.unison].voices,a.unisonSpread=h.unisons[a.unison].spread,a.unisonOffset=h.unisons[a.unison].offset,a.unisonExpression=h.unisons[a.unison].expression,a.unisonSign=h.unisons[a.unison].sign}else this.channels[Q].instruments[_].unison=we(0,h.unisons.length+1,ze[e.charCodeAt(n++)]);const t=this.channels[Q].instruments[_];if((u&&!v||f||d)&&t.unison==h.unisons.length){t.unisonVoices=ze[e.charCodeAt(n++)];const i=ze[e.charCodeAt(n++)],a=ze[e.charCodeAt(n++)]+63*(ze[e.charCodeAt(n++)]+63*ze[e.charCodeAt(n++)]),s=ze[e.charCodeAt(n++)],o=ze[e.charCodeAt(n++)]+63*(ze[e.charCodeAt(n++)]+63*ze[e.charCodeAt(n++)]),r=ze[e.charCodeAt(n++)],l=ze[e.charCodeAt(n++)]+63*ze[e.charCodeAt(n++)],p=ze[e.charCodeAt(n++)],h=ze[e.charCodeAt(n++)]+63*ze[e.charCodeAt(n++)];t.unisonSpread=a/1e3,0==i&&(t.unisonSpread*=-1),t.unisonOffset=o/1e3,0==s&&(t.unisonOffset*=-1),t.unisonExpression=l/1e3,0==r&&(t.unisonExpression*=-1),t.unisonSign=h/1e3,0==p&&(t.unisonSign*=-1),t.unisonBuzzes=!!ze[e.charCodeAt(n++)]}else t.unisonVoices=h.unisons[t.unison].voices,t.unisonSpread=h.unisons[t.unison].spread,t.unisonOffset=h.unisons[t.unison].offset,t.unisonExpression=h.unisons[t.unison].expression,t.unisonSign=h.unisons[t.unison].sign,t.unisonBuzzes=!1}break;case 67:if(N&&r||l&&b||v&&c){const t=this.channels[Q].instruments[_];t.chord=we(0,h.chords.length,ze[e.charCodeAt(n++)]),t.chord!=h.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 113:{const t=this.channels[Q].instruments[_];if(N&&r||l&&b||v&&c){t.effects=65535&ze[e.charCodeAt(n++)],0!=j||l&&b||v&&c?H(t.effects)&&(t.reverb=j):t.effects&=-2,t.effects|=4,t.vibrato!=h.vibratos.dictionary.none.index&&(t.effects|=512),t.detune!=h.detuneCenter&&(t.effects|=256),t.aliases?t.effects|=8:t.effects&=-9;const i=$[Q][_];t.convertLegacySettings(i,B)}else{if(t.effects=f&&!y||f&&!g||u&&!E?(ze[e.charCodeAt(n++)]<<30|ze[e.charCodeAt(n++)]<<24|ze[e.charCodeAt(n++)]<<18|ze[e.charCodeAt(n++)]<<12|ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)]<<0)>>>0:ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)],q(t.effects)){let i=ze[e.charCodeAt(n++)];if(r||0==i){t.noteFilterType=!1,r||(i=ze[e.charCodeAt(n++)]),t.noteFilter.controlPointCount=we(0,h.filterMaxPoints+1,i);for(let e=t.noteFilter.controlPoints.length;e<t.noteFilter.controlPointCount;e++)t.noteFilter.controlPoints[e]=new We;for(let i=0;i<t.noteFilter.controlPointCount;i++){const a=t.noteFilter.controlPoints[i];a.type=we(0,3,ze[e.charCodeAt(n++)]),a.freq=we(0,h.filterFreqRange,ze[e.charCodeAt(n++)]),a.gain=we(0,h.filterGainRange,ze[e.charCodeAt(n++)])}for(let e=t.noteFilter.controlPointCount;e<i;e++)n+=3;if(t.noteSubFilters[0]=t.noteFilter,l&&!b||c||u||f||d){let i=ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)];for(let a=0;a<h.filterMorphCount-1;a++)if(i&1<<a){const i=ze[e.charCodeAt(n++)];null==t.noteSubFilters[a+1]&&(t.noteSubFilters[a+1]=new Ve),t.noteSubFilters[a+1].controlPointCount=we(0,h.filterMaxPoints+1,i);for(let e=t.noteSubFilters[a+1].controlPoints.length;e<t.noteSubFilters[a+1].controlPointCount;e++)t.noteSubFilters[a+1].controlPoints[e]=new We;for(let i=0;i<t.noteSubFilters[a+1].controlPointCount;i++){const s=t.noteSubFilters[a+1].controlPoints[i];s.type=we(0,3,ze[e.charCodeAt(n++)]),s.freq=we(0,h.filterFreqRange,ze[e.charCodeAt(n++)]),s.gain=we(0,h.filterGainRange,ze[e.charCodeAt(n++)])}for(let e=t.noteSubFilters[a+1].controlPointCount;e<i;e++)n+=3}}}else t.noteFilterType=!0,t.noteFilter.reset(),t.noteFilterSimpleCut=we(0,h.filterSimpleCutRange,ze[e.charCodeAt(n++)]),t.noteFilterSimplePeak=we(0,h.filterSimplePeakRange,ze[e.charCodeAt(n++)])}S(t.effects)&&(t.transition=we(0,h.transitions.length,ze[e.charCodeAt(n++)]),(u&&!E||f&&!g)&&1==h.transitions[t.transition].slides&&(t.slideTicks=ze[e.charCodeAt(n++)])),x(t.effects)&&(t.chord=we(0,h.chords.length,ze[e.charCodeAt(n++)]),1!=h.chords[t.chord].arpeggiates||r?h.chords[t.chord].strumParts>0&&(u&&!E||f&&!g)&&(t.strumParts=ze[e.charCodeAt(n++)]):(t.arpeggioSpeed=ze[e.charCodeAt(n++)],t.fastTwoNoteArp=!!ze[e.charCodeAt(n++)])),k(t.effects)&&(t.pitchShift=we(0,h.pitchShiftRange,ze[e.charCodeAt(n++)])),M(t.effects)&&(r?(t.detune=we(h.detuneMin,h.detuneMax+1,ze[e.charCodeAt(n++)]),t.detune=Math.round((t.detune-9)*(Math.abs(t.detune-9)+1)/2+h.detuneCenter)):t.detune=we(h.detuneMin,h.detuneMax+1,(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)])),F(t.effects)&&(t.vibrato=we(0,h.vibratos.length+1,ze[e.charCodeAt(n++)]),t.vibrato!=h.vibratos.length||r?(t.vibratoDepth=h.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=h.vibratos[t.vibrato].delayTicks/2,t.vibratoType=h.vibratos[t.vibrato].type):(t.vibratoDepth=we(0,h.modulators.dictionary["vibrato depth"].maxRawVol+1,ze[e.charCodeAt(n++)])/25,t.vibratoSpeed=we(0,h.modulators.dictionary["vibrato speed"].maxRawVol+1,ze[e.charCodeAt(n++)]),t.vibratoDelay=we(0,h.modulators.dictionary["vibrato delay"].maxRawVol+1,ze[e.charCodeAt(n++)]),t.vibratoType=we(0,h.vibratoTypes.length,ze[e.charCodeAt(n++)]))),P(t.effects)&&(t.distortion=we(0,h.distortionRange,ze[e.charCodeAt(n++)]),(l&&!b||c||u||f||d)&&(t.aliases=!!ze[e.charCodeAt(n++)])),D(t.effects)&&(t.ringModulation=we(0,h.ringModRange,ze[e.charCodeAt(n++)]),t.ringModulationHz=we(0,h.ringModHzRange,ze[e.charCodeAt(n++)]),t.rmWaveformIndex=we(0,h.operatorWaves.length,ze[e.charCodeAt(n++)]),f&&g?t.rmPulseWidth=we(0,h.pulseWidthRange,ze[e.charCodeAt(n++)]):(t.rmPulseWidth=we(0,h.pulseWidthRange,(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]),t.rmHzOffset=we(h.rmHzOffsetMin,h.rmHzOffsetMax+1,(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]))),O(t.effects)&&(t.phaserFreq=we(0,h.phaserFreqRange,ze[e.charCodeAt(n++)]),t.phaserFeedback=we(0,h.phaserFeedbackRange,ze[e.charCodeAt(n++)]),t.phaserStages=we(0,h.phaserMaxStages+1,ze[e.charCodeAt(n++)]),t.phaserMix=we(0,h.phaserMixRange,ze[e.charCodeAt(n++)])),L(t.effects)&&(t.invertWave=!!ze[e.charCodeAt(n++)]),T(t.effects)&&(t.bitcrusherFreq=we(0,h.bitcrusherFreqRange,ze[e.charCodeAt(n++)]),t.bitcrusherQuantization=we(0,h.bitcrusherQuantizationRange,ze[e.charCodeAt(n++)])),z(t.effects)&&(t.pan=we(0,h.panMax+1,r?Math.round(ze[e.charCodeAt(n++)]*(h.panMax/8)):(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]),(l&&!y||c||u||f||d)&&(t.panDelay=ze[e.charCodeAt(n++)])),I(t.effects)&&(t.chorus=r?2*we(0,h.chorusRange/2+1,ze[e.charCodeAt(n++)]):we(0,h.chorusRange,ze[e.charCodeAt(n++)])),C(t.effects)&&(t.echoSustain=we(0,h.echoSustainRange,ze[e.charCodeAt(n++)]),t.echoDelay=we(0,h.echoDelayRange,ze[e.charCodeAt(n++)])),H(t.effects)&&(t.reverb=we(0,h.reverbRange,r?Math.round(ze[e.charCodeAt(n++)]*h.reverbRange/3):ze[e.charCodeAt(n++)])),G(t.effects)&&(t.upperNoteLimit=(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)],t.lowerNoteLimit=(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)])}t.effects&=65535}break;case 118:if(g&&r){const t=ze[e.charCodeAt(n++)];this.channels[t].instruments[0].volume=Math.round(we(-h.volumeRange/2,1,5*-ze[e.charCodeAt(n++)]))}else if(E&&r)for(let t=0;t<this.getChannelCount();t++)for(const i of this.channels[t].instruments)i.volume=Math.round(we(-h.volumeRange/2,1,5*-ze[e.charCodeAt(n++)]));else if(A&&r){this.channels[Q].instruments[_].volume=Math.round(we(-h.volumeRange/2,1,5*-ze[e.charCodeAt(n++)]))}else if(r){this.channels[Q].instruments[_].volume=Math.round(we(-h.volumeRange/2,1,25*-ze[e.charCodeAt(n++)]/7))}else{this.channels[Q].instruments[_].volume=Math.round(we(-h.volumeRange/2,h.volumeRange/2+1,(ze[e.charCodeAt(n++)]<<6|ze[e.charCodeAt(n++)])-h.volumeRange/2))}break;case 76:if(N&&r){this.channels[Q].instruments[_].pan=we(0,h.panMax+1,ze[e.charCodeAt(n++)]*(h.panMax/8))}else if(l&&b||v&&c){const t=this.channels[Q].instruments[_];t.pan=we(0,h.panMax+1,(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]),(l&&!g||c||u||f||d)&&(t.panDelay=ze[e.charCodeAt(n++)])}break;case 68:{const t=this.channels[Q].instruments[_];(l&&b||v&&c)&&(t.detune=we(h.detuneMin,h.detuneMax+1,4*((ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)])),t.effects|=256)}break;case 77:{let t=this.channels[Q].instruments[_];for(let i=0;i<64;i++)t.customChipWave[i]=we(-24,25,ze[e.charCodeAt(n++)]-24);let i=0;for(let e=0;e<t.customChipWave.length;e++)i+=t.customChipWave[e];const a=i/t.customChipWave.length;let s=0,o=0;for(let e=0;e<t.customChipWave.length;e++)s+=o,o=t.customChipWave[e]-a,t.customChipWaveIntegral[e]=s;t.customChipWaveIntegral[64]=0}break;case 79:{let t=ze[e.charCodeAt(n++)];63==t?this.restoreLimiterDefaults():(this.compressionRatio=t<10?t/10:1+(t-10)/60,t=ze[e.charCodeAt(n++)],this.limitRatio=t<10?t/10:t-9,this.limitDecay=ze[e.charCodeAt(n++)],this.limitRise=250*ze[e.charCodeAt(n++)]+2e3,this.compressionThreshold=ze[e.charCodeAt(n++)]/20,this.limitThreshold=ze[e.charCodeAt(n++)]/20,this.masterGain=((ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)])/50)}break;case 85:for(let t=0;t<this.getChannelCount();t++){var ie;ie=!v||c||u||f||d?(ze[e.charCodeAt(n++)]<<6)+ze[e.charCodeAt(n++)]:ze[e.charCodeAt(n++)],this.channels[t].name=decodeURIComponent(e.substring(n,n+ie)),n+=ie}break;case 65:{const t=this.channels[Q].instruments[_];if(1==t.type)t.algorithm=we(0,h.algorithms.length,ze[e.charCodeAt(n++)]);else if(t.algorithm6Op=we(0,h.algorithms6Op.length,ze[e.charCodeAt(n++)]),t.customAlgorithm.fromPreset(t.algorithm6Op),67==e.charCodeAt(n)){let i=we(1,h.operatorCount+2+1,ze[e.charCodeAt(n+1)]);n++;let a=[];if(113==e.charCodeAt(n+1)){n++;let s=0;for(n++;113!=e.charCodeAt(n);){a[s]=[];let t=0;for(;82!=e.charCodeAt(n);)a[s][t]=we(1,h.operatorCount+3,ze[e.charCodeAt(n)]),t++,n++;s++,n++}t.customAlgorithm.set(i,a),n++}}if(N&&r||b&&l||v&&c){const e=$[Q][_];t.convertLegacySettings(e,B)}}break;case 120:if(c&&!v&&E){const t=ze[e.charCodeAt(n++)];t+62>85&&"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(W||(W=!0,h.willReloadForCustomSamples=!0,ne.customSamples=["legacySamples"],p(0))),this.channels[Q].instruments[_].chipWave=t+62>78?we(0,h.chipWaves.length,t+63):t+62>67?we(0,h.chipWaves.length,t+61):t+62==67?40:we(0,h.chipWaves.length,t+62)}else{const t=this.channels[Q].instruments[_];t.supersawDynamism=we(0,h.supersawDynamismMax+1,ze[e.charCodeAt(n++)]),t.supersawSpread=we(0,h.supersawSpreadMax+1,ze[e.charCodeAt(n++)]),t.supersawShape=we(0,h.supersawShapeMax+1,ze[e.charCodeAt(n++)])}break;case 70:{const t=this.channels[Q].instruments[_];if(1==t.type)t.feedbackType=we(0,h.feedbacks.length,ze[e.charCodeAt(n++)]);else{t.feedbackType6Op=we(0,h.feedbacks6Op.length,ze[e.charCodeAt(n++)]),t.customFeedbackType.fromPreset(t.feedbackType6Op);let i=[];if(113==e.charCodeAt(n)){let a=0;for(n++;113!=e.charCodeAt(n);){i[a]=[];let t=0;for(;82!=e.charCodeAt(n);)i[a][t]=we(1,h.operatorCount+2,ze[e.charCodeAt(n)]),t++,n++;a++,n++}t.customFeedbackType.set(i),n++}}}break;case 66:this.channels[Q].instruments[_].feedbackAmplitude=we(0,h.operatorAmplitudeMax+1,ze[e.charCodeAt(n++)]);break;case 86:if(N&&r||b&&l||v&&c){const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],i=this.channels[Q].instruments[_],a=$[Q][_];let s=ze[e.charCodeAt(n++)];(y&&c||!c&&!u&&!f&&!d)&&(s=t[s]),a.feedbackEnvelope=Qe.O(ze[s]),i.convertLegacySettings(a,B)}break;case 81:{const t=this.channels[Q].instruments[_];if(g&&c){const i=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let a=0;a<(11==t.type?6:h.operatorCount);a++)t.operators[a].frequency=i[we(0,i.length,ze[e.charCodeAt(n++)])]}else if(c||u||f||d)for(let i=0;i<(11==t.type?6:h.operatorCount);i++)t.operators[i].frequency=we(0,h.operatorFrequencies.length,ze[e.charCodeAt(n++)]);else{const i=[4,5,6,7,8,10,12,13,14,15,16,18,20,23,27,2,1,9,17,19,21,23,0,3];for(let a=0;a<(11==t.type?6:h.operatorCount);a++)t.operators[a].frequency=i[we(0,i.length,ze[e.charCodeAt(n++)])]}}break;case 80:{const t=this.channels[Q].instruments[_];for(let i=0;i<(11==t.type?6:h.operatorCount);i++)t.operators[i].amplitude=we(0,h.operatorAmplitudeMax+1,ze[e.charCodeAt(n++)])}break;case 69:{const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],i=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,58,59,60],a=[0,1,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,12,13,13,13,13,13,11,11,11,8,8,8,9,9,9,8,8,8,9,9,9,8,9,8,14,14,14],s=this.channels[Q].instruments[_];if(N&&r||b&&l||v&&c){const a=$[Q][_];a.operatorEnvelopes=[];for(let o=0;o<(11==s.type?6:h.operatorCount);o++){let s=ze[e.charCodeAt(n++)];(y&&c||r)&&(s=t[s]),l&&(s=i[s]),a.operatorEnvelopes[o]=Qe.O(s)}s.convertLegacySettings(a,B)}else{const i=we(0,h.maxEnvelopeCount+1,ze[e.charCodeAt(n++)]);(l&&!E||u&&!b||f||d)&&(s.envelopeSpeed=we(0,h.modulators.dictionary["envelope speed"].maxRawVol+1,ze[e.charCodeAt(n++)]),s.discreteEnvelope=!!ze[e.charCodeAt(n++)]);for(let o=0;o<i;o++){const i=we(0,h.instrumentAutomationTargets.length,ze[e.charCodeAt(n++)]);let o=0;const l=h.instrumentAutomationTargets[i].maxCount;l>1&&(o=we(0,l,ze[e.charCodeAt(n++)]));let p=ze[e.charCodeAt(n++)];(y&&c||r)&&(p=t[p]);let u=1;(!f&&!d||f&&g)&&(u=h.envelopes[p].speed,p=a[p]);let m=!1;(!f&&!d||f&&g)&&9==p?(m=!0,p--):(!f&&!d||f&&g)&&p>9&&p--;const v=we(0,h.newEnvelopes.length,p);let b=0,w=h.maxPitch,S=!1;u=f&&!g||d?h.newEnvelopes[v].speed:u;let x=0,k=1,M=2,F=2,q=0;if(f&&!g||d){if("lfo"==h.newEnvelopes[v].name?(q=we(0,7,ze[e.charCodeAt(n++)]),5!=q&&6!=q||(M=we(1,h.randomEnvelopeStepsMax+1,ze[e.charCodeAt(n++)]))):"random"==h.newEnvelopes[v].name&&(M=we(1,h.randomEnvelopeStepsMax+1,ze[e.charCodeAt(n++)]),F=we(1,h.randomEnvelopeSeedMax+1,ze[e.charCodeAt(n++)]),q=we(0,4,ze[e.charCodeAt(n++)])),"pitch"==h.newEnvelopes[v].name)if(s.isNoiseInstrument)b=we(0,h.drumCount-1,ze[e.charCodeAt(n++)]),w=we(0,h.drumCount-1,ze[e.charCodeAt(n++)]);else{let t=ze[e.charCodeAt(n++)];b=we(0,h.maxPitch,64*t+ze[e.charCodeAt(n++)]),t=ze[e.charCodeAt(n++)],w=we(0,h.maxPitch,64*t+ze[e.charCodeAt(n++)])}S=1==ze[e.charCodeAt(n++)],"pitch"!=h.newEnvelopes[v].name&&"note size"!=h.newEnvelopes[v].name&&"punch"!=h.newEnvelopes[v].name&&"none"!=h.newEnvelopes[v].name&&(u=h.perEnvelopeSpeedIndices[ze[e.charCodeAt(n++)]]),x=ze[e.charCodeAt(n++)]/10,k=ze[e.charCodeAt(n++)]/10}(!f&&!d||f&&g)&&m&&(q=0,S?(k=Math.floor(k/2*10)/10,x=Math.floor(x/2*10)/10):(k=Math.floor(10*(.5+(k-x)/2))/10,x=.5)),s.addEnvelope(i,o,v,!0,b,w,S,u,x,k,M,F,q)}}}break;case 82:{const t=this.channels[Q].instruments[_];if(g&&c)for(let i=0;i<h.operatorCount;i++){const a=[0,1,3,2,2,2,4,5],s=we(0,a.length,ze[e.charCodeAt(n++)]);3==s?t.operators[i].pulseWidth=5:4==s?t.operators[i].pulseWidth=4:5==s&&(t.operators[i].pulseWidth=6),t.operators[i].waveform=a[s]}else for(let i=0;i<(11==t.type?6:h.operatorCount);i++){if(l){const a=[0,1,3,2,4,5];t.operators[i].waveform=a[we(0,h.operatorWaves.length,ze[e.charCodeAt(n++)])]}else t.operators[i].waveform=we(0,h.operatorWaves.length,ze[e.charCodeAt(n++)]);2==t.operators[i].waveform&&(t.operators[i].pulseWidth=we(0,h.pwmOperatorWaves.length,ze[e.charCodeAt(n++)]))}}break;case 83:{const t=this.channels[Q].instruments[_];if(3==t.type){const i=Math.ceil(h.spectrumControlPoints*h.spectrumControlPointBits/6),a=new Ie(e,n,n+i);for(let e=0;e<h.spectrumControlPoints;e++)t.spectrumWave.spectrum[e]=a.read(h.spectrumControlPointBits);t.spectrumWave.markCustomWaveDirty(),n+=i}else{if(4!=t.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const i=Math.ceil(h.drumCount*h.spectrumControlPoints*h.spectrumControlPointBits/6),a=new Ie(e,n,n+i);for(let e=0;e<h.drumCount;e++){for(let n=0;n<h.spectrumControlPoints;n++)t.drumsetSpectrumWaves[e].spectrum[n]=a.read(h.spectrumControlPointBits);t.drumsetSpectrumWaves[e].markCustomWaveDirty()}n+=i}}}break;case 72:{const t=this.channels[Q].instruments[_],i=Math.ceil(h.harmonicsControlPoints*h.harmonicsControlPointBits/6),a=new Ie(e,n,n+i);for(let e=0;e<h.harmonicsControlPoints;e++)t.harmonicsWave.harmonics[e]=a.read(h.harmonicsControlPointBits);t.harmonicsWave.markCustomWaveDirty(),n+=i}break;case 88:if(l&&b||c&&v){const t=this.channels[Q].instruments[_];t.aliases=!!ze[e.charCodeAt(n++)],t.aliases&&(t.distortion=0,t.effects|=8)}else if(u||f||d){this.channels[Q].instruments[_].decimalOffset=we(0,51,ze[e.charCodeAt(n++)])}break;case 98:{let t;if(g&&r){const i=ze[e.charCodeAt(n++)],a=ze[e.charCodeAt(n++)];t=Math.ceil(.5*a);const s=new Ie(e,n,n+t);for(let e=0;e<a;e++)this.channels[i].bars[e]=s.read(3)+1}else if(b&&r){let i=0;for(;1<<i<this.patternsPerChannel;)i++;t=Math.ceil(this.getChannelCount()*this.barCount*i/6);const a=new Ie(e,n,n+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=a.read(i)+1}else{let i=0;for(;1<<i<this.patternsPerChannel+1;)i++;t=Math.ceil(this.getChannelCount()*this.barCount*i/6);const a=new Ie(e,n,n+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=a.read(i)}n+=t}break;case 112:{let t,i=0,a=!(v&&l||r),s=a?4:3,o=a?16:8;if(g&&r)t=ze[e.charCodeAt(n++)],n++,i=ze[e.charCodeAt(n++)],i<<=6,i+=ze[e.charCodeAt(n++)];else{t=0;let a=Se(1,4,ze[e.charCodeAt(n++)]);for(;a>0;)i<<=6,i+=ze[e.charCodeAt(n++)],a--}const p=new Ie(e,n,n+i);n+=i;const m=Qe.getNeededBits(h.noteSizeMax);let y=-1,w=-1,S=-1;const x=l,k=30;for(;;){const e=this.channels[t],n=this.getChannelIsNoise(t),i=this.getChannelIsMod(t),M=this.getMaxInstrumentsPerPattern(t),F=Qe.getNeededBits(M-h.instrumentCountMin),P=Qe.getNeededBits(e.instruments.length-1);if(i){let n=b&&l||v&&c;const i=n?P:Qe.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let a=0;a<e.instruments.length;a++){let s=e.instruments[a];for(let e=0;e<h.modCount;e++){let o=p.read(2);switch(o){case 0:s.modChannels[e]=we(0,this.pitchChannelCount+this.noiseChannelCount+1,p.read(8)),s.modInstruments[e]=we(0,this.channels[s.modChannels[e]].instruments.length+2,p.read(i));break;case 1:s.modChannels[e]=this.pitchChannelCount+we(0,this.noiseChannelCount+1,p.read(8)),s.modInstruments[e]=we(0,this.channels[s.modChannels[e]].instruments.length+2,p.read(P));break;case 2:s.modChannels[e]=-1;break;case 3:s.modChannels[e]=-2}if(3!=o&&(s.modulators[e]=p.read(6)),n||"eq filter"!=h.modulators[s.modulators[e]].name&&"note filter"!=h.modulators[s.modulators[e]].name||(s.modFilterTypes[e]=p.read(6)),"individual envelope speed"==h.modulators[s.modulators[e]].name&&(s.modEnvelopeNumbers[e]=p.read(6)),n&&s.modChannels[e]>=0){let t=q(this.channels[s.modChannels[e]].instruments[s.modInstruments[e]].effects);7==s.modulators[e]?(s.modulators[e]=t?h.modulators.dictionary["note filt cut"].index:h.modulators.dictionary["eq filt cut"].index,s.modFilterTypes[e]=1):8==s.modulators[e]&&(s.modulators[e]=t?h.modulators.dictionary["note filt peak"].index:h.modulators.dictionary["eq filt peak"].index,s.modFilterTypes[e]=2)}else n&&s.modulators[e]==h.modulators.dictionary["song reverb"].index&&(y=t,w=a,S=e);n&&16!=h.modulators[s.modulators[e]].associatedEffect&&(this.channels[s.modChannels[e]].instruments[s.modInstruments[e]].effects|=1<<h.modulators[s.modulators[e]].associatedEffect)}}}const T=[];for(let t=0;t<e.instruments.length;t++){T[t]=[];for(let n=0;n<h.modCount;n++)T[t][h.modCount-1-n]=1+3*+((b&&l||v&&c)&&i&&e.instruments[t].modulators[n]==h.modulators.dictionary.detune.index)}const z=n||i?0:12*e.octave;let I=n||i?4:z;const C=i?[0,1,2,3,4,5]:n?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],H=[];for(let e=0;e<C.length;e++)C[e]+=z;for(let t=0;t<this.patternsPerChannel;t++){const n=e.patterns[t];if(N&&r||b&&l||v&&c)n.instruments[0]=Se(0,e.instruments.length-1,p.read(P)),n.instruments.length=1;else if(this.patternInstruments){const t=Se(h.instrumentCountMin,M,p.read(F)+h.instrumentCountMin);for(let a=0;a<t;a++)n.instruments[a]=Se(0,e.instruments.length-1+2*+i,p.read(P));n.instruments.length=t}else n.instruments[0]=0,n.instruments.length=h.instrumentCountMin;if(!(r&&g||0!=p.read(1))){n.notes.length=0;continue}let y=0;const w=n.notes;let S=0;for(;y<this.beatsPerBar*h.partsPerBeat+ +i;){const t=1==p.read(1);let g=!1,M=0;if(t?M=Se(0,H.length-1,p.readLongTail(0,0)):g=1==p.read(1),t||g){let g,F,q;if(t)g=H[M],H.splice(M,1);else{if(g={},a)1==p.read(1)?g.pitchCount=p.read(3)+2:g.pitchCount=1;else for(g.pitchCount=1;g.pitchCount<4&&1==p.read(1);)g.pitchCount++;g.pinCount=p.readPinCount(),g.initialSize=r?2*p.read(2):i?p.read(9):p.read(m),g.pins=[],g.length=0,g.bendCount=0;for(let e=0;e<g.pinCount;e++){let e={};e.pitchBend=1==p.read(1),e.pitchBend&&g.bendCount++,g.length+=A&&r?p.readLegacyPartDuration()*h.partsPerBeat/h.rhythms[this.rhythm].stepsPerBeat:p.readPartDuration(),e.time=g.length,e.size=r?2*p.read(2):i?p.read(9):p.read(m),g.pins.push(e)}}H.unshift(g),H.length>10&&H.pop(),w.length<=S?(F=new De(0,y,y+g.length,g.initialSize),w[S++]=F):(F=w[S++],F.start=y,F.end=y+g.length,F.pins[0].size=g.initialSize);let P=0;const z=[];for(let e=0;e<g.pitchCount+g.bendCount;e++){if(1==p.read(1)){const e=Se(0,C.length-1,p.read(s));q=C[e],C.splice(e,1)}else{q=I;let e=p.readPitchInterval();for(;e>0;){for(q++;-1!=C.indexOf(q);)q++;e--}for(;e<0;){for(q--;-1!=C.indexOf(q);)q--;e++}}C.unshift(q),C.length>o&&C.pop(),e<g.pitchCount?F.pitches[P++]=q:z.push(q),I=e==g.pitchCount-1?F.pitches[0]:q}F.pitches.length=P,z.unshift(F.pitches[0]);const D=i&&e.instruments[n.instruments[0]].modulators[h.modCount-1-F.pitches[0]]===h.modulators.dictionary.tempo.index;let O=0;x&&D&&(F.pins[0].size+=O,O=k-h.tempoMin),i&&(F.pins[0].size*=T[n.instruments[0]][F.pitches[0]]);let G=1;for(const e of g.pins){e.pitchBend&&z.shift();const t=z[0]-F.pitches[0];if(F.pins.length<=G)F.pins[G++]=He(t,e.time,i?e.size*T[n.instruments[0]][F.pitches[0]]+O:e.size);else{const a=F.pins[G++];a.interval=t,a.time=e.time,a.size=i?e.size*T[n.instruments[0]][F.pitches[0]]+O:e.size}}F.pins.length=G,0==F.start&&(F.continuesLastPattern=N&&r||b&&l||v&&c?!(v&&!u&&!f&&!d||r)&&e.instruments[n.instruments[0]].legacyTieOver:1==p.read(1)),y=Se(0,this.beatsPerBar*h.partsPerBeat,F.end)}else if(i){const e=1==p.read(1),t=p.readPartDuration();e?y-=t:y+=t}else{y+=A&&r?p.readLegacyPartDuration()*h.partsPerBeat/h.rhythms[this.rhythm].stepsPerBeat:p.readPartDuration()}}w.length=S}if(g&&r)break;if(t++,t>=this.getChannelCount())break}if((l&&b||v&&c)&&S>=0)for(let e=0;e<this.channels.length;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const n=this.channels[e].instruments[t];if(H(n.effects)&&(n.reverb=h.reverbRange-1),y==e&&w==t){const t=this.channels[e].bars[0];if(t>0){const n=this.channels[e].patterns[t-1];let i=6;for(const e of n.notes)e.pitches[0]==h.modCount-1-S&&(i=Math.min(i,e.start));i>0&&n.notes.push(new De(h.modCount-1-S,0,i,j))}else if(this.channels[e].patterns.length<h.barCountMax){const t=new Oe;if(this.channels[e].patterns.push(t),this.channels[e].bars[0]=this.channels[e].patterns.length,this.channels[e].patterns.length>this.patternsPerChannel){for(let e=0;e<this.channels.length;e++)this.channels[e].patterns.length<=this.patternsPerChannel&&this.channels[e].patterns.push(new Oe);this.patternsPerChannel++}t.instruments.length=1,t.instruments[0]=w,t.notes.length=0,t.notes.push(new De(h.modCount-1-S,0,6,j))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(U)+" at index "+(n-1)+" "+e.substring(0,n))}h.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}static ee(e){try{return Boolean(new URL(e))}catch(e){return!1}}static Z(e,t,n,i,a){const s=h.chipWaves[0].samples,o=h.rawRawChipWaves[0].samples,l=t.length;t.push(e);const p=h.chipWaves.length;let c=e,u=44100,f=!1,d=60,m=!1,y=null,g=null,v=null,b=null,w=!1,S=!1,x=e.indexOf("!"),k=-1;if(0===x&&(k=e.indexOf("!",x+1),-1!==k)){const F=e.slice(x+1,k).split(",");for(const q of F){const P=q.charAt(0),T=q.slice(1,q.length);"s"===P?u=we(8e3,96001,xe(T,44100)):"r"===P?d=xe(T,60):"p"===P?f=!0:"a"===P?(y=ke(T,null),null!=y&&(m=!0)):"b"===P?(g=ke(T,null),null!=g&&(m=!0)):"c"===P?(v=ke(T,null),null!=v&&(m=!0)):"d"===P?(b=ke(T,null),null!=b&&(b=we(0,4,b),m=!0)):"e"===P&&(w=!0,m=!0)}c=e.slice(k+1,e.length),S=!0}let M=null;if(!Qe.ee(c))return alert(e+" is not a valid url"),!1;if(M=new URL(c),a&&!S&&null!=M){function z(){c=e.slice(0,e.indexOf(",")),M=new URL(c),u=we(8e3,96001,xe(e.slice(e.indexOf(",")+1),44100))}function I(){c=e.slice(0,e.indexOf("!")),M=new URL(c),d=xe(e.slice(e.indexOf("!")+1),60)}-1!=e.indexOf("@")&&(c=e.replaceAll("@",""),M=new URL(c),f=!0),-1!=e.indexOf(",")&&-1!=e.indexOf("!")?e.indexOf(",")<e.indexOf("!")?(I(),z()):(z(),I()):(-1!=e.indexOf(",")&&z(),-1!=e.indexOf("!")&&I())}if(null!=M){let C=c;const H=[];let D;44100!==u&&H.push("s"+u),60!==d&&H.push("r"+d),f&&H.push("p"),m&&(null!=y&&H.push("a"+y),null!=g&&H.push("b"+g),null!=v&&H.push("c"+v),null!=b&&H.push("d"+b),w&&H.push("e")),H.length>0&&(C="!"+H.join(",")+"!"+c),t[l]=C,D=decodeURIComponent(M.pathname.replace(/^([^\/]*\/)+/,""));const O=1;h.chipWaves[p]={name:D,expression:O,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:u,samples:s,index:p},h.rawChipWaves[p]={name:D,expression:O,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:u,samples:o,index:p},h.rawRawChipWaves[p]={name:D,expression:O,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:u,samples:o,index:p};const G={type:"chip",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"harmony",wave:D,unison:"none",envelopes:[]};m&&(G.isUsingAdvancedLoopControls=!0,G.chipWaveLoopStart=null!=y?y:0,G.chipWaveLoopEnd=null!=g?g:2,G.chipWaveLoopMode=null!=b?b:0,G.chipWavePlayBackwards=w,G.chipWaveStartOffset=null!=v?v:0);const L={index:0,name:D,midiProgram:80,settings:G};if(n.push(L),!h.willReloadForCustomSamples){r(c,p,G,{isUsingAdvancedLoopControls:m,chipWaveLoopStart:y,chipWaveLoopEnd:g,chipWaveLoopMode:b,chipWavePlayBackwards:w,chipWaveStartOffset:v},u)}i.statusTable[p]=0,i.urlTable[p]=c,i.totalSamples++}return!0}static Y(){h.chipWaves=w(h.chipWaves.slice(0,h.firstIndexForSamplesInChipWaveList)),h.rawChipWaves=w(h.rawChipWaves.slice(0,h.firstIndexForSamplesInChipWaveList)),h.rawRawChipWaves=w(h.rawRawChipWaves.slice(0,h.firstIndexForSamplesInChipWaveList))}static L(){ne.customSamples=null,Qe.Y(),i.statusTable={},i.urlTable={},i.totalSamples=0,i.samplesLoaded=0,i.samplesFailed=0,o.dispatchEvent(new a(i.totalSamples,i.samplesLoaded,i.samplesFailed))}toJsonObject(e=!0,t=1,n=!0){const i=[];for(let a=0;a<this.getChannelCount();a++){const s=this.channels[a],o=[],r=this.getChannelIsNoise(a),l=this.getChannelIsMod(a);for(const e of s.instruments)o.push(e.toJsonObject());const p=[];for(const e of s.patterns)p.push(e.toJsonObject(this,s,l));const h=[];if(e)for(let e=0;e<this.loopStart;e++)h.push(s.bars[e]);for(let e=0;e<t;e++)for(let e=this.loopStart;e<this.loopStart+this.loopLength;e++)h.push(s.bars[e]);if(n)for(let e=this.loopStart+this.loopLength;e<this.barCount;e++)h.push(s.bars[e]);const c={type:l?"mod":r?"drum":"pitch",name:s.name,instruments:o,patterns:p,sequence:h};r||(c.octaveScrollBar=s.octave-1),i.push(c)}const a={name:this.title,theme:this.setSongTheme,format:Qe.te,version:Qe.H,author:this.author,description:this.description,showSongDetails:this.showSongDetails,scale:h.scales[this.scale].name,customScale:this.scaleCustom,key:h.keys[this.key].name,keyOctave:this.octave,loopType:this.loopType,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:h.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:i};return null!=ne.customSamples&&ne.customSamples.length>0&&(a.customSamples=ne.customSamples),a}fromJsonObject(e,t="auto"){if(this.initToDefault(!0),!e)return;"auto"==t&&"BeepBox"==e.format&&(null!=e.riff&&(t="modbox"),null!=e.masterGain&&(t="jummbox"));const n=("auto"==t?e.format:t).toLowerCase();if(null!=e.name&&(this.title=e.name),null!=e.author&&(this.author=e.author),null!=e.description&&(this.description=e.description),null!=e.showSongDetails&&(this.showSongDetails=e.showSongDetails),null!=e.theme&&(this.setSongTheme=e.theme),null!=e.customSamples){const t=e.customSamples;if(null==ne.customSamples||ne.customSamples.join(", ")!=t.join(", ")){h.willReloadForCustomSamples=!0,Qe.Y();let e=!1,n=!1,a=!1;const s=[],o=[];for(const r of t)if("legacysamples"===r.toLowerCase())e||(e=!0,s.push(r),p(0));else if("nintariboxsamples"===r.toLowerCase())n||(n=!0,s.push(r),p(1));else if("mariopaintboxsamples"===r.toLowerCase())a||(a=!0,s.push(r),p(2));else{const e=!1;Qe.Z(r,s,o,i,e)}if(s.length>0&&(ne.customSamples=s),o.length>0){const e=w(o);ne.presetCategories[ne.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:ne.presetCategories.length}}}}else{let t=!1;if(null!=e.channels)for(let i=0;i<e.channels.length;i++){const a=e.channels[i];if("pitch"===a.type&&Array.isArray(a.instruments)){const e=a.instruments;for(let i=0;i<e.length;i++){const a=e[i];if("chip"!==a.type)continue;if(null==a.wave)continue;const s=a.wave,o=["paandorasbox kick","paandorasbox snare","paandorasbox piano1","paandorasbox WOW","paandorasbox overdrive","paandorasbox trumpet","paandorasbox saxophone","paandorasbox orchestrahit","paandorasbox detatched violin","paandorasbox synth","paandorasbox sonic3snare","paandorasbox come on","paandorasbox choir","paandorasbox overdriveguitar","paandorasbox flute","paandorasbox legato violin","paandorasbox tremolo violin","paandorasbox amen break","paandorasbox pizzicato violin","paandorasbox tim allen grunt","paandorasbox tuba","paandorasbox loopingcymbal","paandorasbox standardkick","paandorasbox standardsnare","paandorasbox closedhihat","paandorasbox foothihat","paandorasbox openhihat","paandorasbox crashcymbal","paandorasbox pianoC4","paandorasbox liver pad","paandorasbox marimba","paandorasbox susdotwav","paandorasbox wackyboxtts","paandorasbox peppersteak_1","paandorasbox peppersteak_2","paandorasbox vinyl_noise","paandorasbeta slap bass","paandorasbeta HD EB overdrive guitar","paandorasbeta sunsoft bass","paandorasbeta masculine choir","paandorasbeta feminine choir","paandorasbeta tololoche","paandorasbeta harp","paandorasbeta pan flute","paandorasbeta krumhorn","paandorasbeta timpani","paandorasbeta crowd hey","paandorasbeta wario land 4 brass","paandorasbeta wario land 4 rock organ","paandorasbeta wario land 4 DAOW","paandorasbeta wario land 4 hour chime","paandorasbeta wario land 4 tick","paandorasbeta kirby kick","paandorasbeta kirby snare","paandorasbeta kirby bongo","paandorasbeta kirby click","paandorasbeta sonor kick","paandorasbeta sonor snare","paandorasbeta sonor snare (left hand)","paandorasbeta sonor snare (right hand)","paandorasbeta sonor high tom","paandorasbeta sonor low tom","paandorasbeta sonor hihat (closed)","paandorasbeta sonor hihat (half opened)","paandorasbeta sonor hihat (open)","paandorasbeta sonor hihat (open tip)","paandorasbeta sonor hihat (pedal)","paandorasbeta sonor crash","paandorasbeta sonor crash (tip)","paandorasbeta sonor ride"],r=["pandoraasbox kick","pandoraasbox snare","pandoraasbox piano1","pandoraasbox WOW","pandoraasbox overdrive","pandoraasbox trumpet","pandoraasbox saxophone","pandoraasbox orchestrahit","pandoraasbox detatched violin","pandoraasbox synth","pandoraasbox sonic3snare","pandoraasbox come on","pandoraasbox choir","pandoraasbox overdriveguitar","pandoraasbox flute","pandoraasbox legato violin","pandoraasbox tremolo violin","pandoraasbox amen break","pandoraasbox pizzicato violin","pandoraasbox tim allen grunt","pandoraasbox tuba","pandoraasbox loopingcymbal","pandoraasbox standardkick","pandoraasbox standardsnare","pandoraasbox closedhihat","pandoraasbox foothihat","pandoraasbox openhihat","pandoraasbox crashcymbal","pandoraasbox pianoC4","pandoraasbox liver pad","pandoraasbox marimba","pandoraasbox susdotwav","pandoraasbox wackyboxtts","pandoraasbox peppersteak_1","pandoraasbox peppersteak_2","pandoraasbox vinyl_noise","pandoraasbeta slap bass","pandoraasbeta HD EB overdrive guitar","pandoraasbeta sunsoft bass","pandoraasbeta masculine choir","pandoraasbeta feminine choir","pandoraasbeta tololoche","pandoraasbeta harp","pandoraasbeta pan flute","pandoraasbeta krumhorn","pandoraasbeta timpani","pandoraasbeta crowd hey","pandoraasbeta wario land 4 brass","pandoraasbeta wario land 4 rock organ","pandoraasbeta wario land 4 DAOW","pandoraasbeta wario land 4 hour chime","pandoraasbeta wario land 4 tick","pandoraasbeta kirby kick","pandoraasbeta kirby snare","pandoraasbeta kirby bongo","pandoraasbeta kirby click","pandoraasbeta sonor kick","pandoraasbeta sonor snare","pandoraasbeta sonor snare (left hand)","pandoraasbeta sonor snare (right hand)","pandoraasbeta sonor high tom","pandoraasbeta sonor low tom","pandoraasbeta sonor hihat (closed)","pandoraasbeta sonor hihat (half opened)","pandoraasbeta sonor hihat (open)","pandoraasbeta sonor hihat (open tip)","pandoraasbeta sonor hihat (pedal)","pandoraasbeta sonor crash","pandoraasbeta sonor crash (tip)","pandoraasbeta sonor ride"],l=["kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","detatched violin","synth","sonic3snare","come on","choir","overdriveguitar","flute","legato violin","tremolo violin","amen break","pizzicato violin","tim allen grunt","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","liver pad","marimba","susdotwav","wackyboxtts"];o.includes(s)?t=!0:r.includes(s)?(t=!0,a.wave=o[r.findIndex((e=>e===s))]):l.includes(s)&&("trumpet"!==s&&"flute"!==s||"paandorasbox"==n)&&(t=!0,a.wave=o[l.findIndex((e=>e===s))])}}}t?(h.willReloadForCustomSamples=!0,Qe.Y(),p(0),ne.customSamples=["legacySamples"]):null!=ne.customSamples&&ne.customSamples.length>0&&(h.willReloadForCustomSamples=!0,Qe.L())}if(this.scale=0,null!=e.scale){const t={"romani :)":"double harmonic :)","romani :(":"double harmonic :(","dbl harmonic :)":"double harmonic :)","dbl harmonic :(":"double harmonic :(",enigma:"strange"},n=null!=t[e.scale]?t[e.scale]:e.scale,i=h.scales.findIndex((e=>e.name==n));if(-1!=i&&(this.scale=i),this.scale==h.scales.dictionary.Custom.index&&null!=e.customScale)for(var a of e.customScale.keys())this.scaleCustom[a]=e.customScale[a]}if(null!=e.key)if("number"==typeof e.key)this.key=(e.key+1200>>>0)%h.keys.length;else if("string"==typeof e.key){const t=e.key;if("C+"===t)this.key=0,this.octave=1;else if("G- (actually F#-)"===t)this.key=6,this.octave=-1;else if("C-"===t)this.key=0,this.octave=-1;else if("oh no (F-)"===t)this.key=5,this.octave=-1;else{const e=t.charAt(0).toUpperCase(),n=t.charAt(1).toLowerCase();let i={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[e];const a={"#":1,"♯":1,b:-1,"♭":-1}[n];null!=i&&(null!=a&&(i+=a),i<0&&(i+=12),i%=12,this.key=i)}}null!=e.beatsPerMinute&&(this.tempo=we(h.tempoMin,h.tempoMax+1,0|e.beatsPerMinute)),null!=e.loopType&&(this.loopType=0|e.loopType),null!=e.keyOctave&&(this.octave=we(h.octaveMin,h.octaveMax+1,0|e.keyOctave));let s=0;null!=e.reverb&&(s=we(0,32,0|e.reverb)),null!=e.beatsPerBar&&(this.beatsPerBar=Math.max(h.beatsPerBarMin,Math.min(h.beatsPerBarMax,0|e.beatsPerBar)));let o=4;null!=e.ticksPerBeat&&(o=0|e.ticksPerBeat||4,this.rhythm=h.rhythms.findIndex((e=>e.stepsPerBeat==o)),-1==this.rhythm&&(this.rhythm=1)),null!=e.masterGain?this.masterGain=Math.max(0,Math.min(5,e.masterGain||0)):this.masterGain=1,null!=e.limitThreshold?this.limitThreshold=Math.max(0,Math.min(2,e.limitThreshold||0)):this.limitThreshold=1,null!=e.compressionThreshold?this.compressionThreshold=Math.max(0,Math.min(1.1,e.compressionThreshold||0)):this.compressionThreshold=1,null!=e.limitRise?this.limitRise=Math.max(2e3,Math.min(1e4,e.limitRise||0)):this.limitRise=4e3,null!=e.limitDecay?this.limitDecay=Math.max(1,Math.min(30,e.limitDecay||0)):this.limitDecay=4,null!=e.limitRatio?this.limitRatio=Math.max(0,Math.min(11,e.limitRatio||0)):this.limitRatio=1,null!=e.compressionRatio?this.compressionRatio=Math.max(0,Math.min(1.168,e.compressionRatio||0)):this.compressionRatio=1;let r=1,l=1,c=1;if(null!=e.channels)for(const t of e.channels)t.instruments&&(r=Math.max(r,0|t.instruments.length)),t.patterns&&(l=Math.max(l,0|t.patterns.length)),t.sequence&&(c=Math.max(c,0|t.sequence.length));null!=e.layeredInstruments?this.layeredInstruments=!!e.layeredInstruments:this.layeredInstruments=!1,null!=e.patternInstruments?this.patternInstruments=!!e.patternInstruments:this.patternInstruments=r>1,this.patternsPerChannel=Math.min(l,h.barCountMax),this.barCount=Math.min(c,h.barCountMax),null!=e.introBars&&(this.loopStart=we(0,this.barCount,0|e.introBars)),null!=e.loopBars&&(this.loopLength=we(1,this.barCount-this.loopStart+1,0|e.loopBars));const u=[],f=[],d=[];if(null!=e.channels)for(let t=0;t<e.channels.length;t++){let i=e.channels[t];const a=new je;let r=!1,l=!1;if(null!=i.type?(r="drum"==i.type,l="mod"==i.type):r=t>=3,r?f.push(a):l?d.push(a):u.push(a),null!=i.octaveScrollBar&&(a.octave=we(0,h.pitchOctaves,1+(0|i.octaveScrollBar)),r&&(a.octave=0)),null!=i.name?a.name=i.name:a.name="",Array.isArray(i.instruments)){const e=i.instruments;for(let t=0;t<e.length&&!(t>=this.getMaxInstrumentsPerChannel());t++){const i=new Ue(r,l);a.instruments[t]=i,i.fromJsonObject(e[t],r,l,!1,!1,s,n)}}for(let e=0;e<this.patternsPerChannel;e++){const t=new Oe;let s;a.patterns[e]=t,i.patterns&&(s=i.patterns[e]),null!=s&&t.fromJsonObject(s,this,a,o,r,l,n)}a.patterns.length=this.patternsPerChannel;for(let e=0;e<this.barCount;e++)a.bars[e]=null!=i.sequence?Math.min(this.patternsPerChannel,i.sequence[e]>>>0):0;a.bars.length=this.barCount}u.length>h.pitchChannelCountMax&&(u.length=h.pitchChannelCountMax),f.length>h.noiseChannelCountMax&&(f.length=h.noiseChannelCountMax),d.length>h.modChannelCountMax&&(d.length=h.modChannelCountMax),this.pitchChannelCount=u.length,this.noiseChannelCount=f.length,this.modChannelCount=d.length,this.channels.length=0,Array.prototype.push.apply(this.channels,u),Array.prototype.push.apply(this.channels,f),Array.prototype.push.apply(this.channels,d),h.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}getPattern(e,t){if(t<0||t>=this.barCount)return null;const n=this.channels[e].bars[t];return 0==n?null:this.channels[e].patterns[n-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(e){return 32-Math.clz32(Math.ceil(e+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}}Qe.te=h.jsonFormat,Qe.N=2,Qe.R=9,Qe.V=1,Qe.W=6,Qe.U=1,Qe.$=4,Qe._=1,Qe.j=6,Qe.J=1,Qe.K=4,Qe.X=1,Qe.H=3,Qe.I=97;class _e{constructor(){this.delayLine=null,this.allPassG=0,this.allPassGDelta=0,this.sustainFilterA1=0,this.sustainFilterA1Delta=0,this.sustainFilterA2=0,this.sustainFilterA2Delta=0,this.sustainFilterB0=0,this.sustainFilterB0Delta=0,this.sustainFilterB1=0,this.sustainFilterB1Delta=0,this.sustainFilterB2=0,this.sustainFilterB2Delta=0,this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}update(e,t,n,i,a,s,o,r){const l=2*Math.PI*h.pickedStringDispersionCenterFreq/e.samplesPerSecond,p=this.prevDelayLength,c=n.phaseDeltas[i],u=n.phaseDeltaScales[i],f=c*Math.pow(u,a),d=2*Math.PI*c,m=2*Math.PI*f,y=2*d,g=2*m,v=Math.min(Math.PI,d*h.pickedStringDispersionFreqMult*Math.pow(l/d,h.pickedStringDispersionFreqScale)),b=Math.min(Math.PI,m*h.pickedStringDispersionFreqMult*Math.pow(l/m,h.pickedStringDispersionFreqScale)),w=2*Math.PI*h.pickedStringShelfHz/e.samplesPerSecond,S=(Math.pow(100,s)-1)/99,x=(Math.pow(100,o)-1)/99,k=1==r?.25:0,M=15.6,F=3*e.samplesPerSecond/48e3,q=Math.pow(.5,S*Math.pow(w/(d*M),1+2*k)*M),P=Math.pow(.5,x*Math.pow(w/(m*M),1+2*k)*M),T=Math.pow(q,.002),z=Math.pow(P,.002);Ze.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(v),e.tempFrequencyResponse.analyze(Ze.tempFilterStartCoefficients,y);const I=Ze.tempFilterStartCoefficients.b[0],C=-e.tempFrequencyResponse.angle()/y;Ze.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(b),e.tempFrequencyResponse.analyze(Ze.tempFilterEndCoefficients,g);const H=Ze.tempFilterEndCoefficients.b[0],D=-e.tempFrequencyResponse.angle()/g,O=0==r?0:1;if(0==O){const e=Math.pow(q,h.stringDecayRate),t=Math.pow(P,h.stringDecayRate);Ze.tempFilterStartCoefficients.highShelf2ndOrder(w,e,.5),Ze.tempFilterEndCoefficients.highShelf2ndOrder(w,t,.5)}else{const t=Math.pow(1==O?0:1,.25),n=Math.pow(F*F*d*3.3*48e3/e.samplesPerSecond,.5+k)/F/Math.pow(S,.5),i=Math.pow(F*F*m*3.3*48e3/e.samplesPerSecond,.5+k)/F/Math.pow(x,.5),a=n*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),s=i*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),o=Math.pow(2,-Math.pow(2,-Math.pow(t,.9))),r=Math.pow(2,-Math.pow(2,-Math.pow(t,.9)));Ze.tempFilterStartCoefficients.lowPass2ndOrderButterworth(ce(a),o),Ze.tempFilterEndCoefficients.lowPass2ndOrderButterworth(ce(s),r)}e.tempFrequencyResponse.analyze(Ze.tempFilterStartCoefficients,y);const G=Ze.tempFilterStartCoefficients.a[1],L=Ze.tempFilterStartCoefficients.a[2],E=Ze.tempFilterStartCoefficients.b[0]*T,A=Ze.tempFilterStartCoefficients.b[1]*T,R=Ze.tempFilterStartCoefficients.b[2]*T,N=-e.tempFrequencyResponse.angle()/y;e.tempFrequencyResponse.analyze(Ze.tempFilterEndCoefficients,g);const B=Ze.tempFilterEndCoefficients.a[1],W=Ze.tempFilterEndCoefficients.a[2],V=Ze.tempFilterEndCoefficients.b[0]*z,$=Ze.tempFilterEndCoefficients.b[1]*z,U=Ze.tempFilterEndCoefficients.b[2]*z,j=-e.tempFrequencyResponse.angle()/g,Q=1/c,_=1/f,K=Math.ceil(2*Math.max(Q,_)),J=Q-C-N,X=_-D-j;this.prevDelayLength=J,this.delayLengthDelta=(X-J)/a,this.allPassG=I,this.sustainFilterA1=G,this.sustainFilterA2=L,this.sustainFilterB0=E,this.sustainFilterB1=A,this.sustainFilterB2=R,this.allPassGDelta=(H-I)/a,this.sustainFilterA1Delta=(B-G)/a,this.sustainFilterA2Delta=(W-L)/a,this.sustainFilterB0Delta=(V-E)/a,this.sustainFilterB1Delta=($-A)/a,this.sustainFilterB2Delta=(U-R)/a;const Y=Math.abs(Math.log2(J/p))>.01,Z=-1==this.delayIndex||Y;if(null==this.delayLine||this.delayLine.length<=K){const t=Math.ceil(2*e.samplesPerSecond/Ue.frequencyFromPitch(12)),n=new Float32Array(Ze.fittingPowerOfTwo(Math.max(t,K)));if(!Z&&null!=this.delayLine){const e=this.delayLine.length-1>>0,t=this.delayIndex+this.delayResetOffset;this.delayIndex=this.delayLine.length-this.delayResetOffset;for(let i=0;i<this.delayLine.length;i++)n[i]=this.delayLine[t+i&e]}this.delayLine=n}const ee=this.delayLine,te=ee.length-1>>0;if(Z){this.delayIndex=0,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0;const n=-J,i=Math.floor(n-Q/2),a=Math.ceil(i+2*Q);this.delayResetOffset=a;for(let e=i;e<=a;e++)ee[e&te]=0;const s=t.wave,o=s.length-1,r=o/Q,l=Math.min(.2*Q,.003*e.samplesPerSecond),p=Math.ceil(n),h=n+Q+l,c=h;let u=(p-n)*r,f=0;for(let e=p;e<=c;e++){const t=0|u,i=t%o;let a=s[i];const p=u-t;a+=(s[i+1]-a)*p;const c=(a-f)/r,d=Math.min(1,(e-n)/l)*Math.min(1,(h-e)/l),m=d*d*(3-2*d);ee[e&te]+=c*m,f=a,u+=r}}}}class Ke{constructor(){this.noteSecondsStart=[],this.noteSecondsStartUnscaled=0,this.noteSecondsEnd=[],this.noteSecondsEndUnscaled=0,this.noteTicksStart=0,this.noteTicksEnd=0,this.noteSizeStart=h.noteSizeMax,this.noteSizeEnd=h.noteSizeMax,this.prevNoteSize=h.noteSizeMax,this.nextNoteSize=h.noteSizeMax,this.ne=h.noteSizeMax,this.prevNoteSecondsStart=[],this.prevNoteSecondsStartUnscaled=0,this.prevNoteSecondsEnd=[],this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksStart=0,this.prevNoteTicksEnd=0,this.ie=h.noteSizeMax,this.tickTimeEnd=[],this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.prevSlideStart=!1,this.prevSlideEnd=!1,this.nextSlideStart=!1,this.nextSlideEnd=!1,this.prevSlideRatioStart=0,this.prevSlideRatioEnd=0,this.nextSlideRatioStart=0,this.nextSlideRatioEnd=0,this.startPinTickAbsolute=null,this.envelopeStarts=[],this.envelopeEnds=[],this.ae=[],this.se=0,this.lowpassCutoffDecayVolumeCompensation=1;for(let e=0;e<56;e++)this.envelopeStarts[e]=1,this.envelopeEnds[e]=1;this.reset()}reset(){for(let e=0;e<h.maxEnvelopeCount+1;e++)this.noteSecondsEnd[e]=0,this.prevNoteSecondsEnd[e]=0;this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0,this.ne=h.noteSizeMax,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksEnd=0,this.ie=h.noteSizeMax,this.se=0,this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.startPinTickAbsolute=null}computeEnvelopes(e,t,n,i,a,s,o,r,l){const p=a,c=e.getTransition();if(null!=s&&s.atNoteStart&&!c.continues&&!s.forceContinueAtStart){this.prevNoteSecondsEndUnscaled=this.noteSecondsEndUnscaled,this.prevNoteTicksEnd=this.noteTicksEnd,this.ie=this.ne,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0;for(let e=0;e<h.maxEnvelopeCount+1;e++)this.prevNoteSecondsEnd[e]=this.noteSecondsEnd[e],this.noteSecondsEnd[e]=0}null!=s&&(null!=s.note?this.ne=s.note.pins[s.note.pins.length-1].size:this.ne=h.noteSizeMax);const u=[],f=i+1,d=[],m=this.noteSecondsEndUnscaled,y=[],g=m+p,v=this.noteTicksEnd,b=v+1,w=[],S=[],x=this.prevNoteSecondsEndUnscaled,k=x+p,M=this.prevNoteTicksEnd,F=M+1,q=1/(h.ticksPerPart*h.partsPerBeat),P=[],T=[];let z=this.ne,I=this.ne,C=this.ie,H=0,D=!1,O=!1,G=!1,L=!1,E=0,A=0,R=0,N=0;if(null==s&&(this.startPinTickAbsolute=null),null!=s&&null!=s.note&&!s.passedEndOfNote){const n=s.note.getEndPinIndex(t),a=s.note.pins[n-1],o=s.note.pins[n],r=(s.note.start+a.time)*h.ticksPerPart;(null==this.startPinTickAbsolute||!c.continues&&!c.slides&&s.passedEndOfNote)&&(this.startPinTickAbsolute=r+l.computeTicksSinceStart(!0));const p=(s.note.start+o.time)*h.ticksPerPart,u=(i-r)/(p-r),d=(f-r)/(p-r);if(z=a.size+(o.size-a.size)*u,I=a.size+(o.size-a.size)*d,c.slides){const t=s.noteStartPart*h.ticksPerPart,n=s.noteEndPart*h.ticksPerPart,a=.5*(n-t),o=Math.min(a,e.slideTicks);null==s.prevNote||s.forceContinueAtStart||(i-t<o&&(D=!0,E=.5*(1-(i-t)/o)),f-t<o&&(O=!0,A=.5*(1-(f-t)/o))),null==s.nextNote||s.forceContinueAtEnd||(H=s.nextNote.pins[0].size,n-i<o&&(G=!0,R=.5*(1-(n-i)/o)),n-f<o&&(L=!0,N=.5*(1-(n-f)/o)))}}let B=1,W=!1;for(let t=0;t<=e.envelopeCount;t++){let i,p,c,f=!1,v=1,b=1,M=v*b,F=0,V=1,$=0,U=2,j=2,Q=0,_=this.startPinTickAbsolute||0;if(t==e.envelopeCount){if(W)break;i=h.instrumentAutomationTargets.dictionary.noteVolume,p=0,c=h.newEnvelopes.dictionary["note size"]}else{let s=e.envelopes[t];i=h.instrumentAutomationTargets[s.target],p=s.index,c=h.newEnvelopes[s.envelope],f=e.envelopes[t].inverse,v=e.envelopes[t].perEnvelopeSpeed,b=Math.pow(e.envelopeSpeed,2)/144,M=0==v||0==b?v+b:v*b;const r=e.envelopes[t].perEnvelopeLowerBound<=e.envelopes[t].perEnvelopeUpperBound;F=r?e.envelopes[t].perEnvelopeLowerBound:0,V=r?e.envelopes[t].perEnvelopeUpperBound:1,$=l.computeTicksSinceStart(),U=e.envelopes[t].steps,j=e.envelopes[t].seed,e.envelopes[t].waveform>=("lfo"==c.name?7:4)&&(e.envelopes[t].waveform=0),Q=e.envelopes[t].waveform,o[t]||(o[t]=0);const m=a*o[t];n[t]||(n[t]=0),u[t]=n[t]?n[t]+o[t]:o[t],d[t]=this.noteSecondsEnd[t]?this.noteSecondsEnd[t]:0,w[t]=this.prevNoteSecondsEnd[t]?this.prevNoteSecondsEnd[t]:0,y[t]=d[t]?d[t]+m:m,S[t]=w[t]?w[t]+m:m,P[t]=n[t]?q*n[t]:q,T[t]=u[t]?q*u[t]:q,1==c.type&&(W=!0)}const K=this.getPitchValue(e,s,r,!1),J=this.computePitchEnvelope(e,t,this.getPitchValue(e,s,r,!0));if(null!=i.computeIndex){const n=i.computeIndex+p;let a=Ke.computeEnvelope(c,M,m,d[t],P[t],$,z,J,f,F,V,!1,U,j,Q,K,_);if(D){a+=(Ke.computeEnvelope(c,M,x,w[t],P[t],$,C,J,f,F,V,!1,U,j,Q,K,_)-a)*E}if(G){a+=(Ke.computeEnvelope(c,M,0,0,P[t],$,H,J,f,F,V,!1,U,j,Q,K,_)-a)*R}let s=a;if(0==e.discreteEnvelope){if(s=Ke.computeEnvelope(c,M,g,y[t],T[t],$,I,J,f,F,V,!1,U,j,Q,K,_),O){s+=(Ke.computeEnvelope(c,M,k,S[t],T[t],$,C,J,f,F,V,!1,U,j,Q,K,_)-s)*A}if(L){s+=(Ke.computeEnvelope(c,M,0,0,T[t],$,H,J,f,F,V,!1,U,j,Q,K,_)-s)*N}}if(this.envelopeStarts[n]*=a,this.envelopeEnds[n]*=s,this.ae[this.se++]=n,i.isFilter){const t=null!=e.tmpNoteFilterStart?e.tmpNoteFilterStart:e.noteFilter;t.controlPointCount>p&&0==t.controlPoints[p].type&&(B=Math.max(B,Ke.getLowpassCutoffDecayVolumeCompensation(c,v)))}}}this.noteSecondsStartUnscaled=m,this.noteSecondsEndUnscaled=g,this.noteTicksStart=v,this.noteTicksEnd=b,this.prevNoteSecondsStartUnscaled=x,this.prevNoteSecondsEndUnscaled=k,this.prevNoteTicksStart=M,this.prevNoteTicksEnd=F;for(let e=0;e<h.maxEnvelopeCount+1;e++)this.noteSecondsStart[e]=d[e],this.noteSecondsEnd[e]=y[e],this.prevNoteSecondsStart[e]=w[e],this.prevNoteSecondsEnd[e]=S[e];this.prevNoteSize=C,this.nextNoteSize=H,this.noteSizeStart=z,this.noteSizeEnd=I,this.prevSlideStart=D,this.prevSlideEnd=O,this.nextSlideStart=G,this.nextSlideEnd=L,this.prevSlideRatioStart=E,this.prevSlideRatioEnd=A,this.nextSlideRatioStart=R,this.nextSlideRatioEnd=N,this.lowpassCutoffDecayVolumeCompensation=B}clearEnvelopes(){for(let e=0;e<this.se;e++){const t=this.ae[e];this.envelopeStarts[t]=1,this.envelopeEnds[t]=1}this.se=0}static computeEnvelope(e,t,n,i,a,s,o,r,l,p,h,c=!1,u,f,d,m,y){const g=c?e.speed:1,v=h-p;switch(e.type){case 0:return h;case 1:return l?h-v*Ze.noteSizeToVolumeMult(o):v*Ze.noteSizeToVolumeMult(o)+p;case 2:return r;case 3:const e=4294967295,c=u;switch(d){case 0:if(c<=1)return 1;const n=ve((0==t?0:Math.floor(s*t/256))+"",f);return l?h-v*(c/(c-1))*Math.floor(n*c/(e+1))/c:v*(c/(c-1))*Math.floor(n*c/(e+1))/c+p;case 1:const i=ve(m+"",f);return l?h-v*i/(e+1):v*i/(e+1)+p;case 2:if(c<=1)return 1;const a=ve(y+"",f);return l?h-v*(c/(c-1))*Math.floor(a*c/(e+1))/c:v*(c/(c-1))*Math.floor(a*c/(e+1))/c+p;case 3:const o=ve((0==t?0:Math.floor(s*t/256))+"",f)*(1-s*t/256%1)+ve((0==t?0:Math.floor((s*t+256)/256))+"",f)*(s*t/256%1);return l?h-v*o/(e+1):v*o/(e+1)+p;default:throw new Error("Unrecognized operator envelope waveform type: "+d)}case 6:return l?h-v*(1/(1+i*g)):v/(1+i*g)+p;case 7:return l?v/(1+i*g)+p:h-v/(1+i*g);case 8:switch(d){case 0:return l?h/2+v*Math.cos(2*a*Math.PI*g)*.5+p/2:h/2-v*Math.cos(2*a*Math.PI*g)*.5+p/2;case 1:return l?Math.cos(2*a*Math.PI*g)<0?h:p:Math.cos(2*a*Math.PI*g)<0?p:h;case 2:return l?h/2-v/Math.PI*Math.asin(Math.sin(Math.PI/2+a*Math.PI*2*g))+p/2:h/2+v/Math.PI*Math.asin(Math.sin(Math.PI/2+a*Math.PI*2*g))+p/2;case 3:return l?h-a*g%1*v:a*g%1*v+p;case 4:let e=0;return e=l?h/2-2*v/Math.PI*Math.asin(Math.sin(Math.PI/2+a*Math.PI*2*g))+p/2:h/2+2*v/Math.PI*Math.asin(Math.sin(Math.PI/2+a*Math.PI*2*g))+p/2,Math.max(p,Math.min(h,e));case 5:if(u<=1)return 1;let t=a*g%1;return l?h-Math.floor(t*u)*v/(u-1):Math.floor(t*u)*v/(u-1)+p;case 6:if(u<=1)return 1;let n=.5+(l?-1:1)*(1/Math.PI)*Math.asin(Math.sin(Math.PI/2+a*Math.PI*2*g));return Math.round(n*(u-1))*v/(u-1)+p;default:throw new Error("Unrecognized operator envelope waveform type: "+d)}case 9:return l?h/4+v*Math.cos(2*a*Math.PI*g)*.25+p/4:.5+h/4-v*Math.cos(2*a*Math.PI*g)*.25-p/4;case 4:return l?Math.max(0,h+1-Math.max(1-p,1-h-n*t*10)):Math.max(1+p,1+h-n*t*10);case 5:const b=.25/Math.sqrt(g*t);return l?h-v*(n<b?n/b:1/(1+(n-b)*g*t)):v*(n<b?n/b:1/(1+(n-b)*g*t))+p;case 10:return l?h-v*Math.pow(2,-g*i):v*Math.pow(2,-g*i)+p;case 14:return l?h-v*+(n<.25/Math.sqrt(g*t)):v*+(n<.25/Math.sqrt(g*t))+p;case 11:{let e=.5-.5*Math.cos(a*g);return e=1/(1+i*(g-e/(1.5/g))),e=e>0?e:0,l?h-v*e:v*e+p}case 12:{let e=1-i/(16/g);return e=e>0?e:0,l?h-v*e:v*e+p}case 13:{let e=i/(16/g);return e=e<1?e:1,l?h-v*e:v*e+p}case 15:return l?Math.min(Math.max(p,h-v*Math.sqrt(Math.max(1-g*i/2,0))),h):Math.max(p,v*Math.sqrt(Math.max(1-g*i/2,0))+p);default:throw new Error("Unrecognized operator envelope type.")}}getPitchValue(e,t,n,i=!0){if(t&&t.pitchCount>=1){const a=e.getChord().arpeggiates,s=Math.floor(n.arpTime/h.ticksPerArpeggio),o=t.pitches[a?b(t.pitchCount,e.fastTwoNoteArp,s):0];return i&&t.lastInterval!=o?o+t.lastInterval:o}return 0}computePitchEnvelope(e,t,n=0){let i=0,a=h.maxPitch,s=!1,o=0,r=1;e.isNoiseInstrument&&(a=h.drumCount-1),t<e.envelopeCount&&-2!==t&&(i=e.envelopes[t].pitchEnvelopeStart,a=e.envelopes[t].pitchEnvelopeEnd,s=e.envelopes[t].inverse,o=e.envelopes[t].perEnvelopeLowerBound,r=e.envelopes[t].perEnvelopeUpperBound),i>a&&(i=0,a=e.isNoiseInstrument?h.drumCount-1:h.maxPitch);const l=a-i+1;return s?n<=i?r:n>=a?o:r-(n-i)*(r-o)/l:n<=i?o:n>=a?r:(n-i)*(r-o)/l+o}static getLowpassCutoffDecayVolumeCompensation(e,t=1){return 10==e.type?1.25+.025*t:6==e.type?1+.02*t:1}computeDrumsetEnvelopes(e,t,n,i,a){function s(e,n,i,a){return Ke.computeEnvelope(t,1,e,n,i,0,a,1,!1,0,1,!0,2,2,0,1,0)}let o=s(this.noteSecondsStartUnscaled,this.noteSecondsStartUnscaled,n*i,this.noteSizeStart);if(this.prevSlideStart){o+=(s(this.prevNoteSecondsStartUnscaled,this.prevNoteSecondsStartUnscaled,n*i,this.prevNoteSize)-o)*this.prevSlideRatioStart}if(this.nextSlideStart){o+=(s(0,0,n*i,this.nextNoteSize)-o)*this.nextSlideRatioStart}let r=o;if(0==e.discreteEnvelope){if(r=s(this.noteSecondsEndUnscaled,this.noteSecondsEndUnscaled,n*a,this.noteSizeEnd),this.prevSlideEnd){r+=(s(this.prevNoteSecondsEndUnscaled,this.prevNoteSecondsEndUnscaled,n*a,this.prevNoteSize)-r)*this.prevSlideRatioEnd}if(this.nextSlideEnd){r+=(s(0,0,n*a,this.nextNoteSize)-r)*this.nextSlideRatioEnd}}this.drumsetFilterEnvelopeStart=o,this.drumsetFilterEnvelopeEnd=r}}class Je{constructor(){this.pitches=Array(h.maxChordSize+2).fill(0),this.pitchCount=0,this.chordSize=0,this.drumsetPitch=null,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.freshlyAllocated=!0,this.atNoteStart=!1,this.isOnLastTick=!1,this.passedEndOfNote=!1,this.forceContinueAtStart=!1,this.forceContinueAtEnd=!1,this.noteStartPart=0,this.noteEndPart=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.noiseSample=0,this.noiseSampleA=0,this.noiseSampleB=0,this.stringSustainStart=0,this.stringSustainEnd=0,this.phases=[],this.operatorWaves=[],this.phaseDeltas=[],this.directions=[],this.chipWaveCompletions=[],this.chipWavePrevWaves=[],this.chipWaveCompletionsLastWave=[],this.phaseDeltaScales=[],this.expression=0,this.expressionDelta=0,this.operatorExpressions=[],this.operatorExpressionDeltas=[],this.prevPitchExpressions=Array(h.maxPitchOrOperatorCount).fill(null),this.prevVibrato=null,this.prevStringDecay=null,this.pulseWidth=0,this.pulseWidthDelta=0,this.decimalOffset=0,this.supersawDynamism=0,this.supersawDynamismDelta=0,this.supersawUnisonDetunes=[],this.supersawShape=0,this.supersawShapeDelta=0,this.supersawDelayLength=0,this.supersawDelayLengthDelta=0,this.supersawDelayLine=null,this.supersawDelayIndex=-1,this.supersawPrevPhaseDelta=null,this.pickedStrings=[],this.noteFilters=[],this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.specialIntervalExpressionMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.stereoVolumeLStart=0,this.stereoVolumeRStart=0,this.stereoVolumeLDelta=0,this.stereoVolumeRDelta=0,this.stereoDelayStart=0,this.stereoDelayEnd=0,this.stereoDelayDelta=0,this.customVolumeStart=0,this.customVolumeEnd=0,this.filterResonanceStart=0,this.filterResonanceDelta=0,this.isFirstOrder=!1,this.envelopeComputer=new Ke,this.reset()}reset(){this.noiseSample=0,this.noiseSampleA=0,this.noiseSampleB=0;for(let e=0;e<h.maxPitchOrOperatorCount;e++)this.phases[e]=0,this.directions[e]=1,this.chipWaveCompletions[e]=0,this.chipWavePrevWaves[e]=0,this.chipWaveCompletionsLastWave[e]=0,this.operatorWaves[e]=h.operatorWaves[0],this.feedbackOutputs[e]=0,this.prevPitchExpressions[e]=null;for(let e=0;e<this.noteFilterCount;e++)this.noteFilters[e].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.liveInputSamplesHeld=0,this.supersawDelayIndex=-1;for(const e of this.pickedStrings)e.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.prevStringDecay=null,this.supersawPrevPhaseDelta=null,this.drumsetPitch=null}}class Xe{constructor(){this.awake=!1,this.computed=!1,this.tonesAddedInThisTick=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0,this.activeTones=new oe,this.activeModTones=new oe,this.releasedTones=new oe,this.liveInputTones=new oe,this.type=0,this.synthesizer=null,this.wave=null,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=0,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.noisePitchFilterMult=1,this.unison=null,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.unisonBuzzes=!1,this.chord=null,this.effects=0,this.volumeScale=0,this.aliases=!1,this.arpTime=0,this.vibratoTime=0,this.nextVibratoTime=0,this.envelopeTime=[],this.eqFilterVolume=1,this.eqFilterVolumeDelta=0,this.mixVolume=1,this.mixVolumeDelta=0,this.delayInputMult=0,this.delayInputMultDelta=0,this.distortion=0,this.distortionDelta=0,this.distortionDrive=0,this.distortionDriveDelta=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1,this.bitcrusherPhaseDelta=0,this.bitcrusherPhaseDeltaScale=1,this.bitcrusherScale=1,this.bitcrusherScaleScale=1,this.bitcrusherFoldLevel=1,this.bitcrusherFoldLevelScale=1,this.eqFilters=[],this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.panningDelayLine=null,this.panningDelayPos=0,this.panningVolumeL=0,this.panningVolumeR=0,this.panningVolumeDeltaL=0,this.panningVolumeDeltaR=0,this.panningOffsetL=0,this.panningOffsetR=0,this.panningOffsetDeltaL=0,this.panningOffsetDeltaR=0,this.chorusDelayLineL=null,this.chorusDelayLineR=null,this.chorusDelayLineDirty=!1,this.chorusDelayPos=0,this.chorusPhase=0,this.chorusVoiceMult=0,this.chorusVoiceMultDelta=0,this.chorusCombinedMult=0,this.chorusCombinedMultDelta=0,this.ringModMix=0,this.ringModMixDelta=0,this.ringModPhase=0,this.ringModPhaseDelta=0,this.ringModPhaseDeltaScale=1,this.rmWaveformIndex=0,this.rmPulseWidth=0,this.rmHzOffset=0,this.invertWave=!1,this.echoDelayLineL=null,this.echoDelayLineR=null,this.echoDelayLineDirty=!1,this.echoDelayPos=0,this.echoDelayOffsetStart=0,this.echoDelayOffsetEnd=null,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=0,this.echoMult=0,this.echoMultDelta=0,this.echoShelfA1=0,this.echoShelfB0=0,this.echoShelfB1=0,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbDelayLine=null,this.reverbDelayLineDirty=!1,this.reverbDelayPos=0,this.reverbMult=0,this.reverbMultDelta=0,this.reverbShelfA1=0,this.reverbShelfB0=0,this.reverbShelfB1=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.phaserSamples=null,this.phaserPrevInputs=null,this.phaserFeedbackMult=0,this.phaserFeedbackMultDelta=0,this.phaserMix=0,this.phaserMixDelta=0,this.phaserBreakCoef=0,this.phaserBreakCoefDelta=0,this.phaserStages=0,this.phaserStagesDelta=0,this.envelopeComputer=new Ke,this.spectrumWave=new Re,this.harmonicsWave=new Be,this.drumsetSpectrumWaves=[];for(let e=0;e<h.drumCount;e++)this.drumsetSpectrumWaves[e]=new Re}allocateNecessaryBuffers(e,t,n){if(z(t.effects)&&(null==this.panningDelayLine||this.panningDelayLine.length<e.panningDelayBufferSize)&&(this.panningDelayLine=new Float32Array(e.panningDelayBufferSize)),I(t.effects)&&((null==this.chorusDelayLineL||this.chorusDelayLineL.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(e.chorusDelayBufferSize)),(null==this.chorusDelayLineR||this.chorusDelayLineR.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(e.chorusDelayBufferSize))),C(t.effects)){const e=Math.max(h.echoDelayRange>>1,t.echoDelay+1),i=2*Ze.fittingPowerOfTwo(e*h.echoDelayStepTicks*n);if(null==this.echoDelayLineL||null==this.echoDelayLineR)this.echoDelayLineL=new Float32Array(i),this.echoDelayLineR=new Float32Array(i);else if(this.echoDelayLineL.length<i||this.echoDelayLineR.length<i){const e=new Float32Array(i),t=new Float32Array(i),n=this.echoDelayLineL.length-1;for(let i=0;i<this.echoDelayLineL.length;i++)e[i]=this.echoDelayLineL[this.echoDelayPos+i&n],t[i]=this.echoDelayLineL[this.echoDelayPos+i&n];this.echoDelayPos=this.echoDelayLineL.length,this.echoDelayLineL=e,this.echoDelayLineR=t}}H(t.effects)&&null==this.reverbDelayLine&&(this.reverbDelayLine=new Float32Array(h.reverbDelayBufferSize)),O(t.effects)&&null==this.phaserSamples&&(this.phaserSamples=new Float32Array(h.phaserMaxStages),this.phaserPrevInputs=new Float32Array(h.phaserMaxStages))}deactivate(){this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1;for(let e=0;e<this.eqFilterCount;e++)this.eqFilters[e].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.panningDelayPos=0,null!=this.panningDelayLine)for(let e=0;e<this.panningDelayLine.length;e++)this.panningDelayLine[e]=0;if(this.echoDelayOffsetEnd=null,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,null!=this.phaserSamples)for(let e=0;e<this.phaserSamples.length;e++)this.phaserSamples[e]=0;if(null!=this.phaserPrevInputs)for(let e=0;e<this.phaserPrevInputs.length;e++)this.phaserPrevInputs[e]=0;this.volumeScale=1,this.aliases=!1,this.invertWave=!1,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){this.deactivate(),this.vibratoTime=0,this.nextVibratoTime=0,this.arpTime=0;for(let e=0;e<h.maxEnvelopeCount+1;e++)this.envelopeTime[e]=0;if(this.envelopeComputer.reset(),this.chorusDelayLineDirty){for(let e=0;e<this.chorusDelayLineL.length;e++)this.chorusDelayLineL[e]=0;for(let e=0;e<this.chorusDelayLineR.length;e++)this.chorusDelayLineR[e]=0}if(this.echoDelayLineDirty){for(let e=0;e<this.echoDelayLineL.length;e++)this.echoDelayLineL[e]=0;for(let e=0;e<this.echoDelayLineR.length;e++)this.echoDelayLineR[e]=0}if(this.reverbDelayLineDirty)for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;this.chorusPhase=0,this.ringModPhase=0}compute(e,t,n,i,a,s,o){this.computed=!0,this.type=t.type,this.synthesizer=Ze.getInstrumentSynthFunction(t),this.unison=h.unisons[t.unison],this.unisonBuzzes=t.unisonBuzzes,this.chord=t.getChord(),this.noisePitchFilterMult=h.chipNoises[t.chipNoise].pitchFilterMult,this.effects=t.effects,this.aliases=t.aliases,this.invertWave=t.invertWave,this.volumeScale=1,this.allocateNecessaryBuffers(e,t,n);const r=e.samplesPerSecond;this.updateWaves(t,r);const l=e.getTicksIntoBar(),p=n/e.samplesPerSecond,c=e.getCurrentPart(),u=[];for(let e=0;e<h.maxEnvelopeCount;e++)u[e]=0;let f=h.arpSpeedScale[t.envelopeSpeed];e.isModActive(h.modulators.dictionary["envelope speed"].index,s,o)&&(f=Math.max(0,Math.min(h.arpSpeedScale.length-1,e.getModValue(h.modulators.dictionary["envelope speed"].index,s,o,!1))),f=Number.isInteger(f)?h.arpSpeedScale[f]:(1-f%1)*h.arpSpeedScale[Math.floor(f)]+f%1*h.arpSpeedScale[Math.ceil(f)]);for(let n=0;n<t.envelopeCount;n++){let i=t.envelopes[n].perEnvelopeSpeed;e.isModActive(h.modulators.dictionary["individual envelope speed"].index,s,o)&&null!=t.envelopes[n].tempEnvelopeSpeed&&(i=t.envelopes[n].tempEnvelopeSpeed),u[n]=f*i}this.envelopeComputer.computeEnvelopes(t,c,this.envelopeTime,l,p,a,u,this,e);const d=this.envelopeComputer.envelopeStarts,m=this.envelopeComputer.envelopeEnds,y=P(this.effects),g=T(this.effects),v=z(this.effects),b=I(this.effects),w=C(this.effects),S=H(this.effects),x=D(this.effects),k=O(this.effects);if(y){let n=t.distortion,a=t.distortion,r=d[48],l=m[48];e.isModActive(h.modulators.dictionary.distortion.index,s,o)&&(n=e.getModValue(h.modulators.dictionary.distortion.index,s,o,!1),a=e.getModValue(h.modulators.dictionary.distortion.index,s,o,!0)),e.isModActive(h.modulators.dictionary["song distortion"].index,s,o)&&(n=we(0,h.distortionRange,n*(e.getModValue(h.modulators.dictionary["song distortion"].index,void 0,void 0,!1)-h.modulators.dictionary["song distortion"].convertRealFactor)/h.distortionRange),a=we(0,h.distortionRange,a*(e.getModValue(h.modulators.dictionary["song distortion"].index,void 0,void 0,!0)-h.modulators.dictionary["song distortion"].convertRealFactor)/h.distortionRange));const p=Math.min(1,n*r/(h.distortionRange-1)),c=Math.min(1,a*l/(h.distortionRange-1)),u=Math.pow(1-.895*(Math.pow(20,p)-1)/19,2),f=Math.pow(1-.895*(Math.pow(20,c)-1)/19,2),y=(1+2*p)/h.distortionBaseVolume,g=(1+2*c)/h.distortionBaseVolume;this.distortion=u,this.distortionDelta=(f-u)/i,this.distortionDrive=y,this.distortionDriveDelta=(g-y)/i}if(g){let n=t.bitcrusherFreq,a=t.bitcrusherFreq,l=d[50],p=m[50];e.isModActive(h.modulators.dictionary["freq crush"].index,s,o)&&(n=e.getModValue(h.modulators.dictionary["freq crush"].index,s,o,!1),a=e.getModValue(h.modulators.dictionary["freq crush"].index,s,o,!0));let c=t.bitcrusherQuantization,u=t.bitcrusherQuantization,f=d[49],y=m[49];e.isModActive(h.modulators.dictionary["bit crush"].index,s,o)&&(c=e.getModValue(h.modulators.dictionary["bit crush"].index,s,o,!1),u=e.getModValue(h.modulators.dictionary["bit crush"].index,s,o,!0)),e.isModActive(h.modulators.dictionary["song bitcrush"].index,s,o)&&(c=we(0,h.bitcrusherQuantizationRange,c*(e.getModValue(h.modulators.dictionary["song bitcrush"].index,void 0,void 0,!1)-h.modulators.dictionary["song bitcrush"].convertRealFactor)/h.bitcrusherQuantizationRange),u=we(0,h.bitcrusherQuantizationRange,u*(e.getModValue(h.modulators.dictionary["song bitcrush"].index,void 0,void 0,!0)-h.modulators.dictionary["song bitcrush"].convertRealFactor)/h.bitcrusherQuantizationRange)),e.isModActive(h.modulators.dictionary["song freqcrush"].index,s,o)&&(n=we(0,h.bitcrusherFreqRange,n*(e.getModValue(h.modulators.dictionary["song freqcrush"].index,void 0,void 0,!1)-h.modulators.dictionary["song freqcrush"].convertRealFactor)/h.bitcrusherFreqRange),a=we(0,h.bitcrusherFreqRange,a*(e.getModValue(h.modulators.dictionary["song freqcrush"].index,void 0,void 0,!0)-h.modulators.dictionary["song freqcrush"].convertRealFactor)/h.bitcrusherFreqRange));const g=h.keys[e.song.key].basePitch+h.pitchesPerOctave*e.song.octave,v=Ue.frequencyFromPitch(g+60)*Math.pow(2,(h.bitcrusherFreqRange-1-n*l)*h.bitcrusherOctaveStep),b=Ue.frequencyFromPitch(g+60)*Math.pow(2,(h.bitcrusherFreqRange-1-a*p)*h.bitcrusherOctaveStep),w=Math.min(1,v/r),S=Math.min(1,b/r);this.bitcrusherPhaseDelta=w,this.bitcrusherPhaseDeltaScale=Math.pow(S/w,1/i);const x=2*h.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(h.bitcrusherQuantizationRange-1-c*f))),k=2*h.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(h.bitcrusherQuantizationRange-1-u*y)));this.bitcrusherScale=x,this.bitcrusherScaleScale=Math.pow(k/x,1/i);const M=2*h.bitcrusherBaseVolume*Math.pow(1.5,h.bitcrusherQuantizationRange-1-c*f),F=2*h.bitcrusherBaseVolume*Math.pow(1.5,h.bitcrusherQuantizationRange-1-u*y);this.bitcrusherFoldLevel=M,this.bitcrusherFoldLevelScale=Math.pow(F/M,1/i)}let M=1;if(t.eqFilterType){const n=t.eqFilter;null==t.eqSubFilters[1]&&(t.eqSubFilters[1]=new Ve);const a=t.eqSubFilters[1];let l,p=t.eqFilterSimpleCut,c=t.eqFilterSimplePeak,u=t.eqFilterSimpleCut,f=t.eqFilterSimplePeak,d=!1;if(e.isModActive(h.modulators.dictionary["eq filt cut"].index,s,o)&&(p=e.getModValue(h.modulators.dictionary["eq filt cut"].index,s,o,!1),u=e.getModValue(h.modulators.dictionary["eq filt cut"].index,s,o,!0),d=!0),e.isModActive(h.modulators.dictionary["eq filt peak"].index,s,o)&&(c=e.getModValue(h.modulators.dictionary["eq filt peak"].index,s,o,!1),f=e.getModValue(h.modulators.dictionary["eq filt peak"].index,s,o,!0),d=!0),d){n.convertLegacySettingsForSynth(p,c),a.convertLegacySettingsForSynth(u,f),l=n.controlPoints[0];let e=a.controlPoints[0];l.toCoefficients(Ze.tempFilterStartCoefficients,r,1,1),e.toCoefficients(Ze.tempFilterEndCoefficients,r,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new he),this.eqFilters[0].loadCoefficientsWithGradient(Ze.tempFilterStartCoefficients,Ze.tempFilterEndCoefficients,1/i,0==l.type)}else n.convertLegacySettingsForSynth(p,c,!0),l=n.controlPoints[0],l.toCoefficients(Ze.tempFilterStartCoefficients,r,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new he),this.eqFilters[0].loadCoefficientsWithGradient(Ze.tempFilterStartCoefficients,Ze.tempFilterStartCoefficients,1/i,0==l.type);M*=l.getVolumeCompensationMult(),this.eqFilterCount=1,M=Math.min(3,M)}else{const e=null!=t.tmpEqFilterStart?t.tmpEqFilterStart:t.eqFilter;for(let n=0;n<e.controlPointCount;n++){let a=e.controlPoints[n],s=null!=t.tmpEqFilterEnd&&null!=t.tmpEqFilterEnd.controlPoints[n]?t.tmpEqFilterEnd.controlPoints[n]:e.controlPoints[n];a.type!=s.type&&(a=s),a.toCoefficients(Ze.tempFilterStartCoefficients,r,1,1),s.toCoefficients(Ze.tempFilterEndCoefficients,r,1,1),this.eqFilters.length<=n&&(this.eqFilters[n]=new he),this.eqFilters[n].loadCoefficientsWithGradient(Ze.tempFilterStartCoefficients,Ze.tempFilterEndCoefficients,1/i,0==a.type),M*=a.getVolumeCompensationMult()}this.eqFilterCount=e.controlPointCount,M=Math.min(3,M)}const F=Ze.instrumentVolumeToVolumeMult(t.volume);this.mixVolume=F;let q=F;if(e.isModActive(h.modulators.dictionary["mix volume"].index,s,o)){const t=e.getModValue(h.modulators.dictionary["mix volume"].index,s,o,!1),n=e.getModValue(h.modulators.dictionary["mix volume"].index,s,o,!0);this.mixVolume*=t<=0?(t+h.volumeRange/2)/(h.volumeRange/2):Ze.instrumentVolumeToVolumeMult(t),q*=n<=0?(n+h.volumeRange/2)/(h.volumeRange/2):Ze.instrumentVolumeToVolumeMult(n)}e.isModActive(h.modulators.dictionary["song volume"].index)&&(this.mixVolume*=e.getModValue(h.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,q*=e.getModValue(h.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(q-this.mixVolume)/i;let G=M,L=M,E=1,A=1;if(v){const n=2*d[54]-1,a=2*m[54]-1;let l=t.pan,p=t.pan;e.isModActive(h.modulators.dictionary.pan.index,s,o)&&(l=e.getModValue(h.modulators.dictionary.pan.index,s,o,!1),p=e.getModValue(h.modulators.dictionary.pan.index,s,o,!0)),e.isModActive(h.modulators.dictionary["song panning"].index,s,o)&&(l=we(-h.panMax/2,h.panMax,l+e.getModValue(h.modulators.dictionary["song panning"].index,void 0,void 0,!1)),p=we(-h.panMax/2,h.panMax,p+e.getModValue(h.modulators.dictionary["song panning"].index,void 0,void 0,!0)));let c=Math.max(-1,Math.min(1,(l-h.panCenter)/h.panCenter*n)),u=Math.max(-1,Math.min(1,(p-h.panCenter)/h.panCenter*a));const f=1.414*Math.cos((1+c)*Math.PI*.25),y=1.414*Math.cos((1-c)*Math.PI*.25),g=1.414*Math.cos((1+u)*Math.PI*.25),v=1.414*Math.cos((1-u)*Math.PI*.25),b=r*h.panDelaySecondsMax;let w=t.panDelay,S=t.panDelay;e.isModActive(h.modulators.dictionary["pan delay"].index,s,o)&&(w=e.getModValue(h.modulators.dictionary["pan delay"].index,s,o,!1),S=e.getModValue(h.modulators.dictionary["pan delay"].index,s,o,!0));const x=c*w*b/10,k=u*S*b/10,M=Math.max(0,x),F=Math.max(0,-x),q=Math.max(0,k),P=Math.max(0,-k);this.panningVolumeL=f,this.panningVolumeR=y,this.panningVolumeDeltaL=(g-f)/i,this.panningVolumeDeltaR=(v-y)/i,this.panningOffsetL=this.panningDelayPos-M+e.panningDelayBufferSize,this.panningOffsetR=this.panningDelayPos-F+e.panningDelayBufferSize,this.panningOffsetDeltaL=(q-M)/i,this.panningOffsetDeltaR=(P-F)/i}if(b){const n=d[51],a=m[51];let r=t.chorus,l=t.chorus;e.isModActive(h.modulators.dictionary.chorus.index,s,o)&&(r=e.getModValue(h.modulators.dictionary.chorus.index,s,o,!1),l=e.getModValue(h.modulators.dictionary.chorus.index,s,o,!0)),e.isModActive(h.modulators.dictionary["song chorus"].index,s,o)&&(r=we(0,h.chorusRange,r*(e.getModValue(h.modulators.dictionary["song chorus"].index,void 0,void 0,!1)-h.modulators.dictionary["song chorus"].convertRealFactor)/h.chorusRange),l=we(0,h.chorusRange,l*(e.getModValue(h.modulators.dictionary["song chorus"].index,void 0,void 0,!0)-h.modulators.dictionary["song chorus"].convertRealFactor)/h.chorusRange));let p=Math.min(1,r*n/(h.chorusRange-1)),c=Math.min(1,l*a/(h.chorusRange-1));p=.6*p+.4*Math.pow(p,6),c=.6*c+.4*Math.pow(c,6);const u=1/Math.sqrt(3*p*p+1),f=1/Math.sqrt(3*c*c+1);this.chorusVoiceMult=p,this.chorusVoiceMultDelta=(c-p)/i,this.chorusCombinedMult=u,this.chorusCombinedMultDelta=(f-u)/i}if(x){let n=t.ringModulation,a=t.ringModulation,r=d[45],l=m[45],p=Math.min(1,t.ringModulationHz/(h.ringModHzRange-1)),c=Math.min(1,t.ringModulationHz/(h.ringModHzRange-1)),u=d[46],f=m[46],y=20,g=4400;e.isModActive(h.modulators.dictionary["ring modulation"].index,s,o)&&(n=e.getModValue(h.modulators.dictionary["ring modulation"].index,s,o,!1),a=e.getModValue(h.modulators.dictionary["ring modulation"].index,s,o,!0)),e.isModActive(h.modulators.dictionary["song ring modulation"].index,s,o)&&(n=we(0,h.ringModRange,n*(e.getModValue(h.modulators.dictionary["song ring modulation"].index,void 0,void 0,!1)-h.modulators.dictionary["song ring modulation"].convertRealFactor)/h.ringModRange),a=we(0,h.ringModRange,a*(e.getModValue(h.modulators.dictionary["song ring modulation"].index,void 0,void 0,!0)-h.modulators.dictionary["song ring modulation"].convertRealFactor)/h.ringModRange)),e.isModActive(h.modulators.dictionary["ring mod hertz"].index,s,o)&&(p=Math.min(1,Math.max(0,e.getModValue(h.modulators.dictionary["ring mod hertz"].index,s,o,!1)/(h.ringModHzRange-1))),c=Math.min(1,Math.max(0,e.getModValue(h.modulators.dictionary["ring mod hertz"].index,s,o,!1)/(h.ringModHzRange-1))));let v=Math.min(1,n*r/(h.ringModRange-1)),b=Math.min(1,a*l/(h.ringModRange-1));this.ringModMix=v,this.ringModMixDelta=(b-v)/i,this.rmHzOffset=t.rmHzOffset;let w=we(1,g+h.rmHzOffsetCenter,y*Math.pow(g/y,p)*u+(this.rmHzOffset-h.rmHzOffsetCenter))/e.samplesPerSecond,S=we(1,g+h.rmHzOffsetCenter,y*Math.pow(g/y,c)*f+(this.rmHzOffset-h.rmHzOffsetCenter))/e.samplesPerSecond;this.ringModPhaseDelta=w,this.ringModPhaseDeltaScale=Math.pow(S/w,1/i),this.rmWaveformIndex=t.rmWaveformIndex,this.rmPulseWidth=t.rmPulseWidth}let R=0,N=0;if(w){const a=d[52],l=m[52];let p=t.echoSustain,c=t.echoSustain;e.isModActive(h.modulators.dictionary.echo.index,s,o)&&(p=Math.max(0,e.getModValue(h.modulators.dictionary.echo.index,s,o,!1)),c=Math.max(0,e.getModValue(h.modulators.dictionary.echo.index,s,o,!0)));const u=.9*Math.min(1,Math.pow(p*a/h.echoSustainRange,1.1)),f=.9*Math.min(1,Math.pow(c*l/h.echoSustainRange,1.1));this.echoMult=u,this.echoMultDelta=Math.max(0,(f-u)/i),R=Math.max(u,f);let y=t.echoDelay,g=t.echoDelay,v=!1;e.isModActive(h.modulators.dictionary["echo delay"].index,s,o)&&(y=e.getModValue(h.modulators.dictionary["echo delay"].index,s,o,!1),g=e.getModValue(h.modulators.dictionary["echo delay"].index,s,o,!0),v=!0);const b=Math.round((y+1)*h.echoDelayStepTicks*n),w=Math.round((g+1)*h.echoDelayStepTicks*n);null==this.echoDelayOffsetEnd||v?this.echoDelayOffsetStart=b:this.echoDelayOffsetStart=this.echoDelayOffsetEnd,this.echoDelayOffsetEnd=w,N=.5*(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)/r,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=1/i;const S=2*Math.PI*h.echoShelfHz/e.samplesPerSecond;Ze.tempFilterStartCoefficients.highShelf1stOrder(S,h.echoShelfGain),this.echoShelfA1=Ze.tempFilterStartCoefficients.a[1],this.echoShelfB0=Ze.tempFilterStartCoefficients.b[0],this.echoShelfB1=Ze.tempFilterStartCoefficients.b[1]}let B=0;if(k){const n=0,a=.95,l=t.phaserFeedback/h.phaserFeedbackRange;let p=l*d[43],c=l*m[43];e.isModActive(h.modulators.dictionary["phaser feedback"].index,s,o)&&(p=e.getModValue(h.modulators.dictionary["phaser feedback"].index,s,o,!1)/h.phaserFeedbackRange,c=e.getModValue(h.modulators.dictionary["phaser feedback"].index,s,o,!0)/h.phaserFeedbackRange);const u=Math.max(n,Math.min(a,p)),f=Math.max(n,Math.min(a,c));this.phaserFeedbackMult=u,this.phaserFeedbackMultDelta=(f-u)/i;const y=t.phaserMix/(h.phaserMixRange-1);let g=y*d[42],v=y*m[42];e.isModActive(h.modulators.dictionary.phaser.index,s,o)&&(g=Math.max(0,Math.min(h.phaserMixRange-1,e.getModValue(h.modulators.dictionary.phaser.index,s,o,!1)))/(h.phaserMixRange-1),v=Math.max(0,Math.min(h.phaserMixRange-1,e.getModValue(h.modulators.dictionary.phaser.index,s,o,!0)))/(h.phaserMixRange-1)),this.phaserMix=g,this.phaserMixDelta=(v-g)/i;const b=t.phaserFreq/(h.phaserFreqRange-1);let w=b*d[41],S=b*m[41];e.isModActive(h.modulators.dictionary["phaser frequency"].index,s,o)&&(w=e.getModValue(h.modulators.dictionary["phaser frequency"].index,s,o,!1)/h.phaserFreqRange,S=e.getModValue(h.modulators.dictionary["phaser frequency"].index,s,o,!0)/h.phaserFreqRange);const x=h.phaserMinFreq*Math.pow(h.phaserMaxFreq/h.phaserMinFreq,w),k=h.phaserMinFreq*Math.pow(h.phaserMaxFreq/h.phaserMinFreq,S),M=Math.max(h.phaserMinFreq,Math.min(h.phaserMaxFreq,x)),F=Math.tan(Math.PI*M/r),q=(F-1)/(F+1),P=Math.max(h.phaserMinFreq,Math.min(h.phaserMaxFreq,k)),T=Math.tan(Math.PI*P/r),z=(T-1)/(T+1);this.phaserBreakCoef=q,this.phaserBreakCoefDelta=(z-q)/i;const I=d[44],C=m[44],H=t.phaserStages;let D=Math.max(h.phaserMinStages,Math.min(h.phaserMaxStages,H*I)),O=Math.max(h.phaserMinStages,Math.min(h.phaserMaxStages,H*C));e.isModActive(h.modulators.dictionary["phaser stages"].index,s,o)&&(D=Math.round(e.getModValue(h.modulators.dictionary["phaser stages"].index,s,o,!1)),O=Math.round(e.getModValue(h.modulators.dictionary["phaser stages"].index,s,o,!1))),this.phaserStages=D,this.phaserStagesDelta=(O-D)/i}if(S){const n=d[53],a=m[53];let r=t.reverb,l=t.reverb;e.isModActive(h.modulators.dictionary.reverb.index,s,o)&&(r=e.getModValue(h.modulators.dictionary.reverb.index,s,o,!1),l=e.getModValue(h.modulators.dictionary.reverb.index,s,o,!0)),e.isModActive(h.modulators.dictionary["song reverb"].index,s,o)&&(r*=(e.getModValue(h.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-h.modulators.dictionary["song reverb"].convertRealFactor)/h.reverbRange,l*=(e.getModValue(h.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-h.modulators.dictionary["song reverb"].convertRealFactor)/h.reverbRange);const p=.425*Math.min(1,Math.pow(n*r/h.reverbRange,.667)),c=.425*Math.min(1,Math.pow(a*l/h.reverbRange,.667));this.reverbMult=p,this.reverbMultDelta=(c-p)/i,B=Math.max(p,c);const u=2*Math.PI*h.reverbShelfHz/e.samplesPerSecond;Ze.tempFilterStartCoefficients.highShelf1stOrder(u,h.reverbShelfGain),this.reverbShelfA1=Ze.tempFilterStartCoefficients.a[1],this.reverbShelfB0=Ze.tempFilterStartCoefficients.b[0],this.reverbShelfB1=Ze.tempFilterStartCoefficients.b[1]}if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines){G=0,L=0,E=0,A=0;let t=0;b&&(t+=e.chorusDelayBufferSize),w&&(t+=this.echoDelayLineL.length),S&&(t+=h.reverbDelayBufferSize),this.flushedSamples+=i,this.flushedSamples>=t&&(this.deactivateAfterThisTick=!0)}else{0==this.attentuationProgress||(G=0),L=0;const e=1/256,t=-Math.log2(e);let i=0;if(b&&(i+=h.chorusMaxDelay),w){const e=Math.pow(R,1/N);i+=-1/Math.log2(e)*t}if(S){const e=2*B,n=h.reverbDelayBufferSize/4/r,a=Math.pow(e,1/n);i+=-1/Math.log2(a)*t}const a=n/r/i,s=this.attentuationProgress+a;s>=1&&(A=0),this.attentuationProgress=s,this.attentuationProgress>=1&&(this.flushingDelayLines=!0)}this.eqFilterVolume=G,this.eqFilterVolumeDelta=(L-G)/i,this.delayInputMult=E,this.delayInputMultDelta=(A-E)/i}updateWaves(e,t){if(this.volumeScale=1,0!=e.type&&6!=e.type&&9!=e.type&&2!=e.type&&5!=e.type&&7!=e.type&&3!=e.type||(this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign,this.unisonBuzzes=e.unisonBuzzes),0==e.type)this.wave=this.aliases?h.rawChipWaves[e.chipWave].samples:h.chipWaves[e.chipWave].samples,this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset;else if(9==e.type)this.wave=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.volumeScale=.05;else if(2==e.type)this.wave=m(e.chipNoise,se,ie);else if(5==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type);else if(7==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type);else if(3==e.type)this.wave=this.spectrumWave.getCustomWave(e.spectrumWave,8);else if(4==e.type){for(let t=0;t<h.drumCount;t++)this.drumsetSpectrumWaves[t].getCustomWave(e.drumsetSpectrumWaves[t],Xe.oe(t));this.wave=null}else this.wave=null}getDrumsetWave(e){if(4==this.type)return this.drumsetSpectrumWaves[e].wave;throw new Error("Unhandled instrument type in getDrumsetWave")}static drumsetIndexReferenceDelta(e){return Ue.frequencyFromPitch(h.spectrumBasePitch+6*e)/44100}static oe(e){return 15+Math.log2(Xe.drumsetIndexReferenceDelta(e))}}class Ye{constructor(){this.instruments=[],this.muted=!1,this.singleSeamlessInstrument=null}}class Ze{syncSongState(){const e=this.song.getChannelCount();for(let t=this.channels.length;t<e;t++)this.channels[t]=new Ye;this.channels.length=e;for(let t=0;t<e;t++){const e=this.song.channels[t],n=this.channels[t];for(let t=n.instruments.length;t<e.instruments.length;t++)n.instruments[t]=new Xe;if(n.instruments.length=e.instruments.length,n.muted!=e.muted&&(n.muted=e.muted,n.muted))for(const e of n.instruments)e.resetAllEffects()}}initModFilters(e){if(null!=e)for(let t=0;t<e.getChannelCount();t++)for(let n=0;n<e.channels[t].instruments.length;n++){const i=e.channels[t].instruments[n];i.tmpEqFilterStart=i.eqFilter,i.tmpEqFilterEnd=null,i.tmpNoteFilterStart=i.noteFilter,i.tmpNoteFilterEnd=null}}warmUpSynthesizer(e){if(null!=e){this.syncSongState();const t=this.getSamplesPerTick();for(let n=0;n<e.getChannelCount();n++)for(let i=0;i<e.channels[n].instruments.length;i++){const a=e.channels[n].instruments[i],s=this.channels[n].instruments[i];Ze.getInstrumentSynthFunction(a),s.vibratoTime=0,s.nextVibratoTime=0;for(let e=0;e<h.maxEnvelopeCount+1;e++)s.envelopeTime[e]=0;s.arpTime=0,s.updateWaves(a,this.samplesPerSecond),s.allocateNecessaryBuffers(this,a,t)}}var t=new Float32Array(1);this.isPlayingSong=!0,this.synthesize(t,t,1,!0),this.isPlayingSong=!1}computeLatestModValues(){if(null!=this.song&&this.song.modChannelCount>0){let e=[],t=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[],this.heldMods=[];for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){t[e]=[],this.modInsValues[e]=[],this.nextModInsValues[e]=[];for(let n=0;n<this.song.channels[e].instruments.length;n++)this.modInsValues[e][n]=[],this.nextModInsValues[e][n]=[],t[e][n]=[]}let n=this.beat*h.partsPerBeat+this.part;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++)if(!this.song.channels[i].muted){let a;for(let s=this.bar;s>=0;s--)if(a=this.song.getPattern(i,s),null!=a){let o=a.instruments[0],r=this.song.channels[i].instruments[o],l=[],p=[],c=s==this.bar?n:this.findPartsInBar(s);for(const e of a.notes)if(e.start<=c&&(null==l[h.modCount-1-e.pitches[0]]||e.end>l[h.modCount-1-e.pitches[0]]))if(e.start==c&&(l[h.modCount-1-e.pitches[0]]=e.start,p[h.modCount-1-e.pitches[0]]=e.pins[0].size),e.end<=c)l[h.modCount-1-e.pitches[0]]=e.end,p[h.modCount-1-e.pitches[0]]=e.pins[e.pins.length-1].size;else{l[h.modCount-1-e.pitches[0]]=c;for(let t=0;t<e.pins.length;t++)if(e.pins[t].time+e.start>c){const n=e.pins[t].time-e.pins[t-1].time,i=c-e.start-e.pins[t-1].time,a=e.pins[t].size-e.pins[t-1].size;p[h.modCount-1-e.pitches[0]]=Math.round(e.pins[t-1].size+a*i/n),t=e.pins.length}}for(let n=0;n<h.modCount;n++)if(null!=l[n])if(h.modulators[r.modulators[n]].forSong)(null==e[r.modulators[n]]||s*h.partsPerBeat*this.song.beatsPerBar+l[n]>e[r.modulators[n]])&&(this.setModValue(p[n],p[n],r.modChannels[n],r.modInstruments[n],r.modulators[n]),e[r.modulators[n]]=s*h.partsPerBeat*this.song.beatsPerBar+l[n]);else{let e=[];if(r.modInstruments[n]==this.song.channels[r.modChannels[n]].instruments.length)for(let t=0;t<this.song.channels[r.modChannels[n]].instruments.length;t++)e.push(t);else if(r.modInstruments[n]>this.song.channels[r.modChannels[n]].instruments.length){const t=this.song.getPattern(r.modChannels[n],s);null!=t&&(e=t.instruments)}else e.push(r.modInstruments[n]);for(let i=0;i<e.length;i++){const a=r.modulators[n]==h.modulators.dictionary["eq filter"].index,o=r.modulators[n]==h.modulators.dictionary["note filter"].index;let c=r.modulators[n];if(a?c=h.modulators.length+(0|r.modFilterTypes[n]):o&&(c=h.modulators.length+1+2*h.filterMaxPoints+(0|r.modFilterTypes[n])),null==t[r.modChannels[n]][e[i]][c]||s*h.partsPerBeat*this.song.beatsPerBar+l[n]>t[r.modChannels[n]][e[i]][c]){if(a){let t=this.song.channels[r.modChannels[n]].instruments[e[i]];if(0==r.modFilterTypes[n])t.tmpEqFilterStart=t.eqSubFilters[p[n]];else{for(let e=0;e<h.filterMorphCount;e++)null!=t.tmpEqFilterStart&&t.tmpEqFilterStart==t.eqSubFilters[e]&&(t.tmpEqFilterStart=new Ve,t.tmpEqFilterStart.fromJsonObject(t.eqSubFilters[e].toJsonObject()),e=h.filterMorphCount);null!=t.tmpEqFilterStart&&Math.floor((r.modFilterTypes[n]-1)/2)<t.tmpEqFilterStart.controlPointCount&&(r.modFilterTypes[n]%2?t.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].freq=p[n]:t.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].gain=p[n])}t.tmpEqFilterEnd=t.tmpEqFilterStart}else if(o){let t=this.song.channels[r.modChannels[n]].instruments[e[i]];if(0==r.modFilterTypes[n])t.tmpNoteFilterStart=t.noteSubFilters[p[n]];else{for(let e=0;e<h.filterMorphCount;e++)null!=t.tmpNoteFilterStart&&t.tmpNoteFilterStart==t.noteSubFilters[e]&&(t.tmpNoteFilterStart=new Ve,t.tmpNoteFilterStart.fromJsonObject(t.noteSubFilters[e].toJsonObject()),e=h.filterMorphCount);null!=t.tmpNoteFilterStart&&Math.floor((r.modFilterTypes[n]-1)/2)<t.tmpNoteFilterStart.controlPointCount&&(r.modFilterTypes[n]%2?t.tmpNoteFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].freq=p[n]:t.tmpNoteFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].gain=p[n])}t.tmpNoteFilterEnd=t.tmpNoteFilterStart}else this.setModValue(p[n],p[n],r.modChannels[n],e[i],c);t[r.modChannels[n]][e[i]][c]=s*h.partsPerBeat*this.song.beatsPerBar+l[n]}}}}}}}determineInvalidModulators(e){if(null!=this.song)for(let t=0;t<h.modCount;t++){if(e.invalidModulators[t]=!0,-1==e.modChannels[t]){0!=e.modulators[t]&&(e.invalidModulators[t]=!1);continue}const n=this.song.channels[e.modChannels[t]];if(null==n)continue;let i=[];i=e.modInstruments[t]>=n.instruments.length?n.instruments:[n.instruments[e.modInstruments[t]]];for(let n=0;n<i.length;n++){const a=i[n];if(null==a)continue;const s=h.modulators[e.modulators[t]].name;16!=h.modulators[e.modulators[t]].associatedEffect&&!(a.effects&1<<h.modulators[e.modulators[t]].associatedEffect)||1!=a.type&&11!=a.type&&("fm slider 1"==s||"fm slider 2"==s||"fm slider 3"==s||"fm slider 4"==s||"fm feedback"==s)||11!=a.type&&("fm slider 5"==s||"fm slider 6"==s)||6!=a.type&&8!=a.type&&("pulse width"==s||"decimal offset"==s)||8!=a.type&&("dynamism"==s||"spread"==s||"saw shape"==s)||!a.getChord().arpeggiates&&("arp speed"==s||"reset arp"==s)||a.eqFilterType&&"eq filter"==s||!a.eqFilterType&&("eq filt cut"==s||"eq filt peak"==s)||"eq filter"==s&&Math.floor((e.modFilterTypes[t]+1)/2)>a.getLargestControlPointCount(!1)||a.noteFilterType&&"note filter"==s||!a.noteFilterType&&("note filt cut"==s||"note filt peak"==s)||"note filter"==s&&Math.floor((e.modFilterTypes[t]+1)/2)>a.getLargestControlPointCount(!0)||(e.invalidModulators[t]=!1,n=i.length)}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}get playing(){return this.isPlayingSong}get recording(){return this.isRecording}get playhead(){return this.playheadInternal}set playhead(e){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let t=this.playheadInternal;this.bar=Math.floor(t),t=this.song.beatsPerBar*(t-this.bar),this.beat=Math.floor(t),t=h.partsPerBeat*(t-this.beat),this.part=Math.floor(t),t=h.ticksPerPart*(t-this.part),this.tick=Math.floor(t),this.tickSampleCountdown=0,this.isAtStartOfTick=!0,this.prevBar=null}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*h.ticksPerPart*h.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*h.partsPerBeat+this.part)*h.ticksPerPart+this.tick}getCurrentPart(){return this.beat*h.partsPerBeat+this.part}findPartsInBar(e){if(null==this.song)return 0;let t=h.partsPerBeat*this.song.beatsPerBar;for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++){let i=this.song.getPattern(n,e);if(null!=i){let e=this.song.channels[n].instruments[i.instruments[0]];for(let n=0;n<h.modCount;n++)if(e.modulators[n]==h.modulators.dictionary["next bar"].index)for(const e of i.notes)e.pitches[0]==h.modCount-1-n&&t>e.start&&(t=e.start)}}return t}getTotalSamples(e,t,n){if(null==this.song)return-1;let i=e?0:this.song.loopStart,a=t?this.song.barCount:this.song.loopStart+this.song.loopLength,s=!1,o=!1,r=this.song.tempo;for(let e=this.song.getChannelCount()-1;e>=this.song.pitchChannelCount+this.song.noiseChannelCount;e--)for(let t=i;t<a;t++){let n=this.song.getPattern(e,t);if(null!=n){let t=this.song.channels[e].instruments[n.instruments[0]];for(let e=0;e<h.modCount;e++)t.modulators[e]==h.modulators.dictionary.tempo.index&&(s=!0),t.modulators[e]==h.modulators.dictionary["next bar"].index&&(o=!0)}}if(i>0){let e=null,t=0;for(let n=i-1;n>=0;n--){for(let i=this.song.getChannelCount()-1;i>=this.song.pitchChannelCount+this.song.noiseChannelCount;i--){let a=this.song.getPattern(i,n);if(null!=a){let s=a.instruments[0],o=this.song.channels[i].instruments[s],r=this.findPartsInBar(n);for(const n of a.notes)if(o.modulators[h.modCount-1-n.pitches[0]]==h.modulators.dictionary.tempo.index&&n.start<r&&(null==e||n.end>e))if(n.end<=r)e=n.end,t=n.pins[n.pins.length-1].size;else{e=r;for(let e=0;e<n.pins.length;e++)if(n.pins[e].time+n.start>r){const i=n.pins[e].time-n.pins[e-1].time,a=r-n.start-n.pins[e-1].time,s=n.pins[e].size-n.pins[e-1].size;t=Math.round(n.pins[e-1].size+s*a/i),e=n.pins.length}}}}null!=e&&(r=t+h.modulators.dictionary.tempo.convertRealFactor,n=-1)}}if(s||o){let e=i,t=!1,l=0;for(;!t;){let i=h.partsPerBeat*this.song.beatsPerBar,p=0;if(o&&(i=this.findPartsInBar(e)),s){let t=!1;for(let n=this.song.getChannelCount()-1;n>=this.song.pitchChannelCount+this.song.noiseChannelCount;n--)if(0==t){let a=this.song.getPattern(n,e);if(null!=a){let e=this.song.channels[n].instruments[a.instruments[0]];for(let n=0;n<h.modCount;n++)if(0==t&&e.modulators[n]==h.modulators.dictionary.tempo.index&&a.notes.find((e=>e.pitches[0]==h.modCount-1-n))){t=!0,a.notes.sort((function(e,t){return e.start==t.start?e.pitches[0]-t.pitches[0]:e.start-t.start}));for(const e of a.notes)if(e.pitches[0]==h.modCount-1-n&&(l+=Math.min(i-p,e.start-p)*h.ticksPerPart*this.getSamplesPerTickSpecificBPM(r),e.start<i))for(let t=1;t<e.pins.length;t++){if(e.pins[t-1].time+e.start<=i){const n=h.ticksPerPart*Math.min(i-(e.start+e.pins[t-1].time),e.pins[t].time-e.pins[t-1].time),a=e.pins[t-1].size+h.modulators.dictionary.tempo.convertRealFactor;let s=e.pins[t].size+h.modulators.dictionary.tempo.convertRealFactor;e.pins[t].time+e.start>i&&(s=e.pins[t-1].size+(e.pins[t].size-e.pins[t-1].size)*(i-(e.start+e.pins[t-1].time))/(e.pins[t].time-e.pins[t-1].time)+h.modulators.dictionary.tempo.convertRealFactor);let o=h.partsPerBeat*h.ticksPerPart/60;l+=s!=a?-this.samplesPerSecond*n*(Math.log(o*s*n)-Math.log(o*a*n))/(o*(a-s)):n*this.getSamplesPerTickSpecificBPM(s),r=s}p=Math.min(e.start+e.pins[t].time,i)}}}}}l+=(i-p)*h.ticksPerPart*this.getSamplesPerTickSpecificBPM(r),e++,0!=n&&e==this.song.loopStart+this.song.loopLength&&(e=this.song.loopStart,n>0&&n--),e>=a&&(t=!0)}return Math.ceil(l)}return this.getSamplesPerBar()*this.getTotalBars(e,t,n)}getTotalBars(e,t,n=this.loopRepeatCount){if(null==this.song)throw new Error;let i=this.song.loopLength*(n+1);return e&&(i+=this.song.loopStart),t&&(i+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),i}constructor(e=null){this.samplesPerSecond=44100,this.song=null,this.preferLowerLatency=!1,this.anticipatePoorPerformance=!1,this.liveInputDuration=0,this.liveBassInputDuration=0,this.liveInputStarted=!1,this.liveBassInputStarted=!1,this.liveInputPitches=[],this.liveBassInputPitches=[],this.liveInputChannel=0,this.liveBassInputChannel=0,this.liveInputInstruments=[],this.liveBassInputInstruments=[],this.loopRepeatCount=-1,this.volume=1,this.oscRefreshEventTimer=0,this.oscEnabled=!0,this.enableMetronome=!1,this.countInMetronome=!1,this.renderingSong=!1,this.heldMods=[],this.wantToSkip=!1,this.playheadInternal=0,this.bar=0,this.prevBar=null,this.nextBar=null,this.beat=0,this.part=0,this.tick=0,this.isAtStartOfTick=!0,this.isAtEndOfTick=!0,this.tickSampleCountdown=0,this.modValues=[],this.modInsValues=[],this.nextModValues=[],this.nextModInsValues=[],this.isPlayingSong=!1,this.isRecording=!1,this.liveInputEndTime=0,this.browserAutomaticallyClearsAudioBuffer=!0,this.tempDrumSetControlPoint=new We,this.tempFrequencyResponse=new pe,this.loopBarStart=-1,this.loopBarEnd=-1,this.channels=[],this.tonePool=new oe,this.tempMatchedPitchTones=Array(h.maxChordSize).fill(null),this.startedMetronome=!1,this.metronomeSamplesRemaining=-1,this.metronomeAmplitude=0,this.metronomePrevAmplitude=0,this.metronomeFilter=0,this.limit=0,this.tempMonoInstrumentSampleBuffer=null,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=e=>{const t=e.outputBuffer,n=t.getChannelData(0),i=t.getChannelData(1);if(!this.browserAutomaticallyClearsAudioBuffer||0==n[0]&&0==i[0]&&0==n[t.length-1]&&0==i[t.length-1]||(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){const e=t.length;for(let t=0;t<e;t++)n[t]=0,i[t]=0}!this.isPlayingSong&&performance.now()>=this.liveInputEndTime?this.deactivateAudio():(this.synthesize(n,i,t.length,this.isPlayingSong),this.oscEnabled&&(this.oscRefreshEventTimer<=0?(re.raise("oscillascopeUpdate",n,i),this.oscRefreshEventTimer=2):this.oscRefreshEventTimer--))},this.computeDelayBufferSizes(),null!=e&&this.setSong(e)}setSong(e){"string"==typeof e?this.song=new Qe(e):e instanceof Qe&&(this.song=e),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=Ze.fittingPowerOfTwo(this.samplesPerSecond*h.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.chorusDelayBufferSize=Ze.fittingPowerOfTwo(this.samplesPerSecond*h.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){const e=this.anticipatePoorPerformance?this.preferLowerLatency?2048:4096:this.preferLowerLatency?512:2048;if(null==this.audioCtx||null==this.scriptNode||this.scriptNode.bufferSize!=e){null!=this.scriptNode&&this.deactivateAudio();const t=this.anticipatePoorPerformance?this.preferLowerLatency?"balanced":"playback":this.preferLowerLatency?"interactive":"balanced";this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext)({latencyHint:t}),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(e,0,2):this.audioCtx.createJavaScriptNode(e,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.computeDelayBufferSizes()}this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.initModFilters(this.song),this.computeLatestModValues(),this.activateAudio(),this.warmUpSynthesizer(this.song),this.isPlayingSong=!0)}pause(){if(this.isPlayingSong){if(this.isPlayingSong=!1,this.isRecording=!1,this.modValues=[],this.nextModValues=[],this.heldMods=[],null!=this.song){this.song.inVolumeCap=0,this.song.outVolumeCap=0;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.modInsValues[e]=[],this.nextModInsValues[e]=[]}this.preferLowerLatency=!1}}startRecording(){this.preferLowerLatency=!0,this.isRecording=!0,this.play()}resetEffects(){if(this.limit=0,this.freeAllTones(),null!=this.song)for(const e of this.channels)for(const t of e.instruments)t.resetAllEffects()}setModValue(e,t,n,i,a){let s=e+h.modulators[a].convertRealFactor,o=t+h.modulators[a].convertRealFactor;return h.modulators[a].forSong?null!=this.modValues[a]&&this.modValues[a]==s&&this.nextModValues[a]==o||(this.modValues[a]=s,this.nextModValues[a]=o):null!=this.modInsValues[n][i][a]&&this.modInsValues[n][i][a]==s&&this.nextModInsValues[n][i][a]==o||(this.modInsValues[n][i][a]=s,this.nextModInsValues[n][i][a]=o),s}getModValue(e,t,n,i){if(h.modulators[e].forSong){if(null!=this.modValues[e]&&null!=this.nextModValues[e])return i?this.nextModValues[e]:this.modValues[e]}else if(null!=t&&null!=n&&null!=this.modInsValues[t][n][e]&&null!=this.nextModInsValues[t][n][e])return i?this.nextModInsValues[t][n][e]:this.modInsValues[t][n][e];return-1}isAnyModActive(e,t){for(let n=0;n<h.modulators.length;n++)if(null!=this.modValues&&null!=this.modValues[n]||null!=this.modInsValues&&null!=this.modInsValues[e]&&null!=this.modInsValues[e][t]&&null!=this.modInsValues[e][t][n])return!0;return!1}unsetMod(e,t,n){if(this.isModActive(e)||null!=t&&null!=n&&this.isModActive(e,t,n)){this.modValues[e]=null,this.nextModValues[e]=null;for(let i=0;i<this.heldMods.length;i++)null!=t&&null!=n?this.heldMods[i].channelIndex==t&&this.heldMods[i].instrumentIndex==n&&this.heldMods[i].setting==e&&this.heldMods.splice(i,1):this.heldMods[i].setting==e&&this.heldMods.splice(i,1);null!=t&&null!=n&&(this.modInsValues[t][n][e]=null,this.nextModInsValues[t][n][e]=null)}}isFilterModActive(e,t,n){const i=this.song.channels[t].instruments[n];if(e){if(i.noteFilterType)return!1;if(null!=i.tmpNoteFilterEnd)return!0}else{if(i.eqFilterType)return!1;if(null!=i.tmpEqFilterEnd)return!0}return!1}isModActive(e,t,n){return h.modulators[e].forSong?null!=this.modValues&&null!=this.modValues[e]:null!=t&&null!=n&&null!=this.modInsValues&&null!=this.modInsValues[t]&&null!=this.modInsValues[t][n]&&null!=this.modInsValues[t][n][e]}forceHoldMods(e,t,n,i){let a=!1;for(let s=0;s<this.heldMods.length;s++)this.heldMods[s].channelIndex==t&&this.heldMods[s].instrumentIndex==n&&this.heldMods[s].setting==i&&(this.heldMods[s].volume=e,this.heldMods[s].holdFor=24,a=!0);a||this.heldMods.push({volume:e,channelIndex:t,instrumentIndex:n,setting:i,holdFor:24})}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(e){this.bar=e,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;const e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;const e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}getNextBar(){var e;let t=this.bar+1;return null!=(null===(e=this.song)||void 0===e?void 0:e.loopType)?2!=this.song.loopType?this.isRecording?t>=this.song.barCount&&(t=this.song.barCount-1):this.bar!=this.loopBarEnd||this.renderingSong?0!=this.loopRepeatCount&&t==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(t=this.song.loopStart):t=this.loopBarStart:2==this.song.loopType&&this.bar==this.song.barCount-1&&(t=0):this.isRecording?t>=this.song.barCount&&(t=this.song.barCount-1):this.bar!=this.loopBarEnd||this.renderingSong?0!=this.loopRepeatCount&&t==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(t=this.song.loopStart):t=this.loopBarStart,t}skipBar(){if(!this.song)return;const e=this.getSamplesPerTick();this.prevBar=this.bar,this.loopBarEnd!=this.bar?this.bar++:this.bar=this.loopBarStart,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,this.isAtStartOfTick=!0,0!=this.loopRepeatCount&&this.bar==Math.max(this.song.loopStart+this.song.loopLength,this.loopBarEnd)&&(this.bar=this.song.loopStart,-1!=this.loopBarStart&&(this.bar=this.loopBarStart),this.loopRepeatCount>0&&this.loopRepeatCount--)}synthesize(e,t,n,i=!0){if(null==this.song){for(let i=0;i<n;i++)e[i]=0,t[i]=0;return void this.deactivateAudio()}const a=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0;let s=this.getSamplesPerTick(),o=!1;(this.tickSampleCountdown<=0||this.tickSampleCountdown>s)&&(this.tickSampleCountdown=s,this.isAtStartOfTick=!0),i&&(this.beat>=a.beatsPerBar&&(this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=s,this.isAtStartOfTick=!0,this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=a.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(o=!0,this.pause()))),this.syncSongState(),(null==this.tempMonoInstrumentSampleBuffer||this.tempMonoInstrumentSampleBuffer.length<n)&&(this.tempMonoInstrumentSampleBuffer=new Float32Array(n));const r=+this.volume,l=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),p=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond);let c=+this.limit,u=[],f=-1,d=0;for(;d<n&&!o;){this.nextBar=this.getNextBar(),this.nextBar>=a.barCount&&(this.nextBar=null);const m=n-d,y=Math.ceil(this.tickSampleCountdown),g=Math.min(y,m),v=d+g;if(this.isPlayingSong||this.renderingSong){for(let e=a.pitchChannelCount+a.noiseChannelCount;e<a.getChannelCount();e++){const t=a.channels[e],n=this.channels[e];this.determineCurrentActiveTones(a,e,s,i);for(let i=0;i<t.instruments.length;i++){const t=n.instruments[i];for(let n=0;n<t.activeModTones.count();n++){const i=t.activeModTones.get(n),o=a.channels[e].instruments[i.instrumentIndex];let r=h.modCount-1-i.pitches[0];(o.modulators[r]==h.modulators.dictionary["note filter"].index||o.modulators[r]==h.modulators.dictionary["eq filter"].index)&&null!=o.modFilterTypes[r]&&o.modFilterTypes[r]>0||this.playModTone(a,e,s,d,g,i,!1,!1)}}}for(let e=a.pitchChannelCount+a.noiseChannelCount;e<a.getChannelCount();e++){const t=a.channels[e],n=this.channels[e];for(let i=0;i<t.instruments.length;i++){const t=n.instruments[i];for(let n=0;n<t.activeModTones.count();n++){const i=t.activeModTones.get(n),o=a.channels[e].instruments[i.instrumentIndex];let r=h.modCount-1-i.pitches[0];(o.modulators[r]==h.modulators.dictionary["note filter"].index||o.modulators[r]==h.modulators.dictionary["eq filter"].index)&&null!=o.modFilterTypes[r]&&o.modFilterTypes[r]>0&&this.playModTone(a,e,s,d,g,i,!1,!1)}}}}if(this.wantToSkip){let e=u.includes(this.bar);if(e&&d==f)return void this.pause();-1==f&&(f=d),e||u.push(this.bar),this.wantToSkip=!1,this.skipBar()}else{for(let n=0;n<a.pitchChannelCount+a.noiseChannelCount;n++){const o=a.channels[n],r=this.channels[n];this.isAtStartOfTick&&(this.determineCurrentActiveTones(a,n,s,i&&!this.countInMetronome),this.determineLiveInputTones(a,n,s));for(let i=0;i<o.instruments.length;i++){const l=o.instruments[i],p=r.instruments[i];if(this.isAtStartOfTick){let e=p.activeTones.count()+p.liveInputTones.count();for(let t=0;t<p.releasedTones.count();t++){const i=p.releasedTones.get(t);if(i.ticksSinceReleased>=Math.abs(l.getFadeOutTicks())){this.freeReleasedTone(p,t),t--;continue}const o=e>=h.maximumTonesPerChannel;this.computeTone(a,n,s,i,!0,o),e++}p.awake&&(p.computed||p.compute(this,l,s,Math.ceil(s),null,n,i),p.computed=!1,p.envelopeComputer.clearEnvelopes())}for(let e=0;e<p.activeTones.count();e++){const t=p.activeTones.get(e);this.playTone(n,d,g,t)}for(let e=0;e<p.liveInputTones.count();e++){const t=p.liveInputTones.get(e);this.playTone(n,d,g,t)}for(let e=0;e<p.releasedTones.count();e++){const t=p.releasedTones.get(e);this.playTone(n,d,g,t)}p.awake&&Ze.effectsSynth(this,e,t,d,g,p);const c=this.tickSampleCountdown,u=1-c/s,f=1-(c-g)/s,m=(this.beat*h.partsPerBeat+this.part)*h.ticksPerPart+this.tick,y=m/h.ticksPerPart,v=(m+1)/h.ticksPerPart,b=y+(v-y)*u,w=y+(v-y)*f;let S=l.vibratoSpeed;p.vibratoTime=p.nextVibratoTime,this.isModActive(h.modulators.dictionary["vibrato speed"].index,n,i)&&(S=this.getModValue(h.modulators.dictionary["vibrato speed"].index,n,i)),0==S?(p.vibratoTime=0,p.nextVibratoTime=0):p.nextVibratoTime+=.1*S*(w-b)}}if(this.enableMetronome||this.countInMetronome)if(0==this.part){if(!this.startedMetronome){const e=a.beatsPerBar>4&&a.beatsPerBar%2==0&&this.beat==a.beatsPerBar/2,t=0==this.beat?8:e?6:4,n=0==this.beat?1600:e?1200:800,i=0==this.beat?.06:e?.05:.04,s=this.samplesPerSecond/n,o=2*Math.PI/s;this.metronomeSamplesRemaining=Math.floor(s*t),this.metronomeFilter=2*Math.cos(o),this.metronomeAmplitude=i*Math.sin(o),this.metronomePrevAmplitude=0,this.startedMetronome=!0}if(this.metronomeSamplesRemaining>0){const n=Math.min(v,d+this.metronomeSamplesRemaining);this.metronomeSamplesRemaining-=n-d;for(let i=d;i<n;i++){e[i]+=this.metronomeAmplitude,t[i]+=this.metronomeAmplitude;const n=this.metronomeFilter*this.metronomeAmplitude-this.metronomePrevAmplitude;this.metronomePrevAmplitude=this.metronomeAmplitude,this.metronomeAmplitude=n}}}else this.startedMetronome=!1;for(let n=d;n<v;n++){const i=e[n]*a.masterGain*a.masterGain,s=t[n]*a.masterGain*a.masterGain,o=i<0?-i:i,h=s<0?-s:s,u=o>h?o:h;this.song.inVolumeCap=this.song.inVolumeCap>u?this.song.inVolumeCap:u;const f=+(u>a.compressionThreshold)+ +(u>a.limitThreshold),d=+(0==f)*((.8*(u+1-a.compressionThreshold)+.25)*a.compressionRatio+1.05*(1-a.compressionRatio))+1.05*+(1==f)+ +(2==f)*(1.05*((u+1-a.limitThreshold)*a.limitRatio+(1-a.limitThreshold)));c+=(d-c)*(c<d?p:l);const m=r/(c>=1?1.05*c:.8*c+.25);e[n]=i*m,t[n]=s*m,this.song.outVolumeCap=this.song.outVolumeCap>u*m?this.song.outVolumeCap:u*m}if(d+=g,this.isAtStartOfTick=!1,this.tickSampleCountdown-=g,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(const e of this.channels)for(const t of e.instruments){for(let e=0;e<t.releasedTones.count();e++){const n=t.releasedTones.get(e);n.isOnLastTick?(this.freeReleasedTone(t,e),e--):n.ticksSinceReleased++}t.deactivateAfterThisTick&&t.deactivate(),t.tonesAddedInThisTick=!1}const e=this.getTicksIntoBar(),t=s/this.samplesPerSecond,n=this.getCurrentPart();for(let i=0;i<this.song.pitchChannelCount+this.song.noiseChannelCount;i++)for(let a=0;a<this.song.channels[i].instruments.length;a++){let s=this.song.channels[i].instruments[a],o=this.channels[i].instruments[a];const r=o.envelopeComputer,l=[];for(let e=0;e<h.maxEnvelopeCount;e++)l[e]=0;for(let e=0;e<s.envelopeCount;e++){let t=s.envelopeSpeed,n=s.envelopes[e].perEnvelopeSpeed;this.isModActive(h.modulators.dictionary["individual envelope speed"].index,i,a)&&null!=s.envelopes[e].tempEnvelopeSpeed&&(n=s.envelopes[e].tempEnvelopeSpeed),this.isModActive(h.modulators.dictionary["envelope speed"].index,i,a)?(t=Math.max(0,Math.min(h.arpSpeedScale.length-1,this.getModValue(h.modulators.dictionary["envelope speed"].index,i,a,!1))),Number.isInteger(t)?o.envelopeTime[e]+=h.arpSpeedScale[t]*n:o.envelopeTime[e]+=((1-t%1)*h.arpSpeedScale[Math.floor(t)]+t%1*h.arpSpeedScale[Math.ceil(t)])*n):o.envelopeTime[e]+=h.arpSpeedScale[t]*n}let p=new Je;p=o.activeTones.count()>0?o.activeTones.peakBack():new Je,r.computeEnvelopes(s,n,o.envelopeTime,e,t,p,l,o,this);const c=r.envelopeStarts;let u=s.arpeggioSpeed;if(this.isModActive(h.modulators.dictionary["arp speed"].index,i,a))u=we(0,h.arpSpeedScale.length,this.getModValue(h.modulators.dictionary["arp speed"].index,i,a,!1)),Number.isInteger(u)?o.arpTime+=h.arpSpeedScale[u]:o.arpTime+=(1-u%1)*h.arpSpeedScale[Math.floor(u)]+u%1*h.arpSpeedScale[Math.ceil(u)];else{const e=c[55];u=we(0,h.arpSpeedScale.length,e*u),Number.isInteger(u)?o.arpTime+=h.arpSpeedScale[u]:o.arpTime+=(1-u%1)*h.arpSpeedScale[Math.floor(u)]+u%1*h.arpSpeedScale[Math.ceil(u)]}r.clearEnvelopes()}for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.song.channels[e].instruments.length;t++){let n=this.song.channels[e].instruments[t];null!=n.tmpEqFilterEnd?n.tmpEqFilterStart=n.tmpEqFilterEnd:n.tmpEqFilterStart=n.eqFilter,null!=n.tmpNoteFilterEnd?n.tmpNoteFilterStart=n.tmpNoteFilterEnd:n.tmpNoteFilterStart=n.noteFilter}if(this.tick++,this.tickSampleCountdown+=s,this.tick==h.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--,this.liveBassInputDuration--;for(let e=0;e<this.heldMods.length;e++)this.heldMods[e].holdFor--,this.heldMods[e].holdFor<=0&&this.heldMods.splice(e,1);this.part==h.partsPerBeat&&(this.part=0,i&&(this.beat++,this.beat==a.beatsPerBar&&(this.beat=0,this.countInMetronome?this.countInMetronome=!1:(this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--,this.bar>=a.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(o=!0,this.resetEffects(),this.pause()))))))}}for(let e=0;e<h.modulators.length;e++)null!=this.nextModValues&&null!=this.nextModValues[e]&&(this.modValues[e]=this.nextModValues[e]);this.isModActive(h.modulators.dictionary.tempo.index)&&(s=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,s));for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const n=this.channels[e].instruments[t],i=this.song.channels[e].instruments[t];n.nextVibratoTime=n.nextVibratoTime%(h.vibratoTypes[i.vibratoType].period/(h.ticksPerPart*s/this.samplesPerSecond)),n.arpTime=n.arpTime%(2520*h.ticksPerArpeggio);for(let e=0;e<i.envelopeCount;e++)n.envelopeTime[e]=n.envelopeTime[e]%(h.partsPerBeat*h.ticksPerPart*this.song.beatsPerBar)}for(let e=0;e<h.modulators.length;e++)for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)for(let n=0;n<this.song.getMaxInstrumentsPerChannel();n++)null!=this.nextModInsValues&&null!=this.nextModInsValues[t]&&null!=this.nextModInsValues[t][n]&&null!=this.nextModInsValues[t][n][e]&&(this.modInsValues[t][n][e]=this.nextModInsValues[t][n][e])}}(!Number.isFinite(c)||Math.abs(c)<be)&&(c=0),this.limit=c,i&&!this.countInMetronome&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/s)/2+this.part)/h.partsPerBeat+this.beat)/a.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){const e=this.tonePool.popBack();return e.freshlyAllocated=!0,e}return new Je}releaseTone(e,t){e.releasedTones.pushFront(t),t.atNoteStart=!1,t.passedEndOfNote=!0}freeReleasedTone(e,t){this.freeTone(e.releasedTones.get(t)),e.releasedTones.remove(t)}freeAllTones(){for(const e of this.channels)for(const t of e.instruments){for(;t.activeTones.count()>0;)this.freeTone(t.activeTones.popBack());for(;t.activeModTones.count()>0;)this.freeTone(t.activeModTones.popBack());for(;t.releasedTones.count()>0;)this.freeTone(t.releasedTones.popBack());for(;t.liveInputTones.count()>0;)this.freeTone(t.liveInputTones.popBack())}}determineLiveInputTones(e,t,n){const i=e.channels[t],a=this.channels[t],s=this.liveInputPitches,o=this.liveBassInputPitches;for(let r=0;r<i.instruments.length;r++){const l=a.instruments[r],p=l.liveInputTones;let h=0;const c=i.instruments[r];let u=s;G(c.effects)&&(u=s.filter((e=>e>=c.lowerNoteLimit&&e<=c.upperNoteLimit)));let f=o;if(G(c.effects)&&(f=o.filter((e=>e>=c.lowerNoteLimit&&e<=c.upperNoteLimit))),this.liveInputDuration>0&&t==this.liveInputChannel&&s.length>0&&-1!=this.liveInputInstruments.indexOf(r)){const a=i.instruments[r];if(a.getChord().singleTone){let i;p.count()<=h?(i=this.newTone(),p.pushBack(i)):!a.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,p.get(h)),i=this.newTone(),p.set(h,i)):i=p.get(h),h++;for(let e=0;e<u.length;e++)i.pitches[e]=u[e];i.pitchCount=u.length,i.chordSize=1,i.instrumentIndex=r,i.note=i.prevNote=i.nextNote=null,i.atNoteStart=this.liveInputStarted,i.forceContinueAtStart=!1,i.forceContinueAtEnd=!1,this.computeTone(e,t,n,i,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(p,u);for(let i=0;i<u.length;i++){let a;null!=this.tempMatchedPitchTones[h]?(a=this.tempMatchedPitchTones[h],this.tempMatchedPitchTones[h]=null,1==a.pitchCount&&a.pitches[0]==u[i]||(this.releaseTone(l,a),a=this.newTone()),p.pushBack(a)):(a=this.newTone(),p.pushBack(a)),h++,a.pitches[0]=u[i],a.pitchCount=1,a.chordSize=u.length,a.instrumentIndex=r,a.note=a.prevNote=a.nextNote=null,a.atNoteStart=this.liveInputStarted,a.forceContinueAtStart=!1,a.forceContinueAtEnd=!1,this.computeTone(e,t,n,a,!1,!1)}}}if(this.liveBassInputDuration>0&&t==this.liveBassInputChannel&&f.length>0&&-1!=this.liveBassInputInstruments.indexOf(r)){const a=i.instruments[r];if(a.getChord().singleTone){let i;p.count()<=h?(i=this.newTone(),p.pushBack(i)):!a.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,p.get(h)),i=this.newTone(),p.set(h,i)):i=p.get(h),h++;for(let e=0;e<f.length;e++)i.pitches[e]=f[e];i.pitchCount=f.length,i.chordSize=1,i.instrumentIndex=r,i.note=i.prevNote=i.nextNote=null,i.atNoteStart=this.liveBassInputStarted,i.forceContinueAtStart=!1,i.forceContinueAtEnd=!1,this.computeTone(e,t,n,i,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(p,f);for(let i=0;i<f.length;i++){let a;null!=this.tempMatchedPitchTones[h]?(a=this.tempMatchedPitchTones[h],this.tempMatchedPitchTones[h]=null,1==a.pitchCount&&a.pitches[0]==f[i]||(this.releaseTone(l,a),a=this.newTone()),p.pushBack(a)):(a=this.newTone(),p.pushBack(a)),h++,a.pitches[0]=f[i],a.pitchCount=1,a.chordSize=f.length,a.instrumentIndex=r,a.note=a.prevNote=a.nextNote=null,a.atNoteStart=this.liveBassInputStarted,a.forceContinueAtStart=!1,a.forceContinueAtEnd=!1,this.computeTone(e,t,n,a,!1,!1)}}}for(;p.count()>h;)this.releaseTone(l,p.popBack());this.clearTempMatchedPitchTones(h,l)}this.liveInputStarted=!1,this.liveBassInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(e,t,n,i,a,s,o,r,l,p){if(e.patternInstruments&&-1==i.instruments.indexOf(a)){if(n.instruments.length>1||i.instruments.length>1)return null;const e=t.instruments[i.instruments[0]];if(p)return e.getChord();const a=e.getTransition();return s.includeAdjacentPatterns&&a.includeAdjacentPatterns&&a.slides==s.slides?e.getChord():null}return p||s.includeAdjacentPatterns?o:null}static adjacentNotesHaveMatchingPitches(e,t){if(e.pitches.length!=t.pitches.length)return!1;const n=e.pins[e.pins.length-1].interval;for(const i of e.pitches)if(-1==t.pitches.indexOf(i+n))return!1;return!0}moveTonesIntoOrderedTempMatchedList(e,t){for(let n=0;n<e.count();n++){const i=e.get(n),a=i.pitches[0]+i.lastInterval;for(let s=0;s<t.length;s++)if(t[s]==a){this.tempMatchedPitchTones[s]=i,e.remove(n),n--;break}}for(;e.count()>0;){const t=e.popFront();for(let e=0;e<this.tempMatchedPitchTones.length;e++)if(null==this.tempMatchedPitchTones[e]){this.tempMatchedPitchTones[e]=t;break}}}determineCurrentActiveTones(e,t,n,i){const a=e.channels[t],s=this.channels[t],o=e.getPattern(t,this.bar),r=this.getCurrentPart(),l=this.tick+h.ticksPerPart*r;if(i&&e.getChannelIsMod(t)){let n=[],i=[],p=[],c=h.modCount;for(;c--;)n.push(null),i.push(null),p.push(null);if(null!=o&&!a.muted)for(let e=0;e<o.notes.length;e++)o.notes[e].end<=r?(null==i[o.notes[e].pitches[0]]||o.notes[e].end>i[o.notes[e].pitches[0]].start)&&(i[o.notes[e].pitches[0]]=o.notes[e]):o.notes[e].start<=r&&o.notes[e].end>r?n[o.notes[e].pitches[0]]=o.notes[e]:o.notes[e].start>r&&(null==p[o.notes[e].pitches[0]]||o.notes[e].start<p[o.notes[e].pitches[0]].start)&&(p[o.notes[e].pitches[0]]=o.notes[e]);let u=0;const f=e.patternInstruments&&null!=o?o.instruments[0]:0,d=s.instruments[f],m=d.activeModTones;for(let e=0;e<h.modCount;e++){if(null!=n[e]&&(null!=i[e]&&i[e].end!=n[e].start&&(i[e]=null),null!=p[e]&&p[e].start!=n[e].end&&(p[e]=null)),null!=s.singleSeamlessInstrument&&s.singleSeamlessInstrument!=f&&s.singleSeamlessInstrument<s.instruments.length){const e=s.instruments[s.singleSeamlessInstrument],t=s.instruments[f];for(;e.activeModTones.count()>0;)t.activeModTones.pushFront(e.activeModTones.popBack())}if(s.singleSeamlessInstrument=f,null!=n[e]){let t=i[e],a=p[e],s=!1,o=!1;const r=h.ticksPerPart*n[e].start==l&&this.isAtStartOfTick;let c;if(m.count()<=u)c=this.newTone(),m.pushBack(c);else if(r&&null==t){const e=m.get(u);e.isOnLastTick?this.freeTone(e):this.releaseTone(d,e),c=this.newTone(),m.set(u,c)}else c=m.get(u);u++;for(let t=0;t<n[e].pitches.length;t++)c.pitches[t]=n[e].pitches[t];c.pitchCount=n[e].pitches.length,c.chordSize=1,c.instrumentIndex=f,c.note=n[e],c.noteStartPart=n[e].start,c.noteEndPart=n[e].end,c.prevNote=t,c.nextNote=a,c.prevNotePitchIndex=0,c.nextNotePitchIndex=0,c.atNoteStart=r,c.passedEndOfNote=!1,c.forceContinueAtStart=s,c.forceContinueAtEnd=o}}for(;m.count()>u;){const n=m.popBack(),i=e.channels[t];if(n.instrumentIndex<i.instruments.length&&!n.isOnLastTick){const e=this.channels[t].instruments[n.instrumentIndex];this.releaseTone(e,n)}else this.freeTone(n)}}else if(!e.getChannelIsMod(t)){let p=null,c=null,u=null;if(i&&null!=o&&!a.muted&&(!this.isRecording||this.liveInputChannel!=t)){for(let e=0;e<o.notes.length;e++)if(o.notes[e].end<=r)c=o.notes[e];else if(o.notes[e].start<=r&&o.notes[e].end>r)p=o.notes[e];else if(o.notes[e].start>r){u=o.notes[e];break}null!=p&&(null!=c&&c.end!=p.start&&(c=null),null!=u&&u.start!=p.end&&(u=null))}if(null!=o&&(!e.layeredInstruments||1==a.instruments.length||e.patternInstruments&&1==o.instruments.length)){const t=e.patternInstruments?o.instruments[0]:0;if(null!=s.singleSeamlessInstrument&&s.singleSeamlessInstrument!=t&&s.singleSeamlessInstrument<s.instruments.length){const e=s.instruments[s.singleSeamlessInstrument],n=s.instruments[t];for(;e.activeTones.count()>0;)n.activeTones.pushFront(e.activeTones.popBack())}s.singleSeamlessInstrument=t}else s.singleSeamlessInstrument=null;for(let i=0;i<a.instruments.length;i++){const f=s.instruments[i],d=f.activeTones;let m=0;if(null!=p&&(!e.patternInstruments||-1!=o.instruments.indexOf(i))){const s=a.instruments[i];let y=c,g=u;const v=h.partsPerBeat*e.beatsPerBar,b=s.getTransition(),w=s.getChord(),S=w.strumParts>0;let x=!1,k=!1,M=0,F=0;if(0==p.start){let n=null==this.prevBar?null:e.getPattern(t,this.prevBar);if(null!=n){const t=n.notes.length<=0?null:n.notes[n.notes.length-1];if(null!=t&&t.end==v){const s=p.continuesLastPattern&&Ze.adjacentNotesHaveMatchingPitches(t,p),r=this.adjacentPatternHasCompatibleInstrumentTransition(e,a,o,n,i,b,w,p,t,s);if(null!=r){y=t;let e=y.pitches;M=r.singleTone?1:e.length,x=s}}}}else if(null!=y){let e=y.pitches;M=w.singleTone?1:e.length}if(p.end==v){let n=null==this.nextBar?null:e.getPattern(t,this.nextBar);if(null!=n){const t=n.notes.length<=0?null:n.notes[0];if(null!=t&&0==t.start){const s=t.continuesLastPattern&&Ze.adjacentNotesHaveMatchingPitches(p,t),r=this.adjacentPatternHasCompatibleInstrumentTransition(e,a,o,n,i,b,w,p,t,s);if(null!=r){g=t;let e=g.pitches;F=r.singleTone?1:e.length,k=s}}}}else if(null!=g){let e=g.pitches;F=w.singleTone?1:e.length}let q=p.pitches;if(G(s.effects)&&(q=p.pitches.filter((e=>e>=s.lowerNoteLimit&&e<=s.upperNoteLimit))),!w.singleTone||q.length<=0){const a=s.getTransition();(a.isSeamless&&!a.slides&&0==w.strumParts||x)&&h.ticksPerPart*p.start==l&&null!=y&&this.moveTonesIntoOrderedTempMatchedList(d,q);let o=0;for(let c=0;c<q.length;c++){let u=M>c?y:null,v=p,b=q,w=F>c?g:null,P=v.start+o,T=!1;if(P>r){if(!(d.count()>c&&(a.isSeamless||x)&&null!=u))break;w=v,v=u,b=v.pitches,G(s.effects)&&(b=b.filter((e=>e>=s.lowerNoteLimit&&e<=s.upperNoteLimit))),u=null,P=v.start+o,T=!0}let z=v.end;(a.isSeamless||x)&&null!=w&&(z=Math.min(h.partsPerBeat*this.song.beatsPerBar,z+o)),(a.continues||x)&&null!=u||S&&(o+=s.strumParts);const I=h.ticksPerPart*P==l;let C;if(null!=this.tempMatchedPitchTones[m])C=this.tempMatchedPitchTones[m],this.tempMatchedPitchTones[m]=null,d.pushBack(C);else if(d.count()<=m)C=this.newTone(),d.pushBack(C);else if(!I||(a.isSeamless||x)&&null!=u)C=d.get(m);else{const e=d.get(m);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),C=this.newTone(),d.set(m,C)}m++,C.pitches[0]=b[c],C.pitchCount=1,C.chordSize=b.length,C.instrumentIndex=i,C.note=v,C.noteStartPart=P,C.noteEndPart=z,C.prevNote=u,C.nextNote=w,C.prevNotePitchIndex=c,C.nextNotePitchIndex=c,C.atNoteStart=I,C.passedEndOfNote=T,C.forceContinueAtStart=x&&null!=u,C.forceContinueAtEnd=k&&null!=w,this.computeTone(e,t,n,C,!1,!1)}}else{const a=h.ticksPerPart*p.start==l;let o;if(d.count()<=m)o=this.newTone(),d.pushBack(o);else if(!a||(b.isSeamless||s.clicklessTransition||x)&&null!=y)o=d.get(m);else{const e=d.get(m);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),o=this.newTone(),d.set(m,o)}m++;for(let e=0;e<q.length;e++)o.pitches[e]=q[e];o.pitchCount=q.length,o.chordSize=1,o.instrumentIndex=i,o.note=p,o.noteStartPart=p.start,o.noteEndPart=p.end,o.prevNote=y,o.nextNote=g,o.prevNotePitchIndex=0,o.nextNotePitchIndex=0,o.atNoteStart=a,o.passedEndOfNote=!1,o.forceContinueAtStart=x,o.forceContinueAtEnd=k,this.computeTone(e,t,n,o,!1,!1)}(b.continues&&d.count()<=0||p.pitches.length<=0)&&f.envelopeComputer.reset()}for(;d.count()>m;){const n=d.popBack(),i=e.channels[t];if(n.instrumentIndex<i.instruments.length&&!n.isOnLastTick){const e=s.instruments[n.instrumentIndex];this.releaseTone(e,n)}else this.freeTone(n)}this.clearTempMatchedPitchTones(m,f)}}}clearTempMatchedPitchTones(e,t){for(let n=e;n<this.tempMatchedPitchTones.length;n++){const e=this.tempMatchedPitchTones[n];null!=e&&(e.isOnLastTick?this.freeTone(e):this.releaseTone(t,e),this.tempMatchedPitchTones[n]=null)}}playTone(e,t,n,i){const a=this.channels[e].instruments[i.instrumentIndex];null!=a.synthesizer&&a.synthesizer(this,t,n,i,a),i.envelopeComputer.clearEnvelopes(),a.envelopeComputer.clearEnvelopes()}playModTone(e,t,n,i,a,s,o,r){const l=e.channels[t].instruments[s.instrumentIndex];if(null!=s.note){const e=this.getTicksIntoBar(),t=e/h.ticksPerPart,o=(e+1)/h.ticksPerPart,r=this.tickSampleCountdown,p=t+(o-t)*(1-r/n),c=t+(o-t)*(1-(r-a)/n),u=h.ticksPerPart*p,f=h.ticksPerPart*c,d=s.note.getEndPinIndex(this.getCurrentPart()),m=s.note.pins[d-1],y=s.note.pins[d],g=(s.note.start+m.time)*h.ticksPerPart,v=(s.note.start+y.time)*h.ticksPerPart,b=(u-g)/(v-g),w=(f-g)/(v-g);s.expression=m.size+(y.size-m.size)*b,s.expressionDelta=m.size+(y.size-m.size)*w-s.expression,Ze.modSynth(this,i,a,s,l)}}static computeChordExpression(e){return 1/(.25*(e-1)+1)}computeTone(e,t,n,i,a,s){const o=Math.ceil(n),r=e.channels[t],l=this.channels[t],p=r.instruments[i.instrumentIndex],c=l.instruments[i.instrumentIndex];c.awake=!0,c.tonesAddedInThisTick=!0,c.computed||c.compute(this,p,n,o,i,t,i.instrumentIndex);const u=p.getTransition(),f=p.getChord(),m=f.singleTone?1:Ze.computeChordExpression(i.chordSize),y=e.getChannelIsNoise(t),g=y?h.noiseInterval:1,v=h.ticksPerPart*n/this.samplesPerSecond,w=1/this.samplesPerSecond,S=1/h.partsPerBeat,x=this.getTicksIntoBar(),P=x/h.ticksPerPart,T=(x+1)/h.ticksPerPart,z=this.getCurrentPart();let I=1;i.specialIntervalExpressionMult=1;let C=s,H=0,D=0,O=1,G=1,L=m,E=m,A=16,R=h.keys[e.key].basePitch+h.pitchesPerOctave*e.octave,N=1,B=48;if(3==p.type)N=h.spectrumBaseExpression,y&&(R=h.spectrumBasePitch,N*=2),A=h.spectrumBasePitch,B=28;else if(4==p.type)R=h.spectrumBasePitch,N=h.drumsetBaseExpression,A=R;else if(2==p.type)R=y?h.chipNoises[p.chipNoise].basePitch:R+h.chipNoises[p.chipNoise].basePitch-12,N=h.noiseBaseExpression,A=R,B=h.chipNoises[p.chipNoise].isSoft?24:60;else if(1==p.type||11==p.type)N=h.fmBaseExpression;else if(0==p.type)N=h.chipBaseExpression,h.chipWaves[p.chipWave].isCustomSampled?h.chipWaves[p.chipWave].isPercussion?R=-12*Math.log2(h.chipWaves[p.chipWave].samples.length/h.chipWaves[p.chipWave].sampleRate)-84.37-(-60+h.chipWaves[p.chipWave].rootKey):R+=-12*Math.log2(h.chipWaves[p.chipWave].samples.length/h.chipWaves[p.chipWave].sampleRate)-96.37-(-60+h.chipWaves[p.chipWave].rootKey):h.chipWaves[p.chipWave].isSampled&&!h.chipWaves[p.chipWave].isPercussion?R=R-63+h.chipWaves[p.chipWave].extraSampleDetune:h.chipWaves[p.chipWave].isSampled&&h.chipWaves[p.chipWave].isPercussion&&(R=-51+h.chipWaves[p.chipWave].extraSampleDetune);else if(9==p.type)N=h.chipBaseExpression;else if(5==p.type)N=h.harmonicsBaseExpression;else if(6==p.type)N=h.pwmBaseExpression;else if(8==p.type)N=h.supersawBaseExpression;else if(7==p.type)N=h.pickedStringBaseExpression;else{if(10!=p.type)throw new Error("Unknown instrument type in computeTone.");N=1,A=0,B=1,R=0}if((i.atNoteStart&&!u.isSeamless&&!i.forceContinueAtStart||i.freshlyAllocated)&&(i.reset(),0==p.type&&p.isUsingAdvancedLoopControls)){const e=h.rawRawChipWaves[p.chipWave].samples.length-1,t=p.chipWaveStartOffset/e,n=.999999999999999;for(let e=0;e<h.maxPitchOrOperatorCount;e++)i.phases[e]=p.chipWavePlayBackwards?Math.max(0,Math.min(n,t)):Math.max(0,t),i.directions[e]=p.chipWavePlayBackwards?-1:1,i.chipWaveCompletions[e]=0,i.chipWavePrevWaves[e]=0,i.chipWaveCompletionsLastWave[e]=0}i.freshlyAllocated=!1;for(let e=0;e<h.maxPitchOrOperatorCount;e++)i.phaseDeltas[e]=0,i.phaseDeltaScales[e]=0,i.operatorExpressions[e]=0,i.operatorExpressionDeltas[e]=0;i.expression=0,i.expressionDelta=0;for(let e=0;e<(11==p.type?6:h.operatorCount);e++)i.operatorWaves[e]=Ze.getOperatorWave(p.operators[e].waveform,p.operators[e].pulseWidth);if(a){const e=i.ticksSinceReleased,t=i.ticksSinceReleased+1;H=D=i.lastInterval;const n=Math.abs(p.getFadeOutTicks());O=Ze.noteSizeToVolumeMult((1-e/n)*h.noteSizeMax),G=Ze.noteSizeToVolumeMult((1-t/n)*h.noteSizeMax),s&&(G=0),i.ticksSinceReleased+1>=n&&(C=!0)}else if(null==i.note)O=G=1,i.lastInterval=0,i.ticksSinceReleased=0,i.liveInputSamplesHeld+=o;else{const e=i.note,t=i.nextNote,n=i.noteStartPart,a=i.noteEndPart,s=e.getEndPinIndex(z),o=e.pins[s-1],r=e.pins[s],l=n*h.ticksPerPart,c=a*h.ticksPerPart,f=(e.start+o.time)*h.ticksPerPart,d=(e.start+r.time)*h.ticksPerPart;i.ticksSinceReleased=0;const m=z*h.ticksPerPart+this.tick,y=m+1,g=m-l,v=y-l,b=Math.min(1,(m-f)/(d-f)),w=Math.min(1,(y-f)/(d-f));if(O=1,G=1,H=o.interval+(r.interval-o.interval)*b,D=o.interval+(r.interval-o.interval)*w,i.lastInterval=D,!u.isSeamless&&!i.forceContinueAtEnd||null==t){const e=-p.getFadeOutTicks();if(e>0){const t=c-l;O*=Math.min(1,(t-g)/e),G*=Math.min(1,(t-v)/e),y>=l+t&&(C=!0)}}}i.isOnLastTick=C;let W,V,$=p.noteFilter;if(p.noteFilterType){const e=p.noteFilter;null==p.noteSubFilters[1]&&(p.noteSubFilters[1]=new Ve);const n=p.noteSubFilters[1];let a=p.noteFilterSimpleCut,s=p.noteFilterSimplePeak,o=p.noteFilterSimpleCut,r=p.noteFilterSimplePeak,l=!1;this.isModActive(h.modulators.dictionary["note filt cut"].index,t,i.instrumentIndex)&&(a=this.getModValue(h.modulators.dictionary["note filt cut"].index,t,i.instrumentIndex,!1),o=this.getModValue(h.modulators.dictionary["note filt cut"].index,t,i.instrumentIndex,!0),l=!0),this.isModActive(h.modulators.dictionary["note filt peak"].index,t,i.instrumentIndex)&&(s=this.getModValue(h.modulators.dictionary["note filt peak"].index,t,i.instrumentIndex,!1),r=this.getModValue(h.modulators.dictionary["note filt peak"].index,t,i.instrumentIndex,!0),l=!0),e.convertLegacySettingsForSynth(a,s,!l),n.convertLegacySettingsForSynth(o,r,!l),W=e.controlPoints[0],V=n.controlPoints[0],p.noteFilter=e,p.tmpNoteFilterStart=e}const U=i.envelopeComputer,j=[];for(let e=0;e<h.maxEnvelopeCount;e++)j[e]=0;for(let e=0;e<p.envelopeCount;e++){let n=p.envelopes[e].perEnvelopeSpeed;this.isModActive(h.modulators.dictionary["individual envelope speed"].index,t,i.instrumentIndex)&&null!=p.envelopes[e].tempEnvelopeSpeed&&(n=p.envelopes[e].tempEnvelopeSpeed);let a=h.arpSpeedScale[p.envelopeSpeed]*n;this.isModActive(h.modulators.dictionary["envelope speed"].index,t,i.instrumentIndex)&&(a=Math.max(0,Math.min(h.arpSpeedScale.length-1,this.getModValue(h.modulators.dictionary["envelope speed"].index,t,i.instrumentIndex,!1))),a=Number.isInteger(a)?h.arpSpeedScale[a]*n:(1-a%1)*h.arpSpeedScale[Math.floor(a)]+a%1*h.arpSpeedScale[Math.ceil(a)]*n),j[e]=a}U.computeEnvelopes(p,z,c.envelopeTime,h.ticksPerPart*P,n/this.samplesPerSecond,i,j,c,this);const Q=i.envelopeComputer.envelopeStarts,_=i.envelopeComputer.envelopeEnds;if(p.noteFilter=$,!u.continues||null!=i.prevNote&&null!=i.note||c.envelopeComputer.reset(),null!=i.note&&u.slides){const e=i.prevNote,t=i.nextNote;if(null!=e){const t=e.pitches[i.prevNotePitchIndex]+e.pins[e.pins.length-1].interval-i.pitches[0];if(U.prevSlideStart&&(H+=t*U.prevSlideRatioStart),U.prevSlideEnd&&(D+=t*U.prevSlideRatioEnd),!f.singleTone){const t=e.pitches.length-i.chordSize;U.prevSlideStart&&(L=Ze.computeChordExpression(i.chordSize+t*U.prevSlideRatioStart)),U.prevSlideEnd&&(E=Ze.computeChordExpression(i.chordSize+t*U.prevSlideRatioEnd))}}if(null!=t){const e=t.pitches[i.nextNotePitchIndex]-(i.pitches[0]+i.note.pins[i.note.pins.length-1].interval);if(U.nextSlideStart&&(H+=e*U.nextSlideRatioStart),U.nextSlideEnd&&(D+=e*U.nextSlideRatioEnd),!f.singleTone){const e=t.pitches.length-i.chordSize;U.nextSlideStart&&(L=Ze.computeChordExpression(i.chordSize+e*U.nextSlideRatioStart)),U.nextSlideEnd&&(E=Ze.computeChordExpression(i.chordSize+e*U.nextSlideRatioEnd))}}}if(k(p.effects)||this.isModActive(h.modulators.dictionary["song pitch shift"].index,t,i.instrumentIndex)){let e=h.justIntonationSemitones[p.pitchShift]/g,n=1,a=1;this.isModActive(h.modulators.dictionary["pitch shift"].index,t,i.instrumentIndex)&&(e=h.justIntonationSemitones[h.justIntonationSemitones.length-1],n=this.getModValue(h.modulators.dictionary["pitch shift"].index,t,i.instrumentIndex,!1)/h.pitchShiftCenter,a=this.getModValue(h.modulators.dictionary["pitch shift"].index,t,i.instrumentIndex,!0)/h.pitchShiftCenter),this.isModActive(h.modulators.dictionary["song pitch shift"].index,t,i.instrumentIndex)&&(e=h.justIntonationSemitones[h.justIntonationSemitones.length-1],n=we(2*-h.pitchShiftRange+1,h.pitchShiftRange-1,n+this.getModValue(h.modulators.dictionary["song pitch shift"].index,void 0,void 0,!0)-1)/h.pitchShiftCenter,a=we(2*-h.pitchShiftRange+1,h.pitchShiftRange-1,a+this.getModValue(h.modulators.dictionary["song pitch shift"].index,void 0,void 0,!0)-1)/h.pitchShiftCenter);H+=e*Q[18]*n,D+=e*_[18]*a}if(M(p.effects)||this.isModActive(h.modulators.dictionary["song detune"].index,t,i.instrumentIndex)){const e=Q[19],n=_[19];let a=p.detune,s=p.detune;this.isModActive(h.modulators.dictionary.detune.index,t,i.instrumentIndex)&&(a=this.getModValue(h.modulators.dictionary.detune.index,t,i.instrumentIndex,!1)+h.detuneCenter,s=this.getModValue(h.modulators.dictionary.detune.index,t,i.instrumentIndex,!0)+h.detuneCenter),this.isModActive(h.modulators.dictionary["song detune"].index,t,i.instrumentIndex)&&(a+=4*this.getModValue(h.modulators.dictionary["song detune"].index,t,i.instrumentIndex,!1),s+=4*this.getModValue(h.modulators.dictionary["song detune"].index,t,i.instrumentIndex,!0)),H+=Ze.detuneToCents(a)*e*h.pitchesPerOctave/1200,D+=Ze.detuneToCents(s)*n*h.pitchesPerOctave/1200}if(F(p.effects)){let e,n,a,s;if(p.vibrato==h.vibratos.length?(e=2*p.vibratoDelay,p.vibratoDelay==h.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY),n=p.vibratoDepth,a=n):(e=h.vibratos[p.vibrato].delayTicks,n=h.vibratos[p.vibrato].amplitude,a=n),this.isModActive(h.modulators.dictionary["vibrato delay"].index,t,i.instrumentIndex)&&(e=2*this.getModValue(h.modulators.dictionary["vibrato delay"].index,t,i.instrumentIndex,!1),e==2*h.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY)),this.isModActive(h.modulators.dictionary["vibrato depth"].index,t,i.instrumentIndex)&&(n=this.getModValue(h.modulators.dictionary["vibrato depth"].index,t,i.instrumentIndex,!1)/25,a=this.getModValue(h.modulators.dictionary["vibrato depth"].index,t,i.instrumentIndex,!0)/25),null!=i.prevVibrato)s=i.prevVibrato;else{if(s=n*Ze.getLFOAmplitude(p,v*c.vibratoTime)*Q[20],e>0){const t=e-U.noteTicksStart;s*=Math.max(0,Math.min(1,1-t/2))}}let o=Ze.getLFOAmplitude(p,v*c.nextVibratoTime);const r=_[20];if(10!=p.type){let t=a*o*r;if(e>0){const n=e-U.noteTicksEnd;t*=Math.max(0,Math.min(1,1-n/2))}i.prevVibrato=t,H+=s,D+=t}}if(!u.isSeamless&&!i.forceContinueAtStart||null==i.prevNote){const e=p.getFadeInSeconds();e>0&&(O*=Math.min(1,U.noteSecondsStartUnscaled/e),G*=Math.min(1,U.noteSecondsEndUnscaled/e))}4==p.type&&null==i.drumsetPitch&&(i.drumsetPitch=i.pitches[0],null!=i.note&&(i.drumsetPitch+=i.note.pickMainInterval()),i.drumsetPitch=Math.max(0,Math.min(h.drumCount-1,i.drumsetPitch)));let K=U.lowpassCutoffDecayVolumeCompensation;if(q(p.effects)){const e=Q[1],t=_[1];if(p.noteFilterType){const n=Q[21],a=_[21],s=Q[29],r=_[29];W.toCoefficients(Ze.tempFilterStartCoefficients,this.samplesPerSecond,e*n,s),V.toCoefficients(Ze.tempFilterEndCoefficients,this.samplesPerSecond,t*a,r),i.noteFilters.length<1&&(i.noteFilters[0]=new he),i.noteFilters[0].loadCoefficientsWithGradient(Ze.tempFilterStartCoefficients,Ze.tempFilterEndCoefficients,1/o,0==W.type),K*=W.getVolumeCompensationMult(),i.noteFilterCount=1}else{const n=null!=p.tmpNoteFilterStart?p.tmpNoteFilterStart:p.noteFilter;for(let a=0;a<n.controlPointCount;a++){const s=Q[21+a],r=_[21+a],l=Q[29+a],h=_[29+a];let c=n.controlPoints[a];const u=null!=p.tmpNoteFilterEnd&&null!=p.tmpNoteFilterEnd.controlPoints[a]?p.tmpNoteFilterEnd.controlPoints[a]:n.controlPoints[a];c.type!=u.type&&(c=u),c.toCoefficients(Ze.tempFilterStartCoefficients,this.samplesPerSecond,e*s,l),u.toCoefficients(Ze.tempFilterEndCoefficients,this.samplesPerSecond,t*r,h),i.noteFilters.length<=a&&(i.noteFilters[a]=new he),i.noteFilters[a].loadCoefficientsWithGradient(Ze.tempFilterStartCoefficients,Ze.tempFilterEndCoefficients,1/o,0==c.type),K*=c.getVolumeCompensationMult()}i.noteFilterCount=n.controlPointCount}}else i.noteFilterCount=0;if(4==p.type){const e=i.envelopeComputer,t=p.getDrumsetEnvelope(i.drumsetPitch);K*=Ke.getLowpassCutoffDecayVolumeCompensation(t),e.computeDrumsetEnvelopes(p,t,S,P,T);const n=e.drumsetFilterEnvelopeStart,a=e.drumsetFilterEnvelopeEnd,s=this.tempDrumSetControlPoint;s.type=0,s.gain=We.getRoundedSettingValueFromLinearGain(.5),s.freq=We.getRoundedSettingValueFromHz(8e3),s.toCoefficients(Ze.tempFilterStartCoefficients,this.samplesPerSecond,n*(1+n),1),s.toCoefficients(Ze.tempFilterEndCoefficients,this.samplesPerSecond,a*(1+a),1),i.noteFilters.length==i.noteFilterCount&&(i.noteFilters[i.noteFilterCount]=new he),i.noteFilters[i.noteFilterCount].loadCoefficientsWithGradient(Ze.tempFilterStartCoefficients,Ze.tempFilterEndCoefficients,1/o,!0),i.noteFilterCount++}if(K=Math.min(3,K),1==p.type||11==p.type){let e=1,n=0,a=0;const s=f.arpeggiates;if(i.pitchCount>1&&s){const e=Math.floor(c.arpTime/h.ticksPerArpeggio);a=i.pitches[b(i.pitchCount,p.fastTwoNoteArp,e)]-i.pitches[0]}const r=11==p.type?p.customAlgorithm.carrierCount:h.algorithms[p.algorithm].carrierCount;for(let l=0;l<(11==p.type?6:h.operatorCount);l++){const c=11==p.type?p.customAlgorithm.associatedCarrier[l]-1:h.algorithms[p.algorithm].associatedCarrier[l]-1,u=i.pitches[s?0:l<i.pitchCount?l:c<i.pitchCount?c:0],f=h.operatorFrequencies[p.operators[l].frequency].mult,d=h.operatorCarrierInterval[c]+a,m=R+(u+H)*g+d,y=R+(u+D)*g+d,v=Ue.frequencyFromPitch(m),b=Ue.frequencyFromPitch(y),S=h.operatorFrequencies[p.operators[l].frequency].hzOffset,x=f*v+S,k=f*b+S,M=Q[5+l],F=_[5+l];let q,P;1!=M||1!=F?(q=Math.pow(2,Math.log2(x/v)*M)*v,P=Math.pow(2,Math.log2(k/b)*F)*b):(q=x,P=k),i.phaseDeltas[l]=q*w,i.phaseDeltaScales[l]=Math.pow(P/q,1/o);let T=p.operators[l].amplitude,z=p.operators[l].amplitude;l<4?this.isModActive(h.modulators.dictionary["fm slider 1"].index+l,t,i.instrumentIndex)&&(T*=this.getModValue(h.modulators.dictionary["fm slider 1"].index+l,t,i.instrumentIndex,!1)/15,z*=this.getModValue(h.modulators.dictionary["fm slider 1"].index+l,t,i.instrumentIndex,!0)/15):this.isModActive(h.modulators.dictionary["fm slider 5"].index+l-4,t,i.instrumentIndex)&&(T*=this.getModValue(h.modulators.dictionary["fm slider 5"].index+l-4,t,i.instrumentIndex,!1)/15,z*=this.getModValue(h.modulators.dictionary["fm slider 5"].index+l-4,t,i.instrumentIndex,!0)/15);const I=Ze.operatorAmplitudeCurve(T),C=Ze.operatorAmplitudeCurve(z);let O=I*h.operatorFrequencies[p.operators[l].frequency].amplitudeSign,G=C*h.operatorFrequencies[p.operators[l].frequency].amplitudeSign;if(l<r){let e;e=null!=i.prevPitchExpressions[l]?i.prevPitchExpressions[l]:Math.pow(2,-(m-A)/B);const t=Math.pow(2,-(y-A)/B);i.prevPitchExpressions[l]=t,O*=e,G*=t,n+=C}else O*=1.5*h.sineWaveLength,G*=1.5*h.sineWaveLength,e*=1-Math.min(1,p.operators[l].amplitude/15);if(O*=Q[11+l],G*=_[11+l],this.isModActive(h.modulators.dictionary["note volume"].index,t,i.instrumentIndex)){const e=this.getModValue(h.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!1),n=this.getModValue(h.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!0);O*=e<=0?(e+h.volumeRange/2)/(h.volumeRange/2):Ze.instrumentVolumeToVolumeMult(e),G*=n<=0?(n+h.volumeRange/2)/(h.volumeRange/2):Ze.instrumentVolumeToVolumeMult(n)}i.operatorExpressions[l]=O,i.operatorExpressionDeltas[l]=(G-O)/o}e*=(Math.pow(2,2-1.4*p.feedbackAmplitude/15)-1)/3,e*=1-Math.min(1,Math.max(0,n-1)/2),e=1+3*e;const l=N*e*K*O*L*Q[0],u=N*e*K*G*E*_[0];i.expression=l,i.expressionDelta=(u-l)/o;let d=p.feedbackAmplitude,m=p.feedbackAmplitude;this.isModActive(h.modulators.dictionary["fm feedback"].index,t,i.instrumentIndex)&&(d*=this.getModValue(h.modulators.dictionary["fm feedback"].index,t,i.instrumentIndex,!1)/15,m*=this.getModValue(h.modulators.dictionary["fm feedback"].index,t,i.instrumentIndex,!0)/15);let y=.3*h.sineWaveLength*d/15;const v=.3*h.sineWaveLength*m/15;let S=y*Q[17],x=v*_[17];i.feedbackMult=S,i.feedbackDelta=(x-S)/o}else{const e=Math.pow(2,(D-H)*g/12),n=Math.pow(e,1/o);let a=i.pitches[0];if(i.pitchCount>1&&(f.arpeggiates||f.customInterval)){const e=Math.floor(c.arpTime/h.ticksPerArpeggio);if(f.customInterval){const t=i.pitches[1+b(i.pitchCount-1,p.fastTwoNoteArp,e)]-i.pitches[0];I=Math.pow(2,t/12),i.specialIntervalExpressionMult=Math.pow(2,-t/B)}else a=i.pitches[b(i.pitchCount,p.fastTwoNoteArp,e)]}const s=R+(a+H)*g,r=R+(a+D)*g;let l;l=null!=i.prevPitchExpressions[0]?i.prevPitchExpressions[0]:Math.pow(2,-(s-A)/B);const m=Math.pow(2,-(r-A)/B);i.prevPitchExpressions[0]=m;let y=N*K;if(2==p.type&&(y*=h.chipNoises[p.chipNoise].expression),0==p.type&&(y*=h.chipWaves[p.chipWave].expression),6==p.type){const e=d(p.pulseWidth);let n=e,a=e;this.isModActive(h.modulators.dictionary["pulse width"].index,t,i.instrumentIndex)&&(n=this.getModValue(h.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!1)/(2*h.pulseWidthRange),a=this.getModValue(h.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!0)/(2*h.pulseWidthRange));const s=n*Q[2],r=a*_[2];i.pulseWidth=s,i.pulseWidthDelta=(r-s)/o;let l=p.decimalOffset;this.isModActive(h.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex)&&(l=this.getModValue(h.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex,!1));const c=l*Q[37];i.decimalOffset=c,i.pulseWidth-=i.decimalOffset/1e4}if(7==p.type){let e=p.stringSustain,n=p.stringSustain;this.isModActive(h.modulators.dictionary.sustain.index,t,i.instrumentIndex)&&(e=this.getModValue(h.modulators.dictionary.sustain.index,t,i.instrumentIndex,!1),n=this.getModValue(h.modulators.dictionary.sustain.index,t,i.instrumentIndex,!0)),i.stringSustainStart=e,i.stringSustainEnd=n,y*=Math.pow(2,.7*(1-e/(h.stringSustainRange-1)))}const v=Ue.frequencyFromPitch(s);if(0==p.type||9==p.type||5==p.type||7==p.type||3==p.type||6==p.type||2==p.type){const e=p.unisonVoices,t=p.unisonSpread,a=p.unisonOffset;y*=p.unisonExpression*(7==p.type?1:e/2);const s=Q[4],r=_[4],l=Math.pow(2,(a+t)*s/12),h=Math.pow(2,(a+t)*r/12),c=Math.pow(2,(a-t)*s/12)*I,u=Math.pow(2,(a-t)*r/12)*I;i.phaseDeltas[0]=v*w*l,i.phaseDeltas[1]=v*w*c,i.phaseDeltaScales[0]=n*Math.pow(h/l,1/o),i.phaseDeltaScales[1]=n*Math.pow(u/c,1/o)}else i.phaseDeltas[0]=v*w,i.phaseDeltaScales[0]=n;let S=1,x=1;if(8==p.type){const n=1/Math.sqrt(h.supersawVoiceCount);let a=p.supersawDynamism/h.supersawDynamismMax,s=p.supersawDynamism/h.supersawDynamismMax;this.isModActive(h.modulators.dictionary.dynamism.index,t,i.instrumentIndex)&&(a=this.getModValue(h.modulators.dictionary.dynamism.index,t,i.instrumentIndex,!1)/h.supersawDynamismMax,s=this.getModValue(h.modulators.dictionary.dynamism.index,t,i.instrumentIndex,!0)/h.supersawDynamismMax);const r=1-Math.pow(Math.max(0,1-a*Q[38]),.2),l=1-Math.pow(Math.max(0,1-s*_[38]),.2),c=Math.pow(2,Math.log2(n)*r),u=Math.pow(2,Math.log2(n)*l),f=Math.sqrt((1/Math.pow(c,2)-1)/(h.supersawVoiceCount-1)),m=Math.sqrt((1/Math.pow(u,2)-1)/(h.supersawVoiceCount-1));i.supersawDynamism=f,i.supersawDynamismDelta=(m-f)/o;const y=-1==i.supersawDelayIndex;if(y){let e=0;for(let t=0;t<h.supersawVoiceCount;t++)i.phases[t]=e,e+=-Math.log(Math.random());const t=1+(h.supersawVoiceCount-1)*f;let n=0;for(let t=0;t<h.supersawVoiceCount;t++){const a=0==t?1:f,s=i.phases[t]/e;i.phases[t]=s,n+=(s-.5)*a}let a=1,s=0;for(let e=h.supersawVoiceCount-1;e>=0;e--){const o=1-i.phases[e],r=o-s;if(n<0){const e=-n/t;if(e<r){a=s+e;break}}n+=r*t-(0==e?1:f),s=o}for(let e=0;e<h.supersawVoiceCount;e++)i.phases[e]+=a;for(let e=1;e<h.supersawVoiceCount-1;e++){const t=e+Math.floor(Math.random()*(h.supersawVoiceCount-e)),n=i.phases[e];i.phases[e]=i.phases[t],i.phases[t]=n}}const g=p.supersawSpread/h.supersawSpreadMax;let b=g,k=g;this.isModActive(h.modulators.dictionary.spread.index,t,i.instrumentIndex)&&(b=this.getModValue(h.modulators.dictionary.spread.index,t,i.instrumentIndex,!1)/h.supersawSpreadMax,k=this.getModValue(h.modulators.dictionary.spread.index,t,i.instrumentIndex,!0)/h.supersawSpreadMax);const M=.5*(b*Q[39]+k*_[39]),F=Math.pow(1-Math.sqrt(Math.max(0,1-M)),1.75);for(let e=0;e<h.supersawVoiceCount;e++){const t=0==e?0:Math.pow(((e+1>>1)-.5+.025*((2&e)-1))/(h.supersawVoiceCount>>1),1.1)*(2*(1&e)-1);i.supersawUnisonDetunes[e]=Math.pow(2,F*t/12)}const q=p.supersawShape/h.supersawShapeMax;let P=q*Q[40],T=q*_[40];this.isModActive(h.modulators.dictionary["saw shape"].index,t,i.instrumentIndex)&&(P=this.getModValue(h.modulators.dictionary["saw shape"].index,t,i.instrumentIndex,!1)/h.supersawShapeMax,T=this.getModValue(h.modulators.dictionary["saw shape"].index,t,i.instrumentIndex,!0)/h.supersawShapeMax);const z=P*Q[40],I=T*_[40];i.supersawShape=z,i.supersawShapeDelta=(I-z)/o;let C=p.decimalOffset;this.isModActive(h.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex)&&(C=this.getModValue(h.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex,!1));const H=C*Q[37];i.decimalOffset=H;const D=d(p.pulseWidth);let O=D,G=D;this.isModActive(h.modulators.dictionary["pulse width"].index,t,i.instrumentIndex)&&(O=this.getModValue(h.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!1)/(2*h.pulseWidthRange),G=this.getModValue(h.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!0)/(2*h.pulseWidthRange));let L=O*Q[2],E=G*_[2];L-=H/1e4,E-=H/1e4;const A=null!=i.supersawPrevPhaseDelta?i.supersawPrevPhaseDelta:v*w,R=v*w*e;i.supersawPrevPhaseDelta=R;const N=L/A,B=E/R;i.supersawDelayLength=N,i.supersawDelayLengthDelta=(B-N)/o;const W=Math.ceil(Math.max(N,B))+2;if(null==i.supersawDelayLine||i.supersawDelayLine.length<=W){const e=Math.ceil(.5*this.samplesPerSecond/Ue.frequencyFromPitch(24)),t=new Float32Array(Ze.fittingPowerOfTwo(Math.max(e,W)));if(!y&&null!=i.supersawDelayLine){const e=i.supersawDelayLine.length-1>>0,n=i.supersawDelayIndex;for(let a=0;a<i.supersawDelayLine.length;a++)t[a]=i.supersawDelayLine[n+a&e]}i.supersawDelayLine=t,i.supersawDelayIndex=i.supersawDelayLine.length}else y&&(i.supersawDelayLine.fill(0),i.supersawDelayIndex=i.supersawDelayLine.length);const V=h.pwmBaseExpression/h.supersawBaseExpression;S*=(1+(V-1)*z)/Math.sqrt(1+(h.supersawVoiceCount-1)*f*f),x*=(1+(V-1)*I)/Math.sqrt(1+(h.supersawVoiceCount-1)*m*m)}let k=y*O*L*l*Q[0]*S,M=y*G*E*m*_[0]*x;if(this.isModActive(h.modulators.dictionary["note volume"].index,t,i.instrumentIndex)){const e=this.getModValue(h.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!1),n=this.getModValue(h.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!0);k*=e<=0?(e+h.volumeRange/2)/(h.volumeRange/2):Ze.instrumentVolumeToVolumeMult(e),M*=n<=0?(n+h.volumeRange/2)/(h.volumeRange/2):Ze.instrumentVolumeToVolumeMult(n)}if(i.expression=k,i.expressionDelta=(M-k)/o,7==p.type){let e;if(null!=i.prevStringDecay)e=i.prevStringDecay;else{const t=i.envelopeComputer.envelopeStarts[3];e=1-Math.min(1,t*i.stringSustainStart/(h.stringSustainRange-1))}const t=i.envelopeComputer.envelopeEnds[3];let n=1-Math.min(1,t*i.stringSustainEnd/(h.stringSustainRange-1));i.prevStringDecay=n;const a=p.unisonVoices;for(let e=i.pickedStrings.length;e<a;e++)i.pickedStrings[e]=new _e;if(i.atNoteStart&&!u.continues&&!i.forceContinueAtStart)for(const e of i.pickedStrings)e.delayIndex=-1;for(let t=0;t<a;t++)i.pickedStrings[t].update(this,c,i,t,o,e,n,p.stringSustainType)}}}static getLFOAmplitude(e,t){let n=0;for(const i of h.vibratoTypes[e.vibratoType].periodsSeconds)n+=Math.sin(2*Math.PI*t/i);return n}static getInstrumentSynthFunction(e){if(1==e.type){const t=e.algorithm+"_"+e.feedbackType;if(null==Ze.fmSynthFunctionCache[t]){const n=[];for(const t of Ze.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const i=[];for(let t=0;t<h.algorithms[e.algorithm].carrierCount;t++)i.push("operator"+t+"Scaled");n.push(t.replace("/*operator#Scaled*/",i.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=h.operatorCount-1;t>=0;t--)for(const i of Ze.operatorSourceTemplate)if(-1!=i.indexOf("/* + operator@Scaled*/")){let a="";for(const n of h.algorithms[e.algorithm].modulatedBy[t])a+=" + operator"+(n-1)+"Scaled";const s=h.feedbacks[e.feedbackType].indices[t];if(s.length>0){a+=" + feedbackMult * (";const e=[];for(const t of s)e.push("operator"+(t-1)+"Output");a+=e.join(" + ")+")"}n.push(i.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",a))}else n.push(i.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<h.operatorCount;e++)n.push(t.replace(/\#/g,e+""));else n.push(t);const i="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join("\n")+"}";Ze.fmSynthFunctionCache[t]=new Function("Config","Synth",i)(h,Ze)}return Ze.fmSynthFunctionCache[t]}if(0==e.type)return e.isUsingAdvancedLoopControls?Ze.loopableChipSynth:Ze.chipSynth;if(9==e.type)return Ze.chipSynth;if(5==e.type)return Ze.harmonicsSynth;if(6==e.type)return Ze.pulseWidthSynth;if(8==e.type)return Ze.supersawSynth;if(7==e.type)return Ze.pickedStringSynth;if(2==e.type)return Ze.noiseSynth;if(3==e.type)return Ze.spectrumSynth;if(4==e.type)return Ze.drumsetSynth;if(10==e.type)return Ze.modSynth;if(11==e.type){const t=e.customAlgorithm.name+"_"+e.customFeedbackType.name;if(null==Ze.fm6SynthFunctionCache[t]){const n=[];for(const t of Ze.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const i=[];for(let t=0;t<e.customAlgorithm.carrierCount;t++)i.push("operator"+t+"Scaled");n.push(t.replace("/*operator#Scaled*/",i.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=h.operatorCount+2-1;t>=0;t--)for(const i of Ze.operatorSourceTemplate)if(-1!=i.indexOf("/* + operator@Scaled*/")){let a="";for(const n of e.customAlgorithm.modulatedBy[t])a+=" + operator"+(n-1)+"Scaled";const s=e.customFeedbackType.indices[t];if(s.length>0){a+=" + feedbackMult * (";const e=[];for(const t of s)e.push("operator"+(t-1)+"Output");a+=e.join(" + ")+")"}n.push(i.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",a))}else n.push(i.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<h.operatorCount+2;e++)n.push(t.replace(/\#/g,e+""));else n.push(t);const i="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join("\n")+"}";Ze.fm6SynthFunctionCache[t]=new Function("Config","Synth",i)(h,Ze)}return Ze.fm6SynthFunctionCache[t]}throw new Error("Unrecognized instrument type: "+e.type)}static wrap(e,t){return(e%t+t)%t}static loopableChipSynth(e,t,n,i,a){const s=P(a.effects)&&a.aliases,o=e.tempMonoInstrumentSampleBuffer,r=a.wave,l=a.volumeScale,p=s&&8==a.type?r.length:r.length-1;let h=Math.max(0,Math.min(p,a.chipWaveLoopEnd)),c=Math.max(0,Math.min(h-1,a.chipWaveLoopStart)),u=h-c;u<2&&(c=0,h=p,u=p);const f=a.chipWaveLoopMode,d=a.chipWavePlayBackwards,m=i.specialIntervalExpressionMult*a.unisonSign;1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(i.phases[1]=i.phases[0]);let y=i.phaseDeltas[0]*p,g=i.phaseDeltas[1]*p,v=i.directions[0],b=i.directions[1],w=i.chipWaveCompletions[0],S=i.chipWaveCompletions[1];3!==f&&2!==f&&0!==f||(d?(v=-1,b=-1):(v=1,b=1)),0!==f&&1!==f||(w=0,S=0);let x=i.chipWaveCompletionsLastWave[0],k=i.chipWaveCompletionsLastWave[1];const M=1e3,F=+i.phaseDeltaScales[0],q=+i.phaseDeltaScales[1];let T=+i.expression;const z=+i.expressionDelta;let I=Ze.wrap(i.phases[0],1)*p,C=Ze.wrap(i.phases[1],1)*p,H=0,D=0;if(!s){const e=Math.floor(I),t=Math.floor(C),n=Ze.wrap(e,p),i=Ze.wrap(t,p),a=I-e,s=C-t;H=+r[n],D=+r[i],H+=(r[Ze.wrap(n+1,p)]-H)*a,D+=(r[Ze.wrap(i+1,p)]-D)*s}const O=i.noteFilters,G=0|i.noteFilterCount;let L=+i.initialNoteFilterInput1,E=+i.initialNoteFilterInput2;const A=Ze.applyFilters,R=t+n;let N=i.chipWavePrevWaves[0],B=i.chipWavePrevWaves[1];for(let e=t;e<R;e++){w>0&&w<M&&w++,S>0&&S<M&&S++;let t=0;I+=y*v,C+=g*b,2===f?(1===v?I>p&&(w<=0&&(x=N,w++),t=1):-1===v&&I<0&&(w<=0&&(x=N,w++),t=1),1===b?C>p&&(S<=0&&(k=B,S++),t=1):-1===v&&C<0&&(S<=0&&(k=B,S++),t=1)):3===f?(1===v?I>h&&(w<=0&&(x=N,w++),t=1):-1===v&&I<c&&(w<=0&&(x=N,w++),t=1),1===b?C>h&&(S<=0&&(k=B,S++),t=1):-1===v&&C<c&&(S<=0&&(k=B,S++),t=1)):0===f?(1===v?I>h&&(I=c+Ze.wrap(I-h,u),t=1):-1===v&&I<c&&(I=h-Ze.wrap(c-I,u),t=1),1===b?C>h&&(C=c+Ze.wrap(C-h,u),t=1):-1===b&&C<c&&(C=h-Ze.wrap(c-C,u),t=1)):1===f&&(1===v?I>h&&(I=h-Ze.wrap(I-h,u),v=-1,t=1):-1===v&&I<c&&(I=c+Ze.wrap(c-I,u),v=1,t=1),1===b?C>h&&(C=h-Ze.wrap(C-h,u),b=-1,t=1):-1===b&&C<c&&(C=c+Ze.wrap(c-C,u),b=1,t=1));let n=0,i=0,a=0;if(s){n=r[Ze.wrap(Math.floor(I),p)],i=r[Ze.wrap(Math.floor(C),p)],N=n,B=i;const e=w>0?(M-Math.min(w,M))/M:1,t=S>0?(M-Math.min(S,M))/M:1;a=0,a+=w>0?x*e:n,a+=S>0?k*t:i}else{const e=Math.floor(I),s=Math.floor(C),o=Ze.wrap(e,p),l=Ze.wrap(s,p);let u=r[o],d=r[l];const F=I-e,q=C-s;if(u+=(r[Ze.wrap(o+1,p)]-u)*F,d+=(r[Ze.wrap(l+1,p)]-d)*q,(0!==f||0!==c||h!==p)&&0!==t){let e=0,t=0;const n=Math.max(0,I-y*v),i=Math.max(0,C-g*b),a=Math.floor(n),s=Math.floor(i),o=Ze.wrap(a,p),l=Ze.wrap(s,p);e=r[o],t=r[l],e+=(r[Ze.wrap(o+1,p)]-e)*(n-a)*v,t+=(r[Ze.wrap(l+1,p)]-t)*(i-s)*b,H=e,D=t}1===f&&0!==t?(n=N,i=B):(n=(u-H)/(y*v),i=(d-D)/(g*b)),N=n,B=i,H=u,D=d;const P=w>0?(M-Math.min(w,M))/M:1,T=S>0?(M-Math.min(S,M))/M:1;a+=w>0?x*P:n,a+=S>0?k*T:i*m}const d=A(a*l,L,E,G,O);E=L,L=a*l,y*=F,g*=q;const P=d*T;T+=z,o[e]+=P}i.phases[0]=I/p,i.phases[1]=C/p,i.phaseDeltas[0]=y/p,i.phaseDeltas[1]=g/p,i.directions[0]=v,i.directions[1]=b,i.chipWaveCompletions[0]=w,i.chipWaveCompletions[1]=S,i.chipWavePrevWaves[0]=N,i.chipWavePrevWaves[1]=B,i.chipWaveCompletionsLastWave[0]=x,i.chipWaveCompletionsLastWave[1]=k,i.expression=T,e.sanitizeFilters(O),i.initialNoteFilterInput1=L,i.initialNoteFilterInput2=E}static chipSynth(e,t,n,i,a){const s=P(a.effects)&&a.aliases,o=e.tempMonoInstrumentSampleBuffer,r=a.wave,l=a.volumeScale,p=s&&8==a.type?r.length:r.length-1,h=i.specialIntervalExpressionMult*a.unisonSign;1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(i.phases[1]=i.phases[0]);let c=i.phaseDeltas[0]*p,u=i.phaseDeltas[1]*p;const f=+i.phaseDeltaScales[0],d=+i.phaseDeltaScales[1];let m=+i.expression;const y=+i.expressionDelta;let g=i.phases[0]%1*p,v=i.phases[1]%1*p;const b=i.noteFilters,w=0|i.noteFilterCount;let S=+i.initialNoteFilterInput1,x=+i.initialNoteFilterInput2;const k=Ze.applyFilters;let M=0,F=0;if(!s){const e=0|g,t=0|v,n=e%p,i=t%p,a=g-e,s=v-t;M=+r[n],F=+r[i],M+=(r[n+1]-M)*a,F+=(r[i+1]-F)*s}const q=t+n;for(let e=t;e<q;e++){let t,n,i;if(g+=c,v+=u,s)t=r[(0|g)%p],n=r[(0|v)%p],i=t+n;else{const e=0|g,a=0|v,s=e%p,o=a%p;let l=r[s],f=r[o];const d=g-e,m=v-a;l+=(r[s+1]-l)*d,f+=(r[o+1]-f)*m,t=(l-M)/c,n=(f-F)/u,M=l,F=f,i=t+n*h}const a=k(i*l,S,x,w,b);x=S,S=i*l,c*=f,u*=d;const q=a*m;m+=y,o[e]+=q}i.phases[0]=g/p,i.phases[1]=v/p,i.phaseDeltas[0]=c/p,i.phaseDeltas[1]=u/p,i.expression=m,e.sanitizeFilters(b),i.initialNoteFilterInput1=S,i.initialNoteFilterInput2=x}static harmonicsSynth(e,t,n,i,a){const s=e.tempMonoInstrumentSampleBuffer,o=a.wave,r=o.length-1,l=i.specialIntervalExpressionMult*a.unisonSign;1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(i.phases[1]=i.phases[0]);let p=i.phaseDeltas[0]*r,h=i.phaseDeltas[1]*r;const c=+i.phaseDeltaScales[0],u=+i.phaseDeltaScales[1];let f=+i.expression;const d=+i.expressionDelta;let m=i.phases[0]%1*r,y=i.phases[1]%1*r;const g=i.noteFilters,v=0|i.noteFilterCount;let b=+i.initialNoteFilterInput1,w=+i.initialNoteFilterInput2;const S=Ze.applyFilters,x=0|m,k=0|y,M=x%r,F=k%r,q=m-x,P=y-k;let T=+o[M],z=+o[F];T+=(o[M+1]-T)*q,z+=(o[F+1]-z)*P;const I=t+n;for(let e=t;e<I;e++){m+=p,y+=h;const t=0|m,n=0|y,i=t%r,a=n%r;let x=o[i],k=o[a];const M=m-t,F=y-n;x+=(o[i+1]-x)*M,k+=(o[a+1]-k)*F;const q=(x-T)/p,P=(k-z)/h;T=x,z=k;const I=q+P*l,C=S(I,b,w,v,g);w=b,b=I,p*=c,h*=u;const H=C*f;f+=d,s[e]+=H}i.phases[0]=m/r,i.phases[1]=y/r,i.phaseDeltas[0]=p/r,i.phaseDeltas[1]=h/r,i.expression=f,e.sanitizeFilters(g),i.initialNoteFilterInput1=b,i.initialNoteFilterInput2=w}static pickedStringSynth(e,t,n,i,a){const s=a.unisonVoices;let o=Ze.pickedStringFunctionCache[s];if(null==o){let e="return (synth, bufferIndex, runLength, tone, instrumentState) => {";e+="\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (";const t=[];for(let e=0;e<s;e++)t.push("fractionalDelaySample"+e+(1==e?" * unisonSign":""));e+=t.join(" + "),e+=") * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}",e=e.replace(/^.*\#.*$/gm,(e=>{const t=[];for(let n=0;n<s;n++)t.push(e.replace(/\#/g,String(n)));return t.join("\n")})),o=new Function("Config","Synth",e)(h,Ze),Ze.pickedStringFunctionCache[s]=o}o(e,t,n,i,a)}static effectsSynth(e,t,n,i,a,s){const o=P(s.effects),r=T(s.effects),l=s.eqFilterCount>0,p=z(s.effects),c=I(s.effects),u=C(s.effects),f=H(s.effects),d=D(s.effects),m=O(s.effects),y=L(s.effects)&&s.invertWave;let g=0;o&&(g|=1),g<<=1,r&&(g|=1),g<<=1,l&&(g|=1),g<<=1,p&&(g|=1),g<<=1,c&&(g|=1),g<<=1,u&&(g|=1),g<<=1,f&&(g|=1),g<<=1,d&&(g|=1),g<<=1,m&&(g|=1),g<<=1,y&&(g|=1);let v=Ze.effectsFunctionCache[g];if(null==v){let e="return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {";const t=c||f||u;e+="\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;",t&&(e+="\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;"),y&&(e+="\n                let isInverted = +instrumentState.invertWave;\n                "),o&&(e+="\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;"),r&&(e+="\n\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;"),d&&(e+="\n                let ringModMix = +instrumentState.ringModMix;\n                let ringModMixDelta = +instrumentState.ringModMixDelta;\n                let ringModPhase = +instrumentState.ringModPhase;\n                let ringModPhaseDelta = +instrumentState.ringModPhaseDelta;\n                let ringModPhaseDeltaScale = +instrumentState.ringModPhaseDeltaScale;\n                let rmWaveformIndex = +instrumentState.rmWaveformIndex;\n                let rmPulseWidth = +instrumentState.rmPulseWidth;\n\n                let waveform = Config.operatorWaves[rmWaveformIndex].samples; // index presumably comes from a dropdown\n                if (rmWaveformIndex == 2) {\n                    waveform = Synth.getOperatorWave(rmWaveformIndex, rmPulseWidth).samples; \n                }\n                const waveformLength = waveform.length - 1;\n                "),m&&(e+="\n                \n                const phaserSamples = instrumentState.phaserSamples;\n                const phaserPrevInputs = instrumentState.phaserPrevInputs;\n                let phaserStages = instrumentState.phaserStages;\n                let phaserStagesInt = Math.floor(phaserStages);\n                const phaserStagesDelta = instrumentState.phaserStagesDelta;\n                const phaserFeedbackMultDelta = +instrumentState.phaserFeedbackMultDelta;\n                let phaserFeedbackMult = +instrumentState.phaserFeedbackMult;\n                const phaserMixDelta = +instrumentState.phaserMixDelta;\n                let phaserMix = +instrumentState.phaserMix;\n                const phaserBreakCoefDelta = +instrumentState.phaserBreakCoefDelta;\n                let phaserBreakCoef = +instrumentState.phaserBreakCoef;\n                "),l&&(e+="\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;"),e+="\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;",p&&(e+="\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;"),c&&(e+="\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;"),u&&(e+="\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;"),e+="\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;",y&&(e+="\n                    sample = sample*-1;\n                "),o&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;"),r&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;"),d&&(e+=" \n\n                const ringModOutput = sample * waveform[(ringModPhase*waveformLength)|0];\n                sample = sample * (1 - ringModMix) + ringModOutput * ringModMix;\n\n                ringModMix += ringModMixDelta;\n                ringModPhase += ringModPhaseDelta;\n                ringModPhase = ringModPhase % 1.0;\n                ringModPhaseDelta *= ringModPhaseDeltaScale;\n\n                "),m&&(e+="\n                        const phaserFeedback = phaserSamples[Math.max(0,phaserStagesInt - 1)] * phaserFeedbackMult;\n                        for (let stage = 0; stage < phaserStagesInt; stage++) {\n                            const phaserInput = stage === 0 ? sample + phaserFeedback : phaserSamples[stage - 1];\n                            const phaserPrevInput = phaserPrevInputs[stage];\n                            const phaserSample = phaserSamples[stage];\n                            const phaserNextOutput = phaserBreakCoef * phaserInput + phaserPrevInput - phaserBreakCoef * phaserSample;\n                            phaserPrevInputs[stage] = phaserInput;\n                            phaserSamples[stage] = phaserNextOutput;\n                        }\n                        const phaserOutput = phaserSamples[Math.max(0,phaserStagesInt - 1)];\n                        sample = sample + phaserOutput * phaserMix;\n                        phaserFeedbackMult += phaserFeedbackMultDelta;\n                        phaserBreakCoef += phaserBreakCoefDelta;\n                        phaserMix += phaserMixDelta;\n                        phaserStages += phaserStagesDelta;\n                        /*phaserStagesInt = Math.floor(phaserStages);*/\n                    "),l&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;"),e+="\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;",e+=p?"\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;":"\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;",c&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;"),u&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    "),f&&(e+="\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;"),e+="\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;",t&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;"),e+="\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);",t&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;"),o&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;"),r&&(e+="\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;"),d&&(e+=" \n\n                instrumentState.ringModMix = ringModMix;\n                instrumentState.ringModMixDelta = ringModMixDelta;\n                instrumentState.ringModPhase = ringModPhase;\n                instrumentState.ringModPhaseDelta = ringModPhaseDelta;\n                instrumentState.ringModPhaseDeltaScale = ringModPhaseDeltaScale;\n                instrumentState.rmWaveformIndex = rmWaveformIndex;\n                instrumentState.rmPulseWidth = rmPulseWidth;\n                "),m&&(e+="\n                \n                for (let stage = 0; stage < phaserStages; stage++) {\n                    if (!Number.isFinite(phaserPrevInputs[stage]) || Math.abs(phaserPrevInputs[stage]) < epsilon) phaserPrevInputs[stage] = 0.0;\n                    if (!Number.isFinite(phaserSamples[stage]) || Math.abs(phaserSamples[stage]) < epsilon) phaserSamples[stage] = 0.0;\n                }\n                \n                instrumentState.phaserMix = phaserMix;\n                instrumentState.phaserFeedbackMult = phaserFeedbackMult;\n                instrumentState.phaserBreakCoef = phaserBreakCoef;\n                "),l&&(e+="\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;"),p&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;"),c&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;"),u&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;"),e+="}",v=new Function("Config","Synth",e)(h,Ze),Ze.effectsFunctionCache[g]=v}v(e,t,n,i,a,s)}static pulseWidthSynth(e,t,n,i,a){const s=e.tempMonoInstrumentSampleBuffer,o=i.specialIntervalExpressionMult*a.unisonSign;1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(i.phases[1]=i.phases[0]);let r=i.phaseDeltas[0],l=i.phaseDeltas[1];const p=+i.phaseDeltaScales[0],h=+i.phaseDeltaScales[1];let c=+i.expression;const u=+i.expressionDelta;let f=i.phases[0]%1,d=i.phases[1]%1,m=i.pulseWidth;const y=i.pulseWidthDelta,g=i.noteFilters,v=0|i.noteFilterCount;let b=+i.initialNoteFilterInput1,w=+i.initialNoteFilterInput2;const S=Ze.applyFilters,x=t+n;for(let e=t;e<x;e++){const t=f%1,n=(f+m)%1,i=d%1,x=(d+m)%1;let M=n-t,F=x-i;if(!a.aliases){if(t<r)M+=.5*((k=t/r)+k-k*k-1);else if(t>1-r){M+=.5*((k=(t-1)/r)+k+k*k+1)}if(n<r)M-=.5*((k=n/r)+k-k*k-1);else if(n>1-r){M-=.5*((k=(n-1)/r)+k+k*k+1)}if(i<l)F+=.5*((k=i/l)+k-k*k-1);else if(i>1-l){F+=.5*((k=(i-1)/l)+k+k*k+1)}if(x<l)F-=.5*((k=x/l)+k-k*k-1);else if(x>1-l){var k;F-=.5*((k=(x-1)/l)+k+k*k+1)}}const q=M+F*o,P=S(q,b,w,v,g);w=b,b=q,f+=r,d+=l,r*=p,l*=h,m+=y;const T=P*c;c+=u,s[e]+=T}i.phases[0]=f,i.phases[1]=d,i.phaseDeltas[0]=r,i.phaseDeltas[1]=l,i.expression=c,i.pulseWidth=m,e.sanitizeFilters(g),i.initialNoteFilterInput1=b,i.initialNoteFilterInput2=w}static supersawSynth(e,t,n,i,a){const s=e.tempMonoInstrumentSampleBuffer,o=0|h.supersawVoiceCount;let r=i.phaseDeltas[0];const l=+i.phaseDeltaScales[0];let p=+i.expression;const c=+i.expressionDelta;let u=i.phases,f=+i.supersawDynamism;const d=+i.supersawDynamismDelta,m=i.supersawUnisonDetunes;let y=+i.supersawShape;const g=+i.supersawShapeDelta;let v=+i.supersawDelayLength;const b=+i.supersawDelayLengthDelta,w=i.supersawDelayLine,S=w.length-1>>0;let x=0|i.supersawDelayIndex;x=(x&S)+w.length;const k=i.noteFilters,M=0|i.noteFilterCount;let F=+i.initialNoteFilterInput1,q=+i.initialNoteFilterInput2;const P=Ze.applyFilters,T=t+n;for(let e=t;e<T;e++){let t=(u[0]+r)%1,n=t-.5*(1+(o-1)*f);if(!a.aliases)if(t<r)n-=.5*((z=t/r)+z-z*z-1);else if(t>1-r){var z;n-=.5*((z=(t-1)/r)+z+z*z+1)}u[0]=t;for(let e=1;e<o;e++){const t=r*m[e];let i=(u[e]+t)%1;if(n+=i*f,!a.aliases)if(i<t){const e=i/t;n-=.5*(e+e-e*e-1)*f}else if(i>1-t){const e=(i-1)/t;n-=.5*(e+e+e*e+1)*f}u[e]=i}w[x&S]=n;const i=x-v,h=0|i,T=h+1,I=i-h,C=w[h&S];x++;const H=n-(C+(w[T&S]-C)*I)*y,D=P(H,F,q,M,k);q=F,F=H,r*=l,f+=d,y+=g,v+=b;const O=D*p;p+=c,s[e]+=O}i.phaseDeltas[0]=r,i.expression=p,i.supersawDynamism=f,i.supersawShape=y,i.supersawDelayLength=v,i.supersawDelayIndex=x,e.sanitizeFilters(k),i.initialNoteFilterInput1=F,i.initialNoteFilterInput2=q}static noiseSynth(e,t,n,i,a){const s=e.tempMonoInstrumentSampleBuffer,o=a.wave,r=i.specialIntervalExpressionMult*a.unisonSign;1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(i.phases[1]=i.phases[0]);let l=i.phaseDeltas[0],p=i.phaseDeltas[1];const c=+i.phaseDeltaScales[0],u=+i.phaseDeltaScales[1];let f=+i.expression;const d=+i.expressionDelta;let m=i.phases[0]%1*h.chipNoiseLength,y=i.phases[1]%1*h.chipNoiseLength;0==i.phases[0]&&(m=Math.random()*h.chipNoiseLength,1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(y=m)),0==i.phases[1]&&(1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval)&&(y=Math.random()*h.chipNoiseLength);const g=h.chipNoiseLength-1;let v=+i.noiseSampleA,b=+i.noiseSampleB;const w=i.noteFilters,S=0|i.noteFilterCount;let x=+i.initialNoteFilterInput1,k=+i.initialNoteFilterInput2;const M=Ze.applyFilters,F=Math.min(1,l*a.noisePitchFilterMult),q=Math.min(1,p*a.noisePitchFilterMult),P=t+n;for(let e=t;e<P;e++){v+=(o[m&g]-v)*F,b+=(o[y&g]-b)*q;const t=v+b*r,n=M(t,x,k,S,w);k=x,x=t,m+=l,y+=p,l*=c,p*=u;const i=n*f;f+=d,s[e]+=i}i.phases[0]=m/h.chipNoiseLength,i.phases[1]=y/h.chipNoiseLength,i.phaseDeltas[0]=l,i.phaseDeltas[1]=p,i.expression=f,i.noiseSampleA=v,i.noiseSampleB=b,e.sanitizeFilters(w),i.initialNoteFilterInput1=x,i.initialNoteFilterInput2=k}static spectrumSynth(e,t,n,i,a){const s=e.tempMonoInstrumentSampleBuffer,o=a.wave,r=128,l=i.specialIntervalExpressionMult*a.unisonSign;1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(i.phases[1]=i.phases[0]);let p=i.phaseDeltas[0]*r,c=i.phaseDeltas[1]*r;const u=+i.phaseDeltaScales[0],f=+i.phaseDeltaScales[1];let d=+i.expression;const m=+i.expressionDelta;let y=+i.noiseSampleA,g=+i.noiseSampleB;const v=i.noteFilters,b=0|i.noteFilterCount;let w=+i.initialNoteFilterInput1,S=+i.initialNoteFilterInput2;const x=Ze.applyFilters;let k=i.phases[0]%1*h.spectrumNoiseLength,M=i.phases[1]%1*h.spectrumNoiseLength;0==i.phases[0]&&(k=Ze.findRandomZeroCrossing(o,h.spectrumNoiseLength)+p,1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval||(M=k)),0==i.phases[1]&&(1!=a.unisonVoices||0!=a.unisonSpread&&!a.unisonBuzzes||a.chord.customInterval)&&(M=Ze.findRandomZeroCrossing(o,h.spectrumNoiseLength)+c);const F=h.spectrumNoiseLength-1,q=Math.min(1,p),P=Math.min(1,c),T=t+n;for(let e=t;e<T;e++){const t=0|k,n=0|M,i=t&F,a=n&F;let r=o[i],h=o[a];const T=k-t,z=M-n;r+=(o[i+1]-r)*T,h+=(o[a+1]-h)*z,y+=(r-y)*q,g+=(h-g)*P;const I=y+g*l,C=x(I,w,S,b,v);S=w,w=I,k+=p,M+=c,p*=u,c*=f;const H=C*d;d+=m,s[e]+=H}i.phases[0]=k/h.spectrumNoiseLength,i.phases[1]=M/h.spectrumNoiseLength,i.phaseDeltas[0]=p/r,i.phaseDeltas[1]=c/r,i.expression=d,i.noiseSampleA=y,i.noiseSampleB=g,e.sanitizeFilters(v),i.initialNoteFilterInput1=w,i.initialNoteFilterInput2=S}static drumsetSynth(e,t,n,i,a){const s=e.tempMonoInstrumentSampleBuffer;let o=a.getDrumsetWave(i.drumsetPitch);const r=Xe.drumsetIndexReferenceDelta(i.drumsetPitch);let l=i.phaseDeltas[0]/r;const p=+i.phaseDeltaScales[0];let c=+i.expression;const u=+i.expressionDelta,f=i.noteFilters,d=0|i.noteFilterCount;let m=+i.initialNoteFilterInput1,y=+i.initialNoteFilterInput2;const g=Ze.applyFilters;let v=i.phases[0]%1*h.spectrumNoiseLength;0==i.phases[0]&&(v=Ze.findRandomZeroCrossing(o,h.spectrumNoiseLength)+l);const b=h.spectrumNoiseLength-1,w=t+n;for(let e=t;e<w;e++){const t=0|v,n=t&b;let i=o[n];const a=v-t;i+=(o[n+1]-i)*a;const r=i,h=g(r,m,y,d,f);y=m,m=r,v+=l,l*=p;const w=h*c;c+=u,s[e]+=w}i.phases[0]=v/h.spectrumNoiseLength,i.phaseDeltas[0]=l*r,i.expression=c,e.sanitizeFilters(f),i.initialNoteFilterInput1=m,i.initialNoteFilterInput2=y}static modSynth(e,t,n,i,a){if(!e.song)return;let s=h.modCount-1-i.pitches[0];if(a.invalidModulators[s])return;let o=a.modulators[s],r=[];if(h.modulators[a.modulators[s]].forSong)r.push(0);else if(a.modInstruments[s]==e.song.channels[a.modChannels[s]].instruments.length)for(let t=0;t<e.song.channels[a.modChannels[s]].instruments.length;t++)r.push(t);else a.modInstruments[s]>e.song.channels[a.modChannels[s]].instruments.length?null!=e.song.getPattern(a.modChannels[s],e.bar)&&(r=e.song.getPattern(a.modChannels[s],e.bar).instruments):r.push(a.modInstruments[s]);for(let t=0;t<r.length;t++){e.setModValue(i.expression,i.expression+i.expressionDelta,a.modChannels[s],r[t],o);for(let n=0;n<e.heldMods.length;n++)h.modulators[a.modulators[s]].forSong?e.heldMods[n].setting==o&&e.setModValue(e.heldMods[n].volume,e.heldMods[n].volume,a.modChannels[s],r[t],o):e.heldMods[n].channelIndex==a.modChannels[s]&&e.heldMods[n].instrumentIndex==r[t]&&e.heldMods[n].setting==o&&e.setModValue(e.heldMods[n].volume,e.heldMods[n].volume,a.modChannels[s],r[t],o);if(o==h.modulators.dictionary["reset arp"].index&&0==e.tick&&i.noteStartPart==e.beat*h.partsPerBeat+e.part)e.channels[a.modChannels[s]].instruments[r[t]].arpTime=0;else if(o==h.modulators.dictionary["next bar"].index)e.wantToSkip=!0;else if(o==h.modulators.dictionary["eq filter"].index){const o=e.song.channels[a.modChannels[s]].instruments[r[t]];if(!o.eqFilterType){let t=0|a.modFilterTypes[s];if(0==t){let t=0;const a=e.getTicksIntoBar()/h.ticksPerPart;for(;i.note.start+i.note.pins[t].time<=a;)t++;let s=(a-i.note.start+n/(e.getSamplesPerTick()*h.ticksPerPart)*h.ticksPerPart-i.note.pins[t-1].time)/(i.note.pins[t].time-i.note.pins[t-1].time);null!=o.eqSubFilters[i.note.pins[t-1].size]||null!=o.eqSubFilters[i.note.pins[t].size]?o.tmpEqFilterEnd=Ve.lerpFilters(o.eqSubFilters[i.note.pins[t-1].size],o.eqSubFilters[i.note.pins[t].size],s):o.tmpEqFilterEnd=o.eqFilter}else{for(let e=0;e<h.filterMorphCount;e++)o.tmpEqFilterEnd==o.eqSubFilters[e]&&null!=o.tmpEqFilterEnd&&(o.tmpEqFilterEnd=new Ve,o.tmpEqFilterEnd.fromJsonObject(o.eqSubFilters[e].toJsonObject()));null==o.tmpEqFilterEnd&&(o.tmpEqFilterEnd=new Ve,o.tmpEqFilterEnd.fromJsonObject(o.eqFilter.toJsonObject())),o.tmpEqFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?o.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=i.expression+i.expressionDelta:o.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=i.expression+i.expressionDelta)}}}else if(o==h.modulators.dictionary["note filter"].index){const o=e.song.channels[a.modChannels[s]].instruments[r[t]];if(!o.noteFilterType){let t=0|a.modFilterTypes[s];if(0==t){let t=0;const a=e.getTicksIntoBar()/h.ticksPerPart;for(;i.note.start+i.note.pins[t].time<=a;)t++;let s=(a-i.note.start+n/(e.getSamplesPerTick()*h.ticksPerPart)*h.ticksPerPart-i.note.pins[t-1].time)/(i.note.pins[t].time-i.note.pins[t-1].time);null!=o.noteSubFilters[i.note.pins[t-1].size]||null!=o.noteSubFilters[i.note.pins[t].size]?o.tmpNoteFilterEnd=Ve.lerpFilters(o.noteSubFilters[i.note.pins[t-1].size],o.noteSubFilters[i.note.pins[t].size],s):o.tmpNoteFilterEnd=o.noteFilter}else{for(let e=0;e<h.filterMorphCount;e++)o.tmpNoteFilterEnd==o.noteSubFilters[e]&&null!=o.tmpNoteFilterEnd&&(o.tmpNoteFilterEnd=new Ve,o.tmpNoteFilterEnd.fromJsonObject(o.noteSubFilters[e].toJsonObject()));null==o.tmpNoteFilterEnd&&(o.tmpNoteFilterEnd=new Ve,o.tmpNoteFilterEnd.fromJsonObject(o.noteFilter.toJsonObject())),o.tmpNoteFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?o.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=i.expression+i.expressionDelta:o.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=i.expression+i.expressionDelta)}}}else if(o==h.modulators.dictionary["individual envelope speed"].index){const n=e.song.channels[a.modChannels[s]].instruments[r[t]];let o=a.modEnvelopeNumbers[s],l=i.expression+i.expressionDelta;Number.isInteger(l)?n.envelopes[o].tempEnvelopeSpeed=h.perEnvelopeSpeedIndices[l]:(l=(1-l%1)*h.perEnvelopeSpeedIndices[Math.floor(l)]+l%1*h.perEnvelopeSpeedIndices[Math.ceil(l)],n.envelopes[o].tempEnvelopeSpeed=l)}}}static findRandomZeroCrossing(e,t){let n=Math.random()*t;const i=t-1;let a=n&i,s=e[a];for(let o=128;o>0;o--){const o=a+16&i,r=e[o];if(s*r<=0){for(let o=0;o<16;o++){const o=a+1&i,r=e[o];if(s*r<=0){const e=r-s;n=a,Math.abs(e)>1e-8&&(n+=-s/e),n=Math.max(0,n)%t;break}a=o,s=r}break}a=o,s=r}return n}static instrumentVolumeToVolumeMult(e){return e==-h.volumeRange/2?0:Math.pow(2,h.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-h.volumeRange/2:Math.min(h.volumeRange,Math.log(e)/Math.LN2/h.volumeLogScale)}static noteSizeToVolumeMult(e){return Math.pow(Math.max(0,e)/h.noteSizeMax,1.5)}static volumeMultToNoteSize(e){return Math.pow(Math.max(0,e),1/1.5)*h.noteSizeMax}static fadeInSettingToSeconds(e){return.0125*(.95*e+.05*e*e)}static secondsToFadeInSetting(e){return we(0,h.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*e/.0125))/.1))}static fadeOutSettingToTicks(e){return h.fadeOutTicks[e]}static ticksToFadeOutSetting(e){let t=h.fadeOutTicks[0];if(e<=t)return 0;for(let n=1;n<h.fadeOutTicks.length;n++){let i=h.fadeOutTicks[n];if(e<=i)return e<(t+i)/2?n-1:n;t=i}return h.fadeOutTicks.length-1}static detuneToCents(e){return e-h.detuneCenter}static centsToDetune(e){return e+h.detuneCenter}static getOperatorWave(e,t){return 2!=e?h.operatorWaves[e]:h.pwmOperatorWaves[t]}getSamplesPerTick(){if(null==this.song)return 0;let e=this.song.getBeatsPerMinute();return this.isModActive(h.modulators.dictionary.tempo.index)&&(e=this.getModValue(h.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(e)}getSamplesPerTickSpecificBPM(e){const t=e/60,n=h.partsPerBeat*t,i=h.ticksPerPart*n;return this.samplesPerSecond/i}static fittingPowerOfTwo(e){return 1<<32-Math.clz32(Math.ceil(e)-1)}sanitizeFilters(e){let t=!1;for(const n of e){const e=Math.abs(n.output1),i=Math.abs(n.output2);if(!(e<100&&i<100)){t=!0;break}e<be&&(n.output1=0),i<be&&(n.output2=0)}if(t)for(const t of e)t.output1=0,t.output2=0}static sanitizeDelayLine(e,t,n){for(;;){const i=--t&n,a=Math.abs(e[i]);if(Number.isFinite(a)&&(0==a||a>=be))break;e[i]=0}}static applyFilters(e,t,n,i,a){for(let s=0;s<i;s++){const i=a[s],o=i.output1,r=i.output2,l=i.a1,p=i.a2,h=i.b0,c=i.b1,u=i.b2;e=h*e+c*t+u*n-l*o-p*r,i.a1=l+i.a1Delta,i.a2=p+i.a2Delta,i.useMultiplicativeInputCoefficients?(i.b0=h*i.b0Delta,i.b1=c*i.b1Delta,i.b2=u*i.b2Delta):(i.b0=h+i.b0Delta,i.b1=c+i.b1Delta,i.b2=u+i.b2Delta),i.output2=o,i.output1=e,n=r,t=o}return e}computeTicksSinceStart(e=!1){var t,n;const i=(null===(t=this.song)||void 0===t?void 0:t.beatsPerBar)?null===(n=this.song)||void 0===n?void 0:n.beatsPerBar:8;return e?h.ticksPerPart*h.partsPerBeat*i*this.bar:this.tick+h.ticksPerPart*(this.part+h.partsPerBeat*(this.beat+i*this.bar))}}Ze.tempFilterStartCoefficients=new le,Ze.tempFilterEndCoefficients=new le,Ze.fmSynthFunctionCache={},Ze.fm6SynthFunctionCache={},Ze.effectsFunctionCache=Array(128).fill(void 0),Ze.pickedStringFunctionCache=Array(3).fill(void 0),Ze.fmSourceTemplate=("\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * "+h.sineWaveLength+";\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * "+h.sineWaveLength+";\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+h.sineWaveLength+";\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / "+h.sineWaveLength+";\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t").split("\n"),Ze.operatorSourceTemplate=("\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+h.sineWaveMask+";\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n"),document.head.appendChild(Q.style({type:"text/css"},`\n\t:root {\n\t\t--button-size: 26px;\n\t\t--settings-area-width: 192px;\n\t\t--play-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path d="M -5 -8 L -5 8 L 8 0 z" fill="gray"/></svg>');\n\t\t--pause-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><rect x="-5" y="-7" width="4" height="14" fill="gray"/><rect x="3" y="-7" width="4" height="14" fill="gray"/></svg>');\n\t\t--record-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><circle cx="0" cy="0" r="6" fill="gray"/></svg>');\n\t\t--stop-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><rect x="-6" y="-6" width="12" height="12" fill="gray"/></svg>');\n\t\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><rect x="-6" y="-6" width="2" height="12" fill="gray"/><path d="M 6 -6 L 6 6 L -3 0 z" fill="gray"/></svg>');\n\t\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><rect x="4" y="-6" width="2" height="12" fill="gray"/><path d="M -6 -6 L -6 6 L 3 0 z" fill="gray"/></svg>');\n\t\t--volume-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26"><path d="M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z" fill="gray"/></svg>');\n\t\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="3 3 20 20"><path d="M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z" fill="gray"/></svg>');\n\t\t--muted-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="3 3 20 20"><path d="M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z" fill="gray"/></svg>');\n\t\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path d="M -4 -2 L 4 -2 L 0 3 z" fill="gray"/></svg>');\n\t\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path d="M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z" fill="gray"/></svg>');\n\t\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-5 -21 26 26"><path d="M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z" fill="gray"/></svg>');\n\t\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-5 -21 26 26"><path d="M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z" fill="gray"/></svg>');\n\t\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path d="M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z" fill="gray"/></svg>');\n\t\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"> \t\t\t\t<g transform="translate(0,1)" fill="gray"> \t\t\t\t\t<circle cx="0" cy="0" r="6.5" stroke="gray" stroke-width="1" fill="none"/> \t\t\t\t\t<rect x="-1" y="-5" width="2" height="4" transform="rotate(30)"/> \t\t\t\t\t<circle cx="-7.79" cy="4.5" r="0.75"/> \t\t\t\t\t<circle cx="-9" cy="0" r="0.75"/> \t\t\t\t\t<circle cx="-7.79" cy="-4.5" r="0.75"/> \t\t\t\t\t<circle cx="-4.5" cy="-7.79" r="0.75"/> \t\t\t\t\t<circle cx="0" cy="-9" r="0.75"/> \t\t\t\t\t<circle cx="4.5" cy="-7.79" r="0.75"/> \t\t\t\t\t<circle cx="7.79" cy="-4.5" r="0.75"/> \t\t\t\t\t<circle cx="9" cy="0" r="0.75"/> \t\t\t\t\t<circle cx="7.79" cy="4.5" r="0.75"/> \t\t\t\t</g> \t\t\t</svg>');\n\t\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-5 -21 26 26"><path d="M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z" fill="currentColor"></path></svg>');\n\t\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26"><path d="M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z" stroke="currentColor" fill="none"></path><path d="M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z" fill="currentColor"></path></svg>');\n\t\t--export-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path fill="gray" d="M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z"/></svg>');\n\t\t--close-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path fill="gray" d="M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z"/></svg>');\n\t\t--add-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path fill="gray" d="M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z"/></svg>');\n\t\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="-10 -10 20 20"><circle cx="-1" cy="-1" r="6" stroke-width="2" stroke="gray" fill="none"></circle><path stroke="gray" stroke-width="2" d="M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1" fill="none"></path></svg>');\n\t\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="-10 -10 20 20"><circle cx="-1" cy="-1" r="6" stroke-width="2" stroke="gray" fill="none"></circle><path stroke="gray" stroke-width="2" d="M 3 3 L 7 7 M -4 -1 L 2 -1" fill="none"></path></svg>');\n\t\t--undo-symbol: url("https://choptop84.github.io/abyssbox-app/icon-undo.png");\n\t\t--redo-symbol: url("https://choptop84.github.io/abyssbox-app/icon-redo.png");\n\t\t--copy-symbol: url("https://choptop84.github.io/abyssbox-app/icon-copy.png");\n\t\t--paste-symbol: url("https://choptop84.github.io/abyssbox-app/icon-paste.png");\n\t\t--insert-channel-symbol: url("https://choptop84.github.io/abyssbox-app/icon-insertChannel.png");\n\t\t--delete-channel-symbol: url("https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png");\n\t\t--select-all-symbol: url("https://choptop84.github.io/abyssbox-app/icon-SelectAll.png");\n\t\t--duplicate-symbol: url("https://choptop84.github.io/abyssbox-app/icon-duplicate.png");\n\t\t--notes-up-symbol: url("https://choptop84.github.io/abyssbox-app/moveNotesUp.png");\n\t\t--notes-down-symbol: url("https://choptop84.github.io/abyssbox-app/moveNotesDown.png");\n\t\t--loop-bar-symbol: url("https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png");\n\t\t--fullscreen-symbol: url("https://choptop84.github.io/abyssbox-app/icon-fullscreen.png");\n\t\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="-13 -13 26 26"><path fill="gray" d="M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z"/></svg>');\n\t\t--drum-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="40" viewBox="0 0 32 40"> \t\t\t\t<defs> \t\t\t\t\t<linearGradient id="gold1" x1="0%" y1="0%" x2="100%" y2="0%"> \t\t\t\t\t\t<stop offset="0%" stop-color="%237e3302"/> \t\t\t\t\t\t<stop offset="40%" stop-color="%23ffec6b"/> \t\t\t\t\t\t<stop offset="100%" stop-color="%237e3302"/> \t\t\t\t\t</linearGradient> \t\t\t\t\t<linearGradient id="gold2" x1="0%" y1="0%" x2="100%" y2="0%"> \t\t\t\t\t\t<stop offset="0%" stop-color="%23faaf7d"/> \t\t\t\t\t\t<stop offset="15%" stop-color="%23fffba9"/> \t\t\t\t\t\t<stop offset="40%" stop-color="%23ffffe3"/> \t\t\t\t\t\t<stop offset="65%" stop-color="%23fffba9"/> \t\t\t\t\t\t<stop offset="100%" stop-color="%23faaf7d"/> \t\t\t\t\t</linearGradient> \t\t\t\t\t<radialGradient id="gold3" cx="0%" cy="0%" r="100%"> \t\t\t\t\t\t<stop offset="0%" stop-color="%23ffffe3"/> \t\t\t\t\t\t<stop offset="50%" stop-color="%23ffec6b"/> \t\t\t\t\t\t<stop offset="100%" stop-color="%237e3302"/> \t\t\t\t\t</radialGradient> \t\t\t\t\t<linearGradient id="red" x1="0%" y1="0%" x2="100%" y2="0%"> \t\t\t\t\t\t<stop offset="0%" stop-color="%23641919"/> \t\t\t\t\t\t<stop offset="40%" stop-color="%23cd2c2c"/> \t\t\t\t\t\t<stop offset="100%" stop-color="%23641919"/> \t\t\t\t\t</linearGradient> \t\t\t\t\t<radialGradient id="membrane"> \t\t\t\t\t\t<stop offset="10%" stop-color="%23cccccc" /> \t\t\t\t\t\t<stop offset="90%" stop-color="%23f6f6f7" /> \t\t\t\t\t\t<stop offset="100%" stop-color="%23999" /> \t\t\t\t\t</radialGradient> \t\t\t\t</defs> \t\t\t\t<ellipse cx="16" cy="26" rx="16" ry="14" fill="rgba(0,0,0,0.5)"/> \t\t\t\t<ellipse cx="16" cy="25" rx="16" ry="14" fill="url(%23gold1)"/> \t\t\t\t<rect x="0" y="23" width="32" height="2" fill="url(%23gold1)"/> \t\t\t\t<ellipse cx="16" cy="23" rx="16" ry="14" fill="url(%23gold2)"/> \t\t\t\t<ellipse cx="16" cy="23" rx="15" ry="13" fill="url(%23red)"/> \t\t\t\t<rect x="1" y="17" width="30" height="6" fill="url(%23red)"/> \t\t\t\t<rect x="5" y="27" width="1" height="5" rx="0.5" fill="rgba(0,0,0,0.5)"/> \t\t\t\t<rect x="15" y="31" width="2" height="5" rx="1" fill="rgba(0,0,0,0.5)"/> \t\t\t\t<rect x="26" y="27" width="1" height="5" rx="0.5" fill="rgba(0,0,0,0.5)"/> \t\t\t\t<rect x="5" y="26" width="1" height="5" rx="0.5" fill="url(%23gold3)"/> \t\t\t\t<rect x="15" y="30" width="2" height="5" rx="1" fill="url(%23gold3)"/> \t\t\t\t<rect x="26" y="26" width="1" height="5" rx="0.5" fill="url(%23gold3)"/> \t\t\t\t<ellipse cx="16" cy="18" rx="15" ry="13" fill="rgba(0,0,0,0.5)"/> \t\t\t\t<ellipse cx="16" cy="16" rx="16" ry="14" fill="url(%23gold1)"/> \t\t\t\t<rect x="0" y="14" width="32" height="2" fill="url(%23gold1)"/> \t\t\t\t<ellipse cx="16" cy="14" rx="16" ry="14" fill="url(%23gold2)"/> \t\t\t\t<ellipse cx="16" cy="14" rx="15" ry="13" fill="url(%23membrane)"/> \t\t\t</svg>');\n\t\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="15" preserveAspectRatio="none" viewBox="0 -1 32 15"> \t\t\t\t<defs> \t\t\t\t\t<linearGradient id="shadow" x1="0%" y1="0%" x2="100%" y2="0%"> \t\t\t\t\t\t<stop offset="0%" stop-color="rgba(0,0,0,0.5)"/> \t\t\t\t\t\t<stop offset="100%" stop-color="transparent"/> \t\t\t\t\t</linearGradient> \t\t\t\t</defs> \t\t\t\t<rect x="-1" y="1" width="31" height="1" rx="0.6" fill="rgba(255,255,255,0.4)"/> \t\t\t\t<path d="M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z" fill="rgba(0,0,0,0.7)"/> \t\t\t\t<rect x="-1" y="-1" width="19" height="15" fill="url(%23shadow)"/> \t\t\t</svg>');\n\t--mod-key-symbol: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="80" preserveAspectRatio="none" viewBox="0 -1 32 80"> \t\t\t\t<defs> \t\t\t\t\t<linearGradient id="shadow" x1="0%" y1="0%" x2="100%" y2="0%"> \t\t\t\t\t\t<stop offset="0%" stop-color="rgba(0,0,0,0.4)"/> \t\t\t\t\t\t<stop offset="100%" stop-color="transparent"/> \t\t\t\t\t</linearGradient> \t\t\t\t</defs> \t\t\t\t<rect x="-1" y="1" width="31" height="1" rx="0.6" fill="rgba(255,255,255,0.2)"/> \t\t\t\t<path d="M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z" fill="rgba(0,0,0,0.7)"/> \t\t\t\t<rect x="-1" y="-1" width="19" height="80" fill="url(%23shadow)"/> \t\t\t</svg>');\n\t}\n\n\tbody {\n\t\tcolor: ${te.primaryText};\n\t\tbackground: ${te.songPlayerMargin};\n\t}\n\t.songPlayerContainer {\n\t\tdisplay:grid; \n\t\tgrid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n\t\tgrid-template-rows: 92.6vh 20vh; \n\t\tgrid-template-columns: minmax(0px,0px);\n\t}\n\t.layout-option {\n\t\twidth: 25%;\n\t}\n\t.timeline-bar-progress {\n\t\tbackground: var(--progress-bar, var(--text-selection, rgb(0, 255, 0)));\n\t}\n\t.layout-option input:checked ~ * {\n\t\tcolor:var(--primary-text) !important;\n\t}\n\th1 {\n\t\tfont-weight: bold;\n\t\tfont-size: 14px;\n\t\tline-height: 22px;\n\t\ttext-align: initial;\n\t\tmargin: 0;\n\t}\n\tbutton.closePrompt::before {\n\t\tcontent: "";\n\t\tposition: absolute;\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tpointer-events: none;\n\t\tbackground: currentColor;\n\t\tmask-image: var(--close-symbol);\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t\t-webkit-mask-image: var(--close-symbol);\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t}\n\ta {\n\t\tfont-weight: bold;\n\t\tfont-size: 12px;\n\t\tline-height: 22px;\n\t\twhite-space: nowrap;\n\t\tcolor: ${te.linkAccent};\n\t}\n\tbutton {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tposition: relative;\n\t\tborder: none;\n\t\tborder-radius: 5px;\n\t\tbackground: ${te.uiWidgetBackground};\n\t\tcolor: ${te.primaryText};\n\t\tcursor: pointer;\n\t\tfont-size: 14px;\n\t\tfont-family: inherit;\n\t}\n\tbutton:hover, button:focus {\n\t\tbackground: ${te.uiWidgetFocus};\n\t}\n\t.playButton, .pauseButton {\n\t\tpadding-left: 24px;\n\t\tpadding-right: 6px;\n\t}\n\t.playButton::before {\n\t\tcontent: "";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${te.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t.pauseButton::before {\n\t\tcontent: "";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${te.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t\n\tinput[type=range] {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\theight: 16px;\n\t\tmargin: 0;\n\t\tcursor: pointer;\n\t\tbackground-color: ${te.editorBackground};\n\t\ttouch-action: pan-y;\n\t}\n\tinput[type=range]:focus {\n\t\toutline: none;\n\t}\n\tinput[type=range]::-webkit-slider-runnable-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${te.uiWidgetBackground};\n\t}\n\tinput[type=range]::-webkit-slider-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${te.primaryText};\n\t\tcursor: pointer;\n\t\t-webkit-appearance: none;\n\t\tmargin-top: -6px;\n\t}\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\tbackground: ${te.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${te.uiWidgetBackground};\n\t}\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\tbackground: ${te.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tborder: none;\n\t\tbackground: ${te.primaryText};\n\t\tcursor: pointer;\n\t}\n\tinput[type=range]::-ms-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${te.uiWidgetBackground};\n\t\tborder-color: transparent;\n\t}\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\tbackground: ${te.uiWidgetFocus};\n\t}\n\tinput[type=range]::-ms-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${te.primaryText};\n\t\tcursor: pointer;\n\t}\n`));class et{static setLayout(e){this.p.textContent=this.re[e]}}et.layoutLookup=new Map,et.re={classic:"\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        \n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        } \n        ",top:"\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'control-center control-center' 'visualizer visualizer'; \n            grid-template-rows: 7.4vh 92.6vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }    \n        ",shitbox4:"\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: skew(30deg,20deg) scale(0.5);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }    \n        ",boxbeep:"\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(-1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }\n        ",piano:"\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }\n        ",vertical:"\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'piano piano' 'control-center control-center'; \n            grid-template-rows: 82.6vh 10vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }\n        ",middle:"\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(50vw);\n        }\n        "},et.p=document.head.appendChild(Q.style({type:"text/css"}));const{a:tt,button:nt,div:it,h1:at,input:st,canvas:ot,form:rt,label:lt,h2:pt}=Q,{svg:ht,circle:ct,rect:ut,path:ft}=_,dt=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent),mt=Sn("colorTheme"),yt=Sn("spLayout");et.setLayout(null===yt?"classic":yt);let gt,vt=null,bt=(4294967295*Math.random()>>>0).toString(16),wt=!1,St=!1,xt=1,kt=0,Mt=0;const Ft=new Ze,qt=new class{constructor(e,t=1){this.canvas=e,this.scale=t,this.le=function(n,i){if(i){var a=e.getContext("2d");a.fillStyle=te.getComputed("--editor-background"),a.fillRect(0,0,e.width,e.height),a.fillStyle=""!==te.getComputed("--oscilloscope-line-L")?te.getComputed("--oscilloscope-line-L"):te.getComputed("--primary-text");for(let i=n.length-1;i>=n.length-1-e.width/t;i--){let s=i-(n.length-1)+e.width/t,o=n[i]*(e.height/t/2)+e.height/t/2;if(a.fillRect((s-1)*t,(o-1)*t,1*t,1.5*t),0==s)break}a.fillStyle=""!==te.getComputed("--oscilloscope-line-R")?te.getComputed("--oscilloscope-line-R"):te.getComputed("--text-selection");for(let n=i.length-1;n>=i.length-1-e.width/t;n--){let s=n-(i.length-1)+e.width/t,o=i[n]*(e.height/t/2)+e.height/t/2;if(a.fillRect((s-1)*t,(o-1)*t,1*t,1.5*t),0==s)break}}},re.listen("oscillascopeUpdate",this.le)}}(ot({width:dt?144:288,height:dt?32:64,style:`border:2px solid ${te.uiWidgetBackground}; overflow: hidden;`,id:"oscilascopeAll"}),dt?1:2);"false"!=Sn("showOscilloscope")||(qt.canvas.style.display="none",Ft.oscEnabled=!1);const Pt=nt({class:"closePrompt",style:"width: 32px; height: 32px; float: right; position: absolute;top: 8px;right: 8px;"}),Tt=nt({class:"okayButton",style:"width:45%; height: 32px;"},"Okay"),zt=rt({style:"display: flex; gap: 10px; flex-wrap: wrap; justify-content: center;"},lt({class:"layout-option",style:"width:90px; color: var(--secondary-text)"},st({type:"radio",name:"spLayout",value:"classic",style:"display:none;"}),_('\t\t\t\t\t<svg viewBox="-1 -1 28 22">\n\t\t\t\t\t<rect x="0" y="0" width="26" height="20" fill="none" stroke="currentColor" stroke-width="1"/>\n\t\t\t\t\t<rect x="2" y="3" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="23" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="11" width="22" height="1" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="2" y="5" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="7" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="9" width="22" height="1" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="2" y="15" width="22" height="3" fill="currentColor"/>\n\t\t\t\t\t</svg>\n\t\t\t\t'),it("Classic")),lt({class:"layout-option",style:"width:90px; color: var(--secondary-text)"},st({type:"radio",name:"spLayout",value:"top",style:"display:none;"}),_('\t\t\t\t\t<svg viewBox="-1 -1 28 22">\n\t\t\t\t\t\t<rect x="0" y="0" width="26" height="20" fill="none" stroke="currentColor" stroke-width="1"/>\n\t\t\t\t\t\t<rect x="2" y="2" width="22" height="3" fill="currentColor"/>\n\n\t\t\t\t\t\t<rect x="2" y="8" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t\t<rect x="2" y="9" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t\t<rect x="23" y="9" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t\t<rect x="2" y="16" width="22" height="1" fill="currentColor"/>\n\t\n\t\t\t\t\t\t<rect x="2" y="10" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t\t<rect x="2" y="12" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t\t<rect x="2" y="14" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t</svg>\n\t\t\t\t'),it("Top")),lt({class:"layout-option",style:"width:90px; color: var(--secondary-text)"},st({type:"radio",name:"spLayout",value:"shitbox4",style:"display:none;"}),_('\t\t\t\t\t<svg viewBox="-1 -1 28 22">\n\t\t\t\t\t\t<rect x="0" y="0" width="26" height="20" fill="none" stroke="currentColor" stroke-width="1"/>\n\t\t\t\t\t\t<rect x="2" y="15" width="22" height="3" fill="currentColor"/>\n\n\t\t\t\t\t\t<rect x="2" y="2"  width="22" height="1" fill="currentColor" style="transform: skew(0.1deg,10deg);"/>\n\t\t\t\t\t\t<rect x="2" y="3"  width="1"  height="5" fill="currentColor" style="transform: skew(0.1deg,10deg);"/>\n\t\t\t\t\t\t<rect x="23" y="3" width="1" height="5" fill="currentColor" style="transform: skew(0.1deg,10deg);"/>\n\t\t\t\t\t\t<rect x="2" y="8"  width="22" height="1" fill="currentColor" style="transform: skew(0.1deg,10deg);"/>\n\t\n\t\t\t\t\t\t<rect x="2" y="6" width="22" height="1" fill="currentColor" style="transform: skew(0.1deg,10deg);"/>\n\t\t\t\t\t\t<rect x="2" y="4" width="22" height="1" fill="currentColor" style="transform: skew(0.1deg,10deg);"/>\n\t\t\t\t\t</svg>\n\t\t\t\t'),it("shitBox4")),lt({class:"layout-option",style:"width:90px; color: var(--secondary-text)"},st({type:"radio",name:"spLayout",value:"boxbeep",style:"display:none;"}),_('\t\t\t\t<svg viewBox="-1 -1 28 22">\n\t\t\t\t<rect x="0" y="0" width="26" height="20" fill="none" stroke="currentColor" stroke-width="1"/>\n\t\t\t\t\t<rect x="2" y="3" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="23" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="11" width="22" height="1" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="2" y="5" width="18" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="7" width="18" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="9" width="18" height="1" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="21" y="5" width="1" height="5" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="2" y="15" width="22" height="3" fill="currentColor"/>\n\t\t\t\t</svg>\n\t\t\t\t'),it("BoxBeep")),lt({class:"layout-option",style:"width:90px; color: var(--secondary-text)"},st({type:"radio",name:"spLayout",value:"piano",style:"display:none;"}),_('\t\t\t\t<svg viewBox="-1 -1 28 22">\n\t\t\t\t\t<rect x="0" y="0" width="26" height="20" fill="none" stroke="currentColor" stroke-width="1"/>\n\t\t\t\t\t<rect x="4" y="3" width="20" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="3" width="1" height="9" fill="currentColor"/>\n\t\t\t\t\t<rect x="23" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="4" y="11" width="20" height="1" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="4" y="5" width="20" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="4" y="7" width="20" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="4" y="9" width="20" height="1" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="2" y="15" width="22" height="3" fill="currentColor"/>\n\t\t\t\t\t</svg>\n\t\t\t\t'),it("Music Box")),lt({class:"layout-option",style:"width:90px; color: var(--secondary-text)"},st({type:"radio",name:"spLayout",value:"vertical",style:"display:none;"}),_('\t\t\t\t<svg viewBox="-1 -1 28 22">\n\t\t\t\t\t<rect x="0" y="0" width="26" height="20" fill="none" stroke="currentColor" stroke-width="1"/>\n\t\t\t\t\t<rect x="2" y="3" width="22" height="1" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="23" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="2" y="11" width="22" height="1" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="5" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="8" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="12" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="16" y="4" width="1" height="7" fill="currentColor"/>\n\t\t\t\t\t<rect x="20" y="4" width="1" height="7" fill="currentColor"/>\n\n\t\t\t\t\t<rect x="2" y="15" width="22" height="3" fill="currentColor"/>\n\t\t\t\t\t</svg>\n\t\t\t\t'),it("Vertical")),lt({class:"layout-option",style:"width:90px; color: var(--secondary-text)"},st({type:"radio",name:"spLayout",value:"middle",style:"display:none;"}),_('\t\t\t\t<svg viewBox="-1 -1 28 22">\n\t\t\t\t<rect x="0" y="0" width="26" height="20" fill="none" stroke="currentColor" stroke-width="1"/>\n\t\t\t\t<rect x="4" y="3" width="8" height="1" fill="currentColor"/>\n\n\t\t\t\t<rect x="2" y="3" width="1" height="9" fill="currentColor"/>\n\n\t\t\t\t<rect x="13" y="3" width="1" height="9" fill="currentColor"/>\n\n\t\t\t\t<rect x="23" y="3" width="1" height="9" fill="currentColor"/>\n\n\t\t\t\t<rect x="4" y="11" width="8" height="1" fill="currentColor"/>\n\t\t\t\t<rect x="4" y="5" width="8" height="1" fill="currentColor"/>\n\t\t\t\t<rect x="4" y="7" width="8" height="1" fill="currentColor"/>\n\t\t\t\t<rect x="4" y="9" width="8" height="1" fill="currentColor"/>\n\n\t\t\t\t<rect x="15" y="3" width="7" height="1" fill="currentColor"/>\n\t\t\t\t<rect x="15" y="11" width="7" height="1" fill="currentColor"/>\n\t\t\t\t<rect x="15" y="5" width="7" height="1" fill="currentColor"/>\n\t\t\t\t<rect x="15" y="7" width="7" height="1" fill="currentColor"/>\n\t\t\t\t<rect x="15" y="9" width="7" height="1" fill="currentColor"/>\n\n\t\t\t\t<rect x="2" y="15" width="22" height="3" fill="currentColor"/>\n\t\t\t\t\t</svg>\n\t\t\t\t'),it("Middle"))),It=it({class:"prompt noSelection",style:"width: 300px; margin: auto;text-align: center;background: var(--editor-background);border-radius: 15px;border: 4px solid var(--ui-widget-background);color: var(--primary-text);padding: 20px;display: flex;flex-direction: column;position: relative;box-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);"},it({class:"promptTitle"},pt({class:"layoutExt",style:"text-align: inherit;"},""),pt({class:"layoutTitle"},"Layout")),zt,it({style:"margin-top: 1em;"},Tt),Pt);let Ct=at({class:"songTitle",style:"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;"},""),Ht=nt({class:"songPlayerLayoutsButton",style:"margin: 0 4px; height: 42px; width: 90px;"},"Layouts"),Dt=tt({target:"_top",style:"margin: 0 4px;"},"✎ Edit"),Ot=tt({href:"javascript:void(0)",style:"margin: 0 4px;"},"⎘ Copy URL"),Gt=tt({href:"javascript:void(0)",style:"margin: 0 4px;"},"⤳ Share"),Lt=tt({target:"_top",class:"fullscreenLink",style:"margin: 0 4px;"},"⇱ Fullscreen"),Et=tt({href:"javascript:void(0)",target:"_top",class:"shortUrlLink",style:"margin: 0 4px;"},"… Shorten URL"),At=!1;const Rt=nt({style:"width: 100%; height: 100%; max-height: 50px;"}),Nt=it({class:"playButtonContainer",style:"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;"},Rt),Bt=ft({d:"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z"}),Wt=nt({title:"loop",class:"spIcon loopIcon",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},ht({width:12,height:12,viewBox:"0 0 12 12"},Bt)),Vt=ht({class:"spIcon volumeIcon",style:"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;",viewBox:"0 0 12 12"},ft({fill:te.uiWidgetBackground,d:"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z"})),$t=st({title:"volume",type:"range",value:75,min:0,max:75,step:1,style:"width: 12vw; max-width: 100px; margin: 0 1px;"}),Ut=ht({class:"spIcon zoomIcon",width:12,height:12,viewBox:"0 0 12 12"},ct({cx:"5",cy:"5",r:"4.5","stroke-width":"1",stroke:"currentColor",fill:"none"}),ft({stroke:"currentColor","stroke-width":"2",d:"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5",fill:"none"})),jt=nt({title:"zoom",style:"background: #581b3e; width: 100%; height: 100%; display: none;"},"Zoom"),Qt=nt({title:"zoom",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},Ut,jt),_t=ht({class:"timeline",style:"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;"}),Kt=it({class:"playhead",style:`position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${te.playhead}; pointer-events: none;`}),Jt=ht({style:"pointer-events: none; display: block; margin: 0 auto;"}),Xt=it({class:"piano",style:"grid-area: piano;"},Jt),Yt=it({class:"timelineContainer",style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;"},_t,Kt),Zt=it({class:"visualizer",style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative; align-items: center; overflow: hidden; grid-area: visualizer;"},Yt);let en,tn=[],nn=-1;const an="true"==Sn("notesFlashWhenPlayed"),sn=_.rect({"pointer-events":"none",width:"90%",height:"50%",x:"5%",y:"25%",fill:te.uiWidgetBackground}),on=_.rect({"pointer-events":"none",height:"50%",width:"0%",x:"5%",y:"25%",fill:"url('#volumeGrad2')"}),rn=_.rect({"pointer-events":"none",width:"2px",height:"50%",x:"5%",y:"25%",fill:te.uiWidgetFocus}),ln=_.stop({"stop-color":"lime",offset:"60%"}),pn=_.stop({"stop-color":"orange",offset:"90%"}),hn=_.stop({"stop-color":"red",offset:"100%"}),cn=_.linearGradient({id:"volumeGrad2",gradientUnits:"userSpaceOnUse"},ln,pn,hn),un=_.defs({},cn),fn=_.svg({style:"touch-action: none; overflow: hidden; margin: auto;",width:"160px",height:"10px",preserveAspectRatio:"none"},un,sn,on,rn),dn=it({class:"timeline-bar-progress",style:"pointer-events: none; overflow: hidden; width: 5%; height: 100%; z-index: 5;"}),mn=it({style:"overflow: hidden; margin: auto; width: 90%; height: 50%; background: var(--ui-widget-background);"},dn),yn=it({style:"pointer-events: none; overflow: hidden; margin: auto; width: 160px; height: 10px; "},mn),gn=it({class:"volBarContainer",style:"display:flex; flex-direction:column;"},fn,yn),vn=it({class:"promptContainer",style:"display:none; backdrop-filter: saturate(1.5) blur(4px); width: 100%; height: 100%; position: fixed; z-index: 999; display: flex; justify-content: center; align-items: center;"});vn.style.display="none";const bn=it({class:"songPlayerContainer"});if(bn.appendChild(Zt),bn.appendChild(Xt),bn.appendChild(it({class:"control-center",id:"control-center",style:"flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center; grid-area: control-center;"},it({class:"control-center row",id:"row1",style:"display: flex; align-items: center;"},Nt,Wt,Vt,$t,Qt,gn,qt.canvas),it({class:"control-center row",id:"row2",style:"display: flex; align-items: center;"},Ct,Ht,Dt,Ot,Gt,Et),it({class:"control-center row",id:"row3",style:"display: flex; align-items: center;"}))),document.body.appendChild(bn),bn.appendChild(vn),vn.appendChild(It),dt){const e=document.getElementById("control-center"),t=document.getElementById("row3");qt.canvas.style.display="none",Ot.style.display="none",e.style.flexDirection="column",Ht.style.height="24px",jt.style.display="unset",Ut.style.display="none",Qt.style.width="48px",Qt.style.height="19px",Qt.style.flex="unset",null==t||t.appendChild(Ct)}else{const e=document.getElementById("control-center"),t=document.getElementById("row1"),n=document.getElementById("row3");e.style.alignItems="unset",e.style.justifyContent="space-between",null==t||t.appendChild(Ct),n.style.display="none"}function wn(e,t){try{localStorage.setItem(e,t)}catch(e){}}function Sn(e){try{return localStorage.getItem(e)}catch(e){return null}}function xn(e,t){if(!(e.length<1))if(t===e.length-1)e.pop();else if(t>=0&&t<e.length-1){const n=e.pop();e[t]=n}}function kn(e,t){Ft.setSong(e),Ft.snapToStart();const n=Ft.song.toBase64String();Dt.href="../#"+n}function Mn(){var e;let t=location.hash;if(vt!=t&&""!=t){vt=t,"#"==t.charAt(0)&&(t=t.substring(1)),Lt.href=location.href;for(const n of t.split(/&(?=[a-z]+=)/g)){let i=n.indexOf("=");if(-1!=i){let t=n.substring(0,i),a=n.substring(i+1);switch(t){case"song":kn(a),Ft.song&&(Ct.textContent=Ft.song.title,null!=Ft.song&&(null!=Ft.song.setSongTheme?"none"==(null===(e=Ft.song)||void 0===e?void 0:e.setSongTheme)?te.setTheme(null===mt?"AbyssBox Classic":mt):te.setTheme(Ft.song.setSongTheme):te.setTheme(null===mt?"AbyssBox Classic":mt)));break;case"loop":Ft.loopRepeatCount="1"!=a?0:-1,Rn()}}else kn(t)}Ln()}}let Fn=null;function qn(){if(!Ft.playing)return void clearInterval(Fn);const e=Sn("playerId");null!=e&&e!=bt&&(zn(),Gn(),clearInterval(Fn))}function Pn(){Ft.playing&&(gt=requestAnimationFrame(Pn),Gn(),Tn()),wt!=Ft.playing&&An()}function Tn(){if(null==Ft.song)return rn.setAttribute("x","5%"),void on.setAttribute("width","0%");var e,t;kt--,kt<=0&&(Mt-=.03),Ft.song.outVolumeCap>Mt&&(Mt=Ft.song.outVolumeCap,kt=50),e=Ft.song.outVolumeCap,t=Mt,on.setAttribute("width",""+Math.min(144,144*e)),rn.setAttribute("x",""+(8+Math.min(144,144*t))),Ft.playing||(rn.setAttribute("x","5%"),on.setAttribute("width","0%"))}function zn(){null!=Ft.song&&(null!=gt&&cancelAnimationFrame(gt),gt=null,Ft.playing?(Ft.pause(),Tn()):(Ft.play(),wn("playerId",bt),Pn(),clearInterval(Fn),Fn=setInterval(qn,100))),An()}function In(e){if(!At)return;e.preventDefault();Hn("vertical"==zt.elements.spLayout.value||"vertical"==window.localStorage.getItem("spLayout")?e.clientY||e.pageY:e.clientX||e.pageX)}function Cn(e){Hn("vertical"==zt.elements.spLayout.value||"vertical"==window.localStorage.getItem("spLayout")?e.touches[0].clientY:e.touches[0].clientX)}function Hn(e){if(At&&null!=Ft.song){const t=Zt.getBoundingClientRect(),n="vertical"==zt.elements.spLayout.value||"vertical"==window.localStorage.getItem("spLayout"),i="boxbeep"==zt.elements.spLayout.value||"boxbeep"==window.localStorage.getItem("spLayout");n||i?n?Ft.playhead=Ft.song.barCount*(e-t.bottom)/(t.top-t.bottom):i&&(Ft.playhead=Ft.song.barCount*(e-t.right)/(t.left-t.right)):Ft.playhead=Ft.song.barCount*(e-t.left)/(t.right-t.left),Ft.computeLatestModValues(),Gn()}}function Dn(){At=!1}function On(){const e=+$t.value;Ft.volume=Math.min(1,Math.pow(e/50,.5))*Math.pow(2,(e-75)/25)}function Gn(){if(null!=Ft.song){let n=Ft.playhead/Ft.song.barCount;dn.style.width=Math.round(144*n/144*100)+"%";const i="piano"==zt.elements.spLayout.value||"piano"==window.localStorage.getItem("spLayout"),a="middle"==zt.elements.spLayout.value||"middle"==window.localStorage.getItem("spLayout"),s="vertical"==zt.elements.spLayout.value||"vertical"==window.localStorage.getItem("spLayout");if(i)Kt.style.left=xt*n+"px",Yt.style.left="-"+xt*n+"px",Yt.style.bottom="0",Yt.style.top="0";else if(a)Kt.style.left=xt*n+"px",Yt.style.left="-"+xt*n+"px",Yt.style.bottom="0",Yt.style.top="0";else if(s){const e=Zt.getBoundingClientRect().height/2;Kt.style.left=xt*n+"px",Yt.style.bottom="-"+xt*n+"px",Yt.style.top=xt*n+e+"px"}else{Kt.style.left=xt*n+"px",Yt.style.left="0",Yt.style.bottom="0",Yt.style.top="0";const e=Zt.getBoundingClientRect();Zt.scrollLeft=n*(xt-e.width)}if(an){const n=Math.floor(Ft.playhead),i=Ft.playhead-n,a=Ft.song.beatsPerBar*h.partsPerBeat,s=en[n];if(null!=s&&n!==nn){for(var e=tn.length-1;e>=0;e--){var t=tn[e];const i=Number(t.getAttribute("note-bar"))!==n,a="0"===t.style.opacity;i&&a&&xn(tn,e)}for(e=0;e<s.length;e++){t=s[e];tn.push(t)}}const o=Jt.children.length;for(let e=0;e<o;e++){const t=Jt.children[e],n=t.getAttribute("original-fill");t.setAttribute("fill",n)}if(null!=tn)for(e=0;e<tn.length;e++){t=tn[e];const s=Number(t.getAttribute("note-start"))/a,o=Number(t.getAttribute("note-end"))/a,r=Number(t.getAttribute("note-bar")),l=Number(t.getAttribute("note-pitch")),p="true"===t.getAttribute("note-noise"),h=Jt.children[l],c=t.getAttribute("note-color");if(i>=s&&r==n){const e=o-s,n=1-(i-s-e/2)/(e/2);t.style.opacity=String(n),p||n>.05&&(null==h||h.setAttribute("fill",c))}else t.style.opacity="0"}nn=n}}}function Ln(){if(_t.innerHTML="",null==Ft.song)return;const e=Zt.getBoundingClientRect();let t,n,i;const a="vertical"==zt.elements.spLayout.value||"vertical"==window.localStorage.getItem("spLayout");if(St){t=a?e.width:e.height,n=Math.max(1,Math.min(h.pitchOctaves,Math.round(t/24))),i=12*n+1;const s=(t-1)/i,o=Math.max(8,4*s);xt=Math.max(e.width,o*Ft.song.barCount*Ft.song.beatsPerBar),a?(Yt.style.transform=`translateX(-${xt/2}px) rotate(-90deg) translateX(${xt/2}px) translateY(${t/2}px) scaleY(-1)`,Xt.style.display="unset",bn.style.gridTemplateRows=dt?"78vh 0vh 7.4vh":"",Yt.style.left="0px"):(Yt.style.transform="",Xt.style.display="none",bn.style.gridTemplateRows="")}else{Xt.style.display="none",xt=e.width;const s=Math.max(1,xt/(Ft.song.barCount*Ft.song.beatsPerBar)/6);t=Math.min(e.height,s*(h.maxPitch+1)+1),n=Math.max(3,Math.min(h.pitchOctaves,Math.round(t/(12*s)))),i=12*n+1,a?(Yt.style.transform=`translateX(-${xt/2}px) rotate(-90deg) translateX(${xt/2}px) translateY(${xt/2}px) scaleY(-1)`,bn.style.gridTemplateRows=dt?"78vh 0vh 7.4vh":"92.6vh 0vh 7.4vh",Yt.style.left="0px"):(Yt.style.transform="",bn.style.gridTemplateRows="")}Yt.style.width=xt+"px",Yt.style.height=t+"px",_t.style.width=xt+"px",_t.style.height=t+"px";const s=xt/Ft.song.barCount,o=s/(Ft.song.beatsPerBar*h.partsPerBeat),r=(t-1)/i,l=(t-1)/h.drumCount;for(let e=0;e<Ft.song.barCount+1;e++){const n=e==Ft.song.loopStart||e==Ft.song.loopStart+Ft.song.loopLength?te.loopAccent:te.uiWidgetBackground;_t.appendChild(ut({x:e*s-1,y:0,width:2,height:t,fill:n}))}for(let e=0;e<=n;e++)_t.appendChild(ut({x:0,y:12*e*r,width:xt,height:r+1,fill:te.tonic,opacity:.75}));let p="#ffffff",c="#ffffff77";if(an&&(p=""!==te.getComputed("--note-flash")?"var(--note-flash)":"#ffffff",c=""!==te.getComputed("--note-flash-secondary")?"var(--note-flash-secondary)":"#ffffff77"),an){en=[];for(let e=0;e<Ft.song.barCount;e++)en.push([]);nn=-1}for(let e=Ft.song.channels.length-1-Ft.song.modChannelCount;e>=0;e--){const i=Ft.song.getChannelIsNoise(e),a=i?l:r,u=Ft.song.channels[e].octave,f=Math.max(0,Math.min(h.pitchOctaves-n,Math.ceil(u-.5*n)))*a*12+t-.5*a-.5;for(let t=0;t<Ft.song.barCount;t++){const n=Ft.song.getPattern(e,t);if(null==n)continue;const r=t*s;for(let s=0;s<n.notes.length;s++){const l=n.notes[s];for(const n of l.pitches){const s=En(n,l.start,l.pins,(a+1)/2,r,f,o,a),h=ft({d:s,fill:te.getChannelColor(Ft.song,e).primaryChannel});if(i&&(h.style.opacity=String(.6)),_t.appendChild(h),an){const e=En(n,l.start,l.pins,(a+1)/2,r,f,o,a),s=ft({d:e,fill:i?c:p});s.style.opacity="0",s.setAttribute("note-start",String(l.start)),s.setAttribute("note-end",String(l.end)),s.setAttribute("note-pitch",String(n)),s.setAttribute("note-noise",String(i)),s.setAttribute("note-bar",String(t)),s.setAttribute("note-color",String(h.getAttribute("fill"))),_t.appendChild(s);en[t].push(s)}}}}const d="classic"==zt.elements.spLayout.value||"classic"==window.localStorage.getItem("spLayout"),m="top"==zt.elements.spLayout.value||"top"==window.localStorage.getItem("spLayout"),y="shitbox4"==zt.elements.spLayout.value||"shitbox4"==window.localStorage.getItem("spLayout"),g="boxbeep"==zt.elements.spLayout.value||"boxbeep"==window.localStorage.getItem("spLayout"),v="piano"==zt.elements.spLayout.value||"piano"==window.localStorage.getItem("spLayout"),b="vertical"==zt.elements.spLayout.value||"vertical"==window.localStorage.getItem("spLayout"),w="middle"==zt.elements.spLayout.value||"middle"==window.localStorage.getItem("spLayout");dt&&(d||g||y||v||w?bn.style.gridTemplateRows="78vh 7.4vh":m?bn.style.gridTemplateRows="7.4vh 78vh":d||g||y||v||w||b||(bn.style.gridTemplateRows="78vh 7.4vh"))}Gn();const u=Xt.getBoundingClientRect();!function(e,t,n,i,a){if(null==a)return;e.innerHTML="",e.style.width=t+"px",e.style.height=n+"px";const s=12*i+1,o=t/s,r=n;for(let n=0;n<s;n++){const i=(n+h.keys[a.key].basePitch)%h.pitchesPerOctave,l=h.keys[i].isWhiteKey?"white":"black";e.appendChild(ut({x:n/s*t,y:0,width:o,height:r,stroke:"rgba(0, 0, 0, 0.5)","stroke-width":2,"original-fill":l,fill:l}))}}(Jt,t,u.height,n,Ft.song)}function En(e,t,n,i,a,s,o,r){let l=`M ${a+o*(t+n[0].time)} ${s-e*r+i*(n[0].size/h.noteSizeMax)} `;for(let p=0;p<n.length;p++){const c=n[p];l+=`L ${a+o*(t+c.time)} ${s-r*(e+c.interval)-i*(c.size/h.noteSizeMax)} `}for(let p=n.length-1;p>=0;p--){const c=n[p];l+=`L ${a+o*(t+c.time)} ${s-r*(e+c.interval)+i*(c.size/h.noteSizeMax)} `}return l}function An(){Ft.playing?(Rt.classList.remove("playButton"),Rt.classList.add("pauseButton"),Rt.title="Pause (Space)",Rt.textContent="Pause"):(Rt.classList.remove("pauseButton"),Rt.classList.add("playButton"),Rt.title="Play (Space)",Rt.textContent="Play"),wt=Ft.playing}function Rn(){Bt.setAttribute("fill",-1==Ft.loopRepeatCount?te.linkAccent:te.uiWidgetBackground)}function Nn(){Ut.style.color=St?te.linkAccent:te.uiWidgetBackground}return top!==self?(Ot.style.display="none",Gt.style.display="none"):(Lt.style.display="none","share"in navigator||(Gt.style.display="none")),null!=Sn("volume")&&($t.value=Sn("volume")),On(),window.addEventListener("resize",(function(){Jt.style.width="0",Ln()})),window.addEventListener("keydown",(function(e){switch(e.keyCode){case 70:Ft.playhead=0,Ft.computeLatestModValues(),e.preventDefault();break;case 32:zn(),Ft.computeLatestModValues(),e.preventDefault();break;case 219:Ft.goToPrevBar(),Ft.computeLatestModValues(),Gn(),e.preventDefault();break;case 221:Ft.goToNextBar(),Ft.computeLatestModValues(),Gn(),e.preventDefault();break;case 80:e.shiftKey&&(Mn(),location.href="../#"+Ft.song.toBase64String(),e.preventDefault())}})),_t.addEventListener("mousedown",(function(e){At=!0,In(e)})),window.addEventListener("mousemove",In),window.addEventListener("mouseup",Dn),_t.addEventListener("touchstart",(function(e){At=!0,Cn(e)})),_t.addEventListener("touchmove",Cn),_t.addEventListener("touchend",Dn),_t.addEventListener("touchcancel",Dn),document.addEventListener("visibilitychange",(e=>{"visible"===document.visibilityState&&Sn("spLayout")!=zt.elements.spLayout.value&&(zt.elements.spLayout.value=Sn("spLayout"),et.setLayout(zt.elements.spLayout.value),Ln())})),Ht.addEventListener("click",(function(){vn.style.display="flex"})),Pt.addEventListener("click",(function(){vn.style.display="none"})),Tt.addEventListener("click",(function(){et.setLayout(zt.elements.spLayout.value),vn.style.display="none",window.localStorage.setItem("spLayout",zt.elements.spLayout.value),Ln()})),Rt.addEventListener("click",zn),Wt.addEventListener("click",(function(){-1==Ft.loopRepeatCount?Ft.loopRepeatCount=0:Ft.loopRepeatCount=-1,Rn()})),$t.addEventListener("input",(function(){wn("volume",$t.value),On()})),Qt.addEventListener("click",(function(){St=!St,Nn(),Ln()})),Ot.addEventListener("click",(function(){let e;if(e=navigator,e.clipboard&&e.clipboard.writeText)return void e.clipboard.writeText(location.href).catch((()=>{window.prompt("Copy to clipboard:",location.href)}));const t=document.createElement("textarea");t.textContent=location.href,document.body.appendChild(t),t.select();const n=document.execCommand("copy");t.remove(),n||window.prompt("Copy this:",location.href)})),Gt.addEventListener("click",(function(){navigator.share({url:location.href})})),window.addEventListener("hashchange",Mn),Et.addEventListener("click",(function(){window.open("https://tinyurl.com/api-create.php?url="+encodeURIComponent(new URL("#song="+Ft.song.toBase64String(),location.href).href))})),Mn(),Rn(),Nn(),An(),e.Channel=je,e.Config=h,e.Instrument=Ue,e.Note=De,e.Pattern=Oe,e.Synth=Ze,Object.defineProperty(e,"pe",{value:!0}),e}({});
//# sourceMappingURL=beepbox_player.min.js.map